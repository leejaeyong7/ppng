/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const so="156",ai={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},li={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Xh=0,Ta=1,qh=2,_d=3,yd=0,pl=1,Yh=2,an=3,In=0,Ae=1,ln=2,vd=2,Tn=0,gi=1,Aa=2,Ra=3,Ia=4,jh=5,hi=100,$h=101,Zh=102,Ca=103,La=104,Jh=200,Kh=201,Qh=202,tu=203,ml=204,gl=205,eu=206,nu=207,iu=208,ru=209,su=210,ou=0,au=1,lu=2,eo=3,cu=4,hu=5,uu=6,fu=7,qr=0,du=1,pu=2,An=0,mu=1,gu=2,_u=3,yu=4,vu=5,oo=300,Cn=301,Gn=302,Tr=303,Ar=304,ir=306,Rr=1e3,Te=1001,Ir=1002,ue=1003,no=1004,xd=1004,br=1005,bd=1005,re=1006,_l=1007,Sd=1007,Hn=1008,Md=1008,Rn=1009,xu=1010,bu=1011,ao=1012,yl=1013,En=1014,cn=1015,Vn=1016,vl=1017,xl=1018,Fn=1020,Su=1021,Fe=1023,Mu=1024,wu=1025,Bn=1026,vi=1027,bl=1028,Sl=1029,Eu=1030,Ml=1031,wl=1033,Ys=33776,js=33777,$s=33778,Zs=33779,Pa=35840,Ua=35841,Na=35842,Da=35843,Tu=36196,Oa=37492,Fa=37496,Ba=37808,za=37809,ka=37810,Ga=37811,Ha=37812,Va=37813,Wa=37814,Xa=37815,qa=37816,Ya=37817,ja=37818,$a=37819,Za=37820,Ja=37821,Js=36492,Ka=36494,Qa=36495,Au=36283,tl=36284,el=36285,nl=36286,Ru=2200,Iu=2201,Cu=2202,Cr=2300,Lr=2301,Ks=2302,fi=2400,di=2401,Pr=2402,lo=2500,El=2501,wd=0,Ed=1,Td=2,Tl=3e3,zn=3001,Lu=3200,Pu=3201,Xn=0,Uu=1,kn="",ne="srgb",Qe="srgb-linear",Yr="display-p3",Ad="display-p3-linear",Rd=0,Qs=7680,Id=7681,Cd=7682,Ld=7683,Pd=34055,Ud=34056,Nd=5386,Dd=512,Od=513,Fd=514,Bd=515,zd=516,kd=517,Gd=518,Nu=519,Du=512,Ou=513,Fu=514,Bu=515,zu=516,ku=517,Gu=518,Hu=519,Ur=35044,Hd=35048,Vd=35040,Wd=35045,Xd=35049,qd=35041,Yd=35046,jd=35050,$d=35042,Zd="100",il="300 es",io=1035,hn=2e3,Nr=2001;class fn{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const we=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let uc=1234567;const _i=Math.PI/180,tr=180/Math.PI;function We(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(we[r&255]+we[r>>8&255]+we[r>>16&255]+we[r>>24&255]+"-"+we[t&255]+we[t>>8&255]+"-"+we[t>>16&15|64]+we[t>>24&255]+"-"+we[e&63|128]+we[e>>8&255]+"-"+we[e>>16&255]+we[e>>24&255]+we[n&255]+we[n>>8&255]+we[n>>16&255]+we[n>>24&255]).toLowerCase()}function le(r,t,e){return Math.max(t,Math.min(e,r))}function Al(r,t){return(r%t+t)%t}function Jd(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function Kd(r,t,e){return r!==t?(e-r)/(t-r):0}function Sr(r,t,e){return(1-e)*r+e*t}function Qd(r,t,e,n){return Sr(r,t,1-Math.exp(-e*n))}function tp(r,t=1){return t-Math.abs(Al(r,t*2)-t)}function ep(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function np(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function ip(r,t){return r+Math.floor(Math.random()*(t-r+1))}function rp(r,t){return r+Math.random()*(t-r)}function sp(r){return r*(.5-Math.random())}function op(r){r!==void 0&&(uc=r);let t=uc+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function ap(r){return r*_i}function lp(r){return r*tr}function rl(r){return(r&r-1)===0&&r!==0}function Vu(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ro(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function cp(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),c=s((t+n)/2),u=o((t+n)/2),d=s((t-n)/2),p=o((t-n)/2),m=s((n-t)/2),h=o((n-t)/2);switch(i){case"XYX":r.set(a*u,l*d,l*p,a*c);break;case"YZY":r.set(l*p,a*u,l*d,a*c);break;case"ZXZ":r.set(l*d,l*p,a*u,a*c);break;case"XZX":r.set(a*u,l*h,l*m,a*c);break;case"YXY":r.set(l*m,a*u,l*h,a*c);break;case"ZYZ":r.set(l*h,l*m,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Be(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Vt(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Wu={DEG2RAD:_i,RAD2DEG:tr,generateUUID:We,clamp:le,euclideanModulo:Al,mapLinear:Jd,inverseLerp:Kd,lerp:Sr,damp:Qd,pingpong:tp,smoothstep:ep,smootherstep:np,randInt:ip,randFloat:rp,randFloatSpread:sp,seededRandom:op,degToRad:ap,radToDeg:lp,isPowerOfTwo:rl,ceilPowerOfTwo:Vu,floorPowerOfTwo:ro,setQuaternionFromProperEuler:cp,normalize:Vt,denormalize:Be};class wt{constructor(t=0,e=0){wt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(le(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xt{constructor(t,e,n,i,s,o,a,l,c){Xt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c)}set(t,e,n,i,s,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],d=n[7],p=n[2],m=n[5],h=n[8],g=i[0],y=i[3],_=i[6],M=i[1],v=i[4],x=i[7],w=i[2],b=i[5],E=i[8];return s[0]=o*g+a*M+l*w,s[3]=o*y+a*v+l*b,s[6]=o*_+a*x+l*E,s[1]=c*g+u*M+d*w,s[4]=c*y+u*v+d*b,s[7]=c*_+u*x+d*E,s[2]=p*g+m*M+h*w,s[5]=p*y+m*v+h*b,s[8]=p*_+m*x+h*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],d=u*o-a*c,p=a*l-u*s,m=c*s-o*l,h=e*d+n*p+i*m;if(h===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/h;return t[0]=d*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=p*g,t[4]=(u*e-i*l)*g,t[5]=(i*s-a*e)*g,t[6]=m*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*s)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ho.makeScale(t,e)),this}rotate(t){return this.premultiply(Ho.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ho.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ho=new Xt;function Xu(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}const hp={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ji(r,t){return new hp[r](t)}function Dr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function qu(){const r=Dr("canvas");return r.style.display="block",r}const fc={};function Mr(r){r in fc||(fc[r]=!0,console.warn(r))}function Ki(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const up=new Xt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),fp=new Xt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function dp(r){return r.convertSRGBToLinear().applyMatrix3(fp)}function pp(r){return r.applyMatrix3(up).convertLinearToSRGB()}const mp={[Qe]:r=>r,[ne]:r=>r.convertSRGBToLinear(),[Yr]:dp},gp={[Qe]:r=>r,[ne]:r=>r.convertLinearToSRGB(),[Yr]:pp},Ye={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return Qe},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,t,e){if(this.enabled===!1||t===e||!t||!e)return r;const n=mp[t],i=gp[e];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${t}" to "${e}".`);return i(n(r))},fromWorkingColorSpace:function(r,t){return this.convert(r,this.workingColorSpace,t)},toWorkingColorSpace:function(r,t){return this.convert(r,t,this.workingColorSpace)}};let Ti;class Rl{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Ti===void 0&&(Ti=Dr("canvas")),Ti.width=t.width,Ti.height=t.height;const n=Ti.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Ti}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Dr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Ki(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ki(e[n]/255)*255):e[n]=Ki(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let _p=0;class pi{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:_p++}),this.uuid=We(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Wo(i[o].image)):s.push(Wo(i[o]))}else s=Wo(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function Wo(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Rl.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let yp=0;class fe extends fn{constructor(t=fe.DEFAULT_IMAGE,e=fe.DEFAULT_MAPPING,n=Te,i=Te,s=re,o=Hn,a=Fe,l=Rn,c=fe.DEFAULT_ANISOTROPY,u=kn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:yp++}),this.uuid=We(),this.name="",this.source=new pi(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new wt(0,0),this.repeat=new wt(1,1),this.center=new wt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(Mr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===zn?ne:kn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==oo)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Rr:t.x=t.x-Math.floor(t.x);break;case Te:t.x=t.x<0?0:1;break;case Ir:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Rr:t.y=t.y-Math.floor(t.y);break;case Te:t.y=t.y<0?0:1;break;case Ir:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Mr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ne?zn:Tl}set encoding(t){Mr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===zn?ne:kn}}fe.DEFAULT_IMAGE=null;fe.DEFAULT_MAPPING=oo;fe.DEFAULT_ANISOTROPY=1;class Qt{constructor(t=0,e=0,n=0,i=1){Qt.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const l=t.elements,c=l[0],u=l[4],d=l[8],p=l[1],m=l[5],h=l[9],g=l[2],y=l[6],_=l[10];if(Math.abs(u-p)<.01&&Math.abs(d-g)<.01&&Math.abs(h-y)<.01){if(Math.abs(u+p)<.1&&Math.abs(d+g)<.1&&Math.abs(h+y)<.1&&Math.abs(c+m+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(c+1)/2,x=(m+1)/2,w=(_+1)/2,b=(u+p)/4,E=(d+g)/4,L=(h+y)/4;return v>x&&v>w?v<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(v),i=b/n,s=E/n):x>w?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=b/i,s=L/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=E/s,i=L/s),this.set(n,i,s,e),this}let M=Math.sqrt((y-h)*(y-h)+(d-g)*(d-g)+(p-u)*(p-u));return Math.abs(M)<.001&&(M=1),this.x=(y-h)/M,this.y=(d-g)/M,this.z=(p-u)/M,this.w=Math.acos((c+m+_-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yu extends fn{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Qt(0,0,t,e),this.scissorTest=!1,this.viewport=new Qt(0,0,t,e);const i={width:t,height:e,depth:1};n.encoding!==void 0&&(Mr("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===zn?ne:kn),this.texture=new fe(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:re,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new pi(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class tn extends Yu{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class co extends fe{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ue,this.minFilter=ue,this.wrapR=Te,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vp extends tn{constructor(t=1,e=1,n=1){super(t,e),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new co(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Or extends fe{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ue,this.minFilter=ue,this.wrapR=Te,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xp extends tn{constructor(t=1,e=1,n=1){super(t,e),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Or(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class bp extends tn{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}}class Se{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],d=n[i+3];const p=s[o+0],m=s[o+1],h=s[o+2],g=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=d;return}if(a===1){t[e+0]=p,t[e+1]=m,t[e+2]=h,t[e+3]=g;return}if(d!==g||l!==p||c!==m||u!==h){let y=1-a;const _=l*p+c*m+u*h+d*g,M=_>=0?1:-1,v=1-_*_;if(v>Number.EPSILON){const w=Math.sqrt(v),b=Math.atan2(w,_*M);y=Math.sin(y*b)/w,a=Math.sin(a*b)/w}const x=a*M;if(l=l*y+p*x,c=c*y+m*x,u=u*y+h*x,d=d*y+g*x,y===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+d*d);l*=w,c*=w,u*=w,d*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=d}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],d=s[o],p=s[o+1],m=s[o+2],h=s[o+3];return t[e]=a*h+u*d+l*m-c*p,t[e+1]=l*h+u*p+c*d-a*m,t[e+2]=c*h+u*m+a*p-l*d,t[e+3]=u*h-a*d-l*p-c*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),d=a(s/2),p=l(n/2),m=l(i/2),h=l(s/2);switch(o){case"XYZ":this._x=p*u*d+c*m*h,this._y=c*m*d-p*u*h,this._z=c*u*h+p*m*d,this._w=c*u*d-p*m*h;break;case"YXZ":this._x=p*u*d+c*m*h,this._y=c*m*d-p*u*h,this._z=c*u*h-p*m*d,this._w=c*u*d+p*m*h;break;case"ZXY":this._x=p*u*d-c*m*h,this._y=c*m*d+p*u*h,this._z=c*u*h+p*m*d,this._w=c*u*d-p*m*h;break;case"ZYX":this._x=p*u*d-c*m*h,this._y=c*m*d+p*u*h,this._z=c*u*h-p*m*d,this._w=c*u*d+p*m*h;break;case"YZX":this._x=p*u*d+c*m*h,this._y=c*m*d+p*u*h,this._z=c*u*h-p*m*d,this._w=c*u*d-p*m*h;break;case"XZY":this._x=p*u*d-c*m*h,this._y=c*m*d-p*u*h,this._z=c*u*h+p*m*d,this._w=c*u*d+p*m*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],d=e[10],p=n+a+d;if(p>0){const m=.5/Math.sqrt(p+1);this._w=.25/m,this._x=(u-l)*m,this._y=(s-c)*m,this._z=(o-i)*m}else if(n>a&&n>d){const m=2*Math.sqrt(1+n-a-d);this._w=(u-l)/m,this._x=.25*m,this._y=(i+o)/m,this._z=(s+c)/m}else if(a>d){const m=2*Math.sqrt(1+a-n-d);this._w=(s-c)/m,this._x=(i+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+d-n-a);this._w=(o-i)/m,this._x=(s+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(le(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-e;return this._w=m*o+e*this._w,this._x=m*n+e*this._x,this._y=m*i+e*this._y,this._z=m*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),d=Math.sin((1-e)*u)/c,p=Math.sin(e*u)/c;return this._w=o*d+this._w*p,this._x=n*d+this._x*p,this._y=i*d+this._y*p,this._z=s*d+this._z*p,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(s),n*Math.cos(s),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class W{constructor(t=0,e=0,n=0){W.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(dc.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(dc.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-s*i,d=l*i+s*n-o*e,p=-s*e-o*n-a*i;return this.x=c*l+p*-s+u*-a-d*-o,this.y=u*l+p*-o+d*-s-c*-a,this.z=d*l+p*-a+c*-o-u*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Xo.copy(this).projectOnVector(t),this.sub(Xo)}reflect(t){return this.sub(Xo.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(le(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Xo=new W,dc=new Se;class dn{constructor(t=new W(1/0,1/0,1/0),e=new W(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(_n.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(_n.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=_n.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),Ai.copy(t.boundingBox),Ai.applyMatrix4(t.matrixWorld),this.union(Ai);else{const i=t.geometry;if(i!==void 0)if(e&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,a=s.count;o<a;o++)_n.fromBufferAttribute(s,o).applyMatrix4(t.matrixWorld),this.expandByPoint(_n)}else i.boundingBox===null&&i.computeBoundingBox(),Ai.copy(i.boundingBox),Ai.applyMatrix4(t.matrixWorld),this.union(Ai)}const n=t.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,_n),_n.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(cr),ss.subVectors(this.max,cr),Ri.subVectors(t.a,cr),Ii.subVectors(t.b,cr),Ci.subVectors(t.c,cr),Pn.subVectors(Ii,Ri),Un.subVectors(Ci,Ii),Kn.subVectors(Ri,Ci);let e=[0,-Pn.z,Pn.y,0,-Un.z,Un.y,0,-Kn.z,Kn.y,Pn.z,0,-Pn.x,Un.z,0,-Un.x,Kn.z,0,-Kn.x,-Pn.y,Pn.x,0,-Un.y,Un.x,0,-Kn.y,Kn.x,0];return!qo(e,Ri,Ii,Ci,ss)||(e=[1,0,0,0,1,0,0,0,1],!qo(e,Ri,Ii,Ci,ss))?!1:(os.crossVectors(Pn,Un),e=[os.x,os.y,os.z],qo(e,Ri,Ii,Ci,ss))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,_n).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(_n).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(gn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),gn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),gn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),gn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),gn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),gn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),gn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),gn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(gn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const gn=[new W,new W,new W,new W,new W,new W,new W,new W],_n=new W,Ai=new dn,Ri=new W,Ii=new W,Ci=new W,Pn=new W,Un=new W,Kn=new W,cr=new W,ss=new W,os=new W,Qn=new W;function qo(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Qn.fromArray(r,s);const a=i.x*Math.abs(Qn.x)+i.y*Math.abs(Qn.y)+i.z*Math.abs(Qn.z),l=t.dot(Qn),c=e.dot(Qn),u=n.dot(Qn);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const Sp=new dn,hr=new W,Yo=new W;class nn{constructor(t=new W,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):Sp.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;hr.subVectors(t,this.center);const e=hr.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(hr,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Yo.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(hr.copy(t.center).add(Yo)),this.expandByPoint(hr.copy(t.center).sub(Yo))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const yn=new W,jo=new W,as=new W,Nn=new W,$o=new W,ls=new W,Zo=new W;class Mi{constructor(t=new W,e=new W(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,yn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=yn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(yn.copy(this.origin).addScaledVector(this.direction,e),yn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){jo.copy(t).add(e).multiplyScalar(.5),as.copy(e).sub(t).normalize(),Nn.copy(this.origin).sub(jo);const s=t.distanceTo(e)*.5,o=-this.direction.dot(as),a=Nn.dot(this.direction),l=-Nn.dot(as),c=Nn.lengthSq(),u=Math.abs(1-o*o);let d,p,m,h;if(u>0)if(d=o*l-a,p=o*a-l,h=s*u,d>=0)if(p>=-h)if(p<=h){const g=1/u;d*=g,p*=g,m=d*(d+o*p+2*a)+p*(o*d+p+2*l)+c}else p=s,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+c;else p=-s,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+c;else p<=-h?(d=Math.max(0,-(-o*s+a)),p=d>0?-s:Math.min(Math.max(-s,-l),s),m=-d*d+p*(p+2*l)+c):p<=h?(d=0,p=Math.min(Math.max(-s,-l),s),m=p*(p+2*l)+c):(d=Math.max(0,-(o*s+a)),p=d>0?s:Math.min(Math.max(-s,-l),s),m=-d*d+p*(p+2*l)+c);else p=o>0?-s:s,d=Math.max(0,-(o*p+a)),m=-d*d+p*(p+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,d),i&&i.copy(jo).addScaledVector(as,p),m}intersectSphere(t,e){yn.subVectors(t.center,this.origin);const n=yn.dot(this.direction),i=yn.dot(yn)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,p=this.origin;return c>=0?(n=(t.min.x-p.x)*c,i=(t.max.x-p.x)*c):(n=(t.max.x-p.x)*c,i=(t.min.x-p.x)*c),u>=0?(s=(t.min.y-p.y)*u,o=(t.max.y-p.y)*u):(s=(t.max.y-p.y)*u,o=(t.min.y-p.y)*u),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),d>=0?(a=(t.min.z-p.z)*d,l=(t.max.z-p.z)*d):(a=(t.max.z-p.z)*d,l=(t.min.z-p.z)*d),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,yn)!==null}intersectTriangle(t,e,n,i,s){$o.subVectors(e,t),ls.subVectors(n,t),Zo.crossVectors($o,ls);let o=this.direction.dot(Zo),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Nn.subVectors(this.origin,t);const l=a*this.direction.dot(ls.crossVectors(Nn,ls));if(l<0)return null;const c=a*this.direction.dot($o.cross(Nn));if(c<0||l+c>o)return null;const u=-a*Nn.dot(Zo);return u<0?null:this.at(u/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class zt{constructor(t,e,n,i,s,o,a,l,c,u,d,p,m,h,g,y){zt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c,u,d,p,m,h,g,y)}set(t,e,n,i,s,o,a,l,c,u,d,p,m,h,g,y){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=s,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=u,_[10]=d,_[14]=p,_[3]=m,_[7]=h,_[11]=g,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new zt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Li.setFromMatrixColumn(t,0).length(),s=1/Li.setFromMatrixColumn(t,1).length(),o=1/Li.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),d=Math.sin(s);if(t.order==="XYZ"){const p=o*u,m=o*d,h=a*u,g=a*d;e[0]=l*u,e[4]=-l*d,e[8]=c,e[1]=m+h*c,e[5]=p-g*c,e[9]=-a*l,e[2]=g-p*c,e[6]=h+m*c,e[10]=o*l}else if(t.order==="YXZ"){const p=l*u,m=l*d,h=c*u,g=c*d;e[0]=p+g*a,e[4]=h*a-m,e[8]=o*c,e[1]=o*d,e[5]=o*u,e[9]=-a,e[2]=m*a-h,e[6]=g+p*a,e[10]=o*l}else if(t.order==="ZXY"){const p=l*u,m=l*d,h=c*u,g=c*d;e[0]=p-g*a,e[4]=-o*d,e[8]=h+m*a,e[1]=m+h*a,e[5]=o*u,e[9]=g-p*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const p=o*u,m=o*d,h=a*u,g=a*d;e[0]=l*u,e[4]=h*c-m,e[8]=p*c+g,e[1]=l*d,e[5]=g*c+p,e[9]=m*c-h,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const p=o*l,m=o*c,h=a*l,g=a*c;e[0]=l*u,e[4]=g-p*d,e[8]=h*d+m,e[1]=d,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=m*d+h,e[10]=p-g*d}else if(t.order==="XZY"){const p=o*l,m=o*c,h=a*l,g=a*c;e[0]=l*u,e[4]=-d,e[8]=c*u,e[1]=p*d+g,e[5]=o*u,e[9]=m*d-h,e[2]=h*d-m,e[6]=a*u,e[10]=g*d+p}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Mp,t,wp)}lookAt(t,e,n){const i=this.elements;return He.subVectors(t,e),He.lengthSq()===0&&(He.z=1),He.normalize(),Dn.crossVectors(n,He),Dn.lengthSq()===0&&(Math.abs(n.z)===1?He.x+=1e-4:He.z+=1e-4,He.normalize(),Dn.crossVectors(n,He)),Dn.normalize(),cs.crossVectors(He,Dn),i[0]=Dn.x,i[4]=cs.x,i[8]=He.x,i[1]=Dn.y,i[5]=cs.y,i[9]=He.y,i[2]=Dn.z,i[6]=cs.z,i[10]=He.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],d=n[5],p=n[9],m=n[13],h=n[2],g=n[6],y=n[10],_=n[14],M=n[3],v=n[7],x=n[11],w=n[15],b=i[0],E=i[4],L=i[8],T=i[12],P=i[1],G=i[5],X=i[9],$=i[13],O=i[2],B=i[6],C=i[10],Z=i[14],D=i[3],tt=i[7],rt=i[11],U=i[15];return s[0]=o*b+a*P+l*O+c*D,s[4]=o*E+a*G+l*B+c*tt,s[8]=o*L+a*X+l*C+c*rt,s[12]=o*T+a*$+l*Z+c*U,s[1]=u*b+d*P+p*O+m*D,s[5]=u*E+d*G+p*B+m*tt,s[9]=u*L+d*X+p*C+m*rt,s[13]=u*T+d*$+p*Z+m*U,s[2]=h*b+g*P+y*O+_*D,s[6]=h*E+g*G+y*B+_*tt,s[10]=h*L+g*X+y*C+_*rt,s[14]=h*T+g*$+y*Z+_*U,s[3]=M*b+v*P+x*O+w*D,s[7]=M*E+v*G+x*B+w*tt,s[11]=M*L+v*X+x*C+w*rt,s[15]=M*T+v*$+x*Z+w*U,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],d=t[6],p=t[10],m=t[14],h=t[3],g=t[7],y=t[11],_=t[15];return h*(+s*l*d-i*c*d-s*a*p+n*c*p+i*a*m-n*l*m)+g*(+e*l*m-e*c*p+s*o*p-i*o*m+i*c*u-s*l*u)+y*(+e*c*d-e*a*m-s*o*d+n*o*m+s*a*u-n*c*u)+_*(-i*a*u-e*l*d+e*a*p+i*o*d-n*o*p+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],d=t[9],p=t[10],m=t[11],h=t[12],g=t[13],y=t[14],_=t[15],M=d*y*c-g*p*c+g*l*m-a*y*m-d*l*_+a*p*_,v=h*p*c-u*y*c-h*l*m+o*y*m+u*l*_-o*p*_,x=u*g*c-h*d*c+h*a*m-o*g*m-u*a*_+o*d*_,w=h*d*l-u*g*l-h*a*p+o*g*p+u*a*y-o*d*y,b=e*M+n*v+i*x+s*w;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/b;return t[0]=M*E,t[1]=(g*p*s-d*y*s-g*i*m+n*y*m+d*i*_-n*p*_)*E,t[2]=(a*y*s-g*l*s+g*i*c-n*y*c-a*i*_+n*l*_)*E,t[3]=(d*l*s-a*p*s-d*i*c+n*p*c+a*i*m-n*l*m)*E,t[4]=v*E,t[5]=(u*y*s-h*p*s+h*i*m-e*y*m-u*i*_+e*p*_)*E,t[6]=(h*l*s-o*y*s-h*i*c+e*y*c+o*i*_-e*l*_)*E,t[7]=(o*p*s-u*l*s+u*i*c-e*p*c-o*i*m+e*l*m)*E,t[8]=x*E,t[9]=(h*d*s-u*g*s-h*n*m+e*g*m+u*n*_-e*d*_)*E,t[10]=(o*g*s-h*a*s+h*n*c-e*g*c-o*n*_+e*a*_)*E,t[11]=(u*a*s-o*d*s-u*n*c+e*d*c+o*n*m-e*a*m)*E,t[12]=w*E,t[13]=(u*g*i-h*d*i+h*n*p-e*g*p-u*n*y+e*d*y)*E,t[14]=(h*a*i-o*g*i-h*n*l+e*g*l+o*n*y-e*a*y)*E,t[15]=(o*d*i-u*a*i+u*n*l-e*d*l-o*n*p+e*a*p)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,u=o+o,d=a+a,p=s*c,m=s*u,h=s*d,g=o*u,y=o*d,_=a*d,M=l*c,v=l*u,x=l*d,w=n.x,b=n.y,E=n.z;return i[0]=(1-(g+_))*w,i[1]=(m+x)*w,i[2]=(h-v)*w,i[3]=0,i[4]=(m-x)*b,i[5]=(1-(p+_))*b,i[6]=(y+M)*b,i[7]=0,i[8]=(h+v)*E,i[9]=(y-M)*E,i[10]=(1-(p+g))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=Li.set(i[0],i[1],i[2]).length();const o=Li.set(i[4],i[5],i[6]).length(),a=Li.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],$e.copy(this);const c=1/s,u=1/o,d=1/a;return $e.elements[0]*=c,$e.elements[1]*=c,$e.elements[2]*=c,$e.elements[4]*=u,$e.elements[5]*=u,$e.elements[6]*=u,$e.elements[8]*=d,$e.elements[9]*=d,$e.elements[10]*=d,e.setFromRotationMatrix($e),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o,a=hn){const l=this.elements,c=2*s/(e-t),u=2*s/(n-i),d=(e+t)/(e-t),p=(n+i)/(n-i);let m,h;if(a===hn)m=-(o+s)/(o-s),h=-2*o*s/(o-s);else if(a===Nr)m=-o/(o-s),h=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=u,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=h,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,s,o,a=hn){const l=this.elements,c=1/(e-t),u=1/(n-i),d=1/(o-s),p=(e+t)*c,m=(n+i)*u;let h,g;if(a===hn)h=(o+s)*d,g=-2*d;else if(a===Nr)h=s*d,g=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=g,l[14]=-h,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Li=new W,$e=new zt,Mp=new W(0,0,0),wp=new W(1,1,1),Dn=new W,cs=new W,He=new W,pc=new zt,mc=new Se;class jr{constructor(t=0,e=0,n=0,i=jr.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],d=i[2],p=i[6],m=i[10];switch(e){case"XYZ":this._y=Math.asin(le(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(p,c),this._z=0);break;case"YXZ":this._x=Math.asin(-le(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(le(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-le(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(p,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(le(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-le(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return pc.makeRotationFromQuaternion(t),this.setFromRotationMatrix(pc,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return mc.setFromEuler(this),this.setFromQuaternion(mc,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}jr.DEFAULT_ORDER="XYZ";class ho{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Ep=0;const gc=new W,Pi=new Se,vn=new zt,hs=new W,ur=new W,Tp=new W,Ap=new Se,_c=new W(1,0,0),yc=new W(0,1,0),vc=new W(0,0,1),Rp={type:"added"},Ip={type:"removed"};class Jt extends fn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ep++}),this.uuid=We(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Jt.DEFAULT_UP.clone();const t=new W,e=new jr,n=new Se,i=new W(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new zt},normalMatrix:{value:new Xt}}),this.matrix=new zt,this.matrixWorld=new zt,this.matrixAutoUpdate=Jt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Jt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ho,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Pi.setFromAxisAngle(t,e),this.quaternion.multiply(Pi),this}rotateOnWorldAxis(t,e){return Pi.setFromAxisAngle(t,e),this.quaternion.premultiply(Pi),this}rotateX(t){return this.rotateOnAxis(_c,t)}rotateY(t){return this.rotateOnAxis(yc,t)}rotateZ(t){return this.rotateOnAxis(vc,t)}translateOnAxis(t,e){return gc.copy(t).applyQuaternion(this.quaternion),this.position.add(gc.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(_c,t)}translateY(t){return this.translateOnAxis(yc,t)}translateZ(t){return this.translateOnAxis(vc,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(vn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?hs.copy(t):hs.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ur.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?vn.lookAt(ur,hs,this.up):vn.lookAt(hs,ur,this.up),this.quaternion.setFromRotationMatrix(vn),i&&(vn.extractRotation(i.matrixWorld),Pi.setFromRotationMatrix(vn),this.quaternion.premultiply(Pi.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Rp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ip)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),vn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),vn.multiply(t.parent.matrixWorld)),t.applyMatrix4(vn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ur,t,Tp),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ur,Ap,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const s=e[n];(s.matrixWorldAutoUpdate===!0||t===!0)&&s.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const a=i[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const d=l[c];s(t.shapes,d)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),d=o(t.shapes),p=o(t.skeletons),m=o(t.animations),h=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),d.length>0&&(n.shapes=d),p.length>0&&(n.skeletons=p),m.length>0&&(n.animations=m),h.length>0&&(n.nodes=h)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Jt.DEFAULT_UP=new W(0,1,0);Jt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Jt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ze=new W,xn=new W,Jo=new W,bn=new W,Ui=new W,Ni=new W,xc=new W,Ko=new W,Qo=new W,ta=new W;let us=!1;class Oe{constructor(t=new W,e=new W,n=new W){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ze.subVectors(t,e),i.cross(Ze);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){Ze.subVectors(i,e),xn.subVectors(n,e),Jo.subVectors(t,e);const o=Ze.dot(Ze),a=Ze.dot(xn),l=Ze.dot(Jo),c=xn.dot(xn),u=xn.dot(Jo),d=o*c-a*a;if(d===0)return s.set(-2,-1,-1);const p=1/d,m=(c*l-a*u)*p,h=(o*u-a*l)*p;return s.set(1-m-h,h,m)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,bn),bn.x>=0&&bn.y>=0&&bn.x+bn.y<=1}static getUV(t,e,n,i,s,o,a,l){return us===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),us=!0),this.getInterpolation(t,e,n,i,s,o,a,l)}static getInterpolation(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,bn),l.setScalar(0),l.addScaledVector(s,bn.x),l.addScaledVector(o,bn.y),l.addScaledVector(a,bn.z),l}static isFrontFacing(t,e,n,i){return Ze.subVectors(n,e),xn.subVectors(t,e),Ze.cross(xn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ze.subVectors(this.c,this.b),xn.subVectors(this.a,this.b),Ze.cross(xn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,s){return us===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),us=!0),Oe.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}getInterpolation(t,e,n,i,s){return Oe.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return Oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;Ui.subVectors(i,n),Ni.subVectors(s,n),Ko.subVectors(t,n);const l=Ui.dot(Ko),c=Ni.dot(Ko);if(l<=0&&c<=0)return e.copy(n);Qo.subVectors(t,i);const u=Ui.dot(Qo),d=Ni.dot(Qo);if(u>=0&&d<=u)return e.copy(i);const p=l*d-u*c;if(p<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(Ui,o);ta.subVectors(t,s);const m=Ui.dot(ta),h=Ni.dot(ta);if(h>=0&&m<=h)return e.copy(s);const g=m*c-l*h;if(g<=0&&c>=0&&h<=0)return a=c/(c-h),e.copy(n).addScaledVector(Ni,a);const y=u*h-m*d;if(y<=0&&d-u>=0&&m-h>=0)return xc.subVectors(s,i),a=(d-u)/(d-u+(m-h)),e.copy(i).addScaledVector(xc,a);const _=1/(y+g+p);return o=g*_,a=p*_,e.copy(n).addScaledVector(Ui,o).addScaledVector(Ni,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Cp=0;class Re extends fn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cp++}),this.uuid=We(),this.name="",this.type="Material",this.blending=gi,this.side=In,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ml,this.blendDst=gl,this.blendEquation=hi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=eo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Nu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Qs,this.stencilZFail=Qs,this.stencilZPass=Qs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==gi&&(n.blending=this.blending),this.side!==In&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}const ju={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Je={h:0,s:0,l:0},fs={h:0,s:0,l:0};function ea(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class Pt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ne){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ye.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Ye.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ye.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Ye.workingColorSpace){if(t=Al(t,1),e=le(e,0,1),n=le(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=ea(o,s,t+1/3),this.g=ea(o,s,t),this.b=ea(o,s,t-1/3)}return Ye.toWorkingColorSpace(this,i),this}setStyle(t,e=ne){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ne){const n=ju[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ki(t.r),this.g=Ki(t.g),this.b=Ki(t.b),this}copyLinearToSRGB(t){return this.r=Vo(t.r),this.g=Vo(t.g),this.b=Vo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ne){return Ye.fromWorkingColorSpace(Ee.copy(this),t),Math.round(le(Ee.r*255,0,255))*65536+Math.round(le(Ee.g*255,0,255))*256+Math.round(le(Ee.b*255,0,255))}getHexString(t=ne){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ye.workingColorSpace){Ye.fromWorkingColorSpace(Ee.copy(this),e);const n=Ee.r,i=Ee.g,s=Ee.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const d=o-a;switch(c=u<=.5?d/(o+a):d/(2-o-a),o){case n:l=(i-s)/d+(i<s?6:0);break;case i:l=(s-n)/d+2;break;case s:l=(n-i)/d+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Ye.workingColorSpace){return Ye.fromWorkingColorSpace(Ee.copy(this),e),t.r=Ee.r,t.g=Ee.g,t.b=Ee.b,t}getStyle(t=ne){Ye.fromWorkingColorSpace(Ee.copy(this),t);const e=Ee.r,n=Ee.g,i=Ee.b;return t!==ne?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(Je),Je.h+=t,Je.s+=e,Je.l+=n,this.setHSL(Je.h,Je.s,Je.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Je),t.getHSL(fs);const n=Sr(Je.h,fs.h,e),i=Sr(Je.s,fs.s,e),s=Sr(Je.l,fs.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ee=new Pt;Pt.NAMES=ju;class qn extends Re{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Pt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const wn=Lp();function Lp(){const r=new ArrayBuffer(4),t=new Float32Array(r),e=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;!(c&8388608);)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function De(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=le(r,-65504,65504),wn.floatView[0]=r;const t=wn.uint32View[0],e=t>>23&511;return wn.baseTable[e]+((t&8388607)>>wn.shiftTable[e])}function vr(r){const t=r>>10;return wn.uint32View[0]=wn.mantissaTable[wn.offsetTable[t]+(r&1023)]+wn.exponentTable[t],wn.floatView[0]}const Pp={toHalfFloat:De,fromHalfFloat:vr},me=new W,ds=new wt;class te{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Ur,this.updateRange={offset:0,count:-1},this.gpuType=cn,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ds.fromBufferAttribute(this,e),ds.applyMatrix3(t),this.setXY(e,ds.x,ds.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)me.fromBufferAttribute(this,e),me.applyMatrix3(t),this.setXYZ(e,me.x,me.y,me.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)me.fromBufferAttribute(this,e),me.applyMatrix4(t),this.setXYZ(e,me.x,me.y,me.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)me.fromBufferAttribute(this,e),me.applyNormalMatrix(t),this.setXYZ(e,me.x,me.y,me.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)me.fromBufferAttribute(this,e),me.transformDirection(t),this.setXYZ(e,me.x,me.y,me.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Be(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Vt(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Be(e,this.array)),e}setX(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Be(e,this.array)),e}setY(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Be(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Be(e,this.array)),e}setW(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array),s=Vt(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ur&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}class Up extends te{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Np extends te{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Dp extends te{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Op extends te{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Il extends te{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Fp extends te{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Cl extends te{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Bp extends te{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=vr(this.array[t*this.itemSize]);return this.normalized&&(e=Be(e,this.array)),e}setX(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize]=De(e),this}getY(t){let e=vr(this.array[t*this.itemSize+1]);return this.normalized&&(e=Be(e,this.array)),e}setY(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+1]=De(e),this}getZ(t){let e=vr(this.array[t*this.itemSize+2]);return this.normalized&&(e=Be(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+2]=De(e),this}getW(t){let e=vr(this.array[t*this.itemSize+3]);return this.normalized&&(e=Be(e,this.array)),e}setW(t,e){return this.normalized&&(e=Vt(e,this.array)),this.array[t*this.itemSize+3]=De(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array)),this.array[t+0]=De(e),this.array[t+1]=De(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array)),this.array[t+0]=De(e),this.array[t+1]=De(n),this.array[t+2]=De(i),this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array),s=Vt(s,this.array)),this.array[t+0]=De(e),this.array[t+1]=De(n),this.array[t+2]=De(i),this.array[t+3]=De(s),this}}class Nt extends te{constructor(t,e,n){super(new Float32Array(t),e,n)}}class zp extends te{constructor(t,e,n){super(new Float64Array(t),e,n)}}let kp=0;const qe=new zt,na=new Jt,Di=new W,Ve=new dn,fr=new dn,ve=new W;class Yt extends fn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:kp++}),this.uuid=We(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Xu(t)?Cl:Il)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Xt().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return qe.makeRotationFromQuaternion(t),this.applyMatrix4(qe),this}rotateX(t){return qe.makeRotationX(t),this.applyMatrix4(qe),this}rotateY(t){return qe.makeRotationY(t),this.applyMatrix4(qe),this}rotateZ(t){return qe.makeRotationZ(t),this.applyMatrix4(qe),this}translate(t,e,n){return qe.makeTranslation(t,e,n),this.applyMatrix4(qe),this}scale(t,e,n){return qe.makeScale(t,e,n),this.applyMatrix4(qe),this}lookAt(t){return na.lookAt(t),na.updateMatrix(),this.applyMatrix4(na.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Di).negate(),this.translate(Di.x,Di.y,Di.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Nt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new dn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new W(-1/0,-1/0,-1/0),new W(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];Ve.setFromBufferAttribute(s),this.morphTargetsRelative?(ve.addVectors(this.boundingBox.min,Ve.min),this.boundingBox.expandByPoint(ve),ve.addVectors(this.boundingBox.max,Ve.max),this.boundingBox.expandByPoint(ve)):(this.boundingBox.expandByPoint(Ve.min),this.boundingBox.expandByPoint(Ve.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new nn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new W,1/0);return}if(t){const n=this.boundingSphere.center;if(Ve.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];fr.setFromBufferAttribute(a),this.morphTargetsRelative?(ve.addVectors(Ve.min,fr.min),Ve.expandByPoint(ve),ve.addVectors(Ve.max,fr.max),Ve.expandByPoint(ve)):(Ve.expandByPoint(fr.min),Ve.expandByPoint(fr.max))}Ve.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)ve.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(ve));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)ve.fromBufferAttribute(a,c),l&&(Di.fromBufferAttribute(t,c),ve.add(Di)),i=Math.max(i,n.distanceToSquared(ve))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,s=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new te(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let P=0;P<a;P++)c[P]=new W,u[P]=new W;const d=new W,p=new W,m=new W,h=new wt,g=new wt,y=new wt,_=new W,M=new W;function v(P,G,X){d.fromArray(i,P*3),p.fromArray(i,G*3),m.fromArray(i,X*3),h.fromArray(o,P*2),g.fromArray(o,G*2),y.fromArray(o,X*2),p.sub(d),m.sub(d),g.sub(h),y.sub(h);const $=1/(g.x*y.y-y.x*g.y);isFinite($)&&(_.copy(p).multiplyScalar(y.y).addScaledVector(m,-g.y).multiplyScalar($),M.copy(m).multiplyScalar(g.x).addScaledVector(p,-y.x).multiplyScalar($),c[P].add(_),c[G].add(_),c[X].add(_),u[P].add(M),u[G].add(M),u[X].add(M))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let P=0,G=x.length;P<G;++P){const X=x[P],$=X.start,O=X.count;for(let B=$,C=$+O;B<C;B+=3)v(n[B+0],n[B+1],n[B+2])}const w=new W,b=new W,E=new W,L=new W;function T(P){E.fromArray(s,P*3),L.copy(E);const G=c[P];w.copy(G),w.sub(E.multiplyScalar(E.dot(G))).normalize(),b.crossVectors(L,G);const $=b.dot(u[P])<0?-1:1;l[P*4]=w.x,l[P*4+1]=w.y,l[P*4+2]=w.z,l[P*4+3]=$}for(let P=0,G=x.length;P<G;++P){const X=x[P],$=X.start,O=X.count;for(let B=$,C=$+O;B<C;B+=3)T(n[B+0]),T(n[B+1]),T(n[B+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new te(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let p=0,m=n.count;p<m;p++)n.setXYZ(p,0,0,0);const i=new W,s=new W,o=new W,a=new W,l=new W,c=new W,u=new W,d=new W;if(t)for(let p=0,m=t.count;p<m;p+=3){const h=t.getX(p+0),g=t.getX(p+1),y=t.getX(p+2);i.fromBufferAttribute(e,h),s.fromBufferAttribute(e,g),o.fromBufferAttribute(e,y),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),a.fromBufferAttribute(n,h),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,y),a.add(u),l.add(u),c.add(u),n.setXYZ(h,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(y,c.x,c.y,c.z)}else for(let p=0,m=e.count;p<m;p+=3)i.fromBufferAttribute(e,p+0),s.fromBufferAttribute(e,p+1),o.fromBufferAttribute(e,p+2),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),n.setXYZ(p+0,u.x,u.y,u.z),n.setXYZ(p+1,u.x,u.y,u.z),n.setXYZ(p+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ve.fromBufferAttribute(t,e),ve.normalize(),t.setXYZ(e,ve.x,ve.y,ve.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,d=a.normalized,p=new c.constructor(l.length*u);let m=0,h=0;for(let g=0,y=l.length;g<y;g++){a.isInterleavedBufferAttribute?m=l[g]*a.data.stride+a.offset:m=l[g]*u;for(let _=0;_<u;_++)p[h++]=c[m++]}return new te(p,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Yt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,d=c.length;u<d;u++){const p=c[u],m=t(p,n);l.push(m)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let d=0,p=c.length;d<p;d++){const m=c[d];u.push(m.toJSON(t.data))}u.length>0&&(i[l]=u,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const s=t.morphAttributes;for(const c in s){const u=[],d=s[c];for(let p=0,m=d.length;p<m;p++)u.push(d[p].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const bc=new zt,ti=new Mi,ps=new nn,Sc=new W,Oi=new W,Fi=new W,Bi=new W,ia=new W,ms=new W,gs=new wt,_s=new wt,ys=new wt,Mc=new W,wc=new W,Ec=new W,vs=new W,xs=new W;class be extends Jt{constructor(t=new Yt,e=new qn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){ms.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],d=s[l];u!==0&&(ia.fromBufferAttribute(d,t),o?ms.addScaledVector(ia,u):ms.addScaledVector(ia.sub(e),u))}e.add(ms)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ps.copy(n.boundingSphere),ps.applyMatrix4(s),ti.copy(t.ray).recast(t.near),!(ps.containsPoint(ti.origin)===!1&&(ti.intersectSphere(ps,Sc)===null||ti.origin.distanceToSquared(Sc)>(t.far-t.near)**2))&&(bc.copy(s).invert(),ti.copy(t.ray).applyMatrix4(bc),!(n.boundingBox!==null&&ti.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,ti)))}_computeIntersections(t,e,n){let i;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,d=s.attributes.normal,p=s.groups,m=s.drawRange;if(a!==null)if(Array.isArray(o))for(let h=0,g=p.length;h<g;h++){const y=p[h],_=o[y.materialIndex],M=Math.max(y.start,m.start),v=Math.min(a.count,Math.min(y.start+y.count,m.start+m.count));for(let x=M,w=v;x<w;x+=3){const b=a.getX(x),E=a.getX(x+1),L=a.getX(x+2);i=bs(this,_,t,n,c,u,d,b,E,L),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=y.materialIndex,e.push(i))}}else{const h=Math.max(0,m.start),g=Math.min(a.count,m.start+m.count);for(let y=h,_=g;y<_;y+=3){const M=a.getX(y),v=a.getX(y+1),x=a.getX(y+2);i=bs(this,o,t,n,c,u,d,M,v,x),i&&(i.faceIndex=Math.floor(y/3),e.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let h=0,g=p.length;h<g;h++){const y=p[h],_=o[y.materialIndex],M=Math.max(y.start,m.start),v=Math.min(l.count,Math.min(y.start+y.count,m.start+m.count));for(let x=M,w=v;x<w;x+=3){const b=x,E=x+1,L=x+2;i=bs(this,_,t,n,c,u,d,b,E,L),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=y.materialIndex,e.push(i))}}else{const h=Math.max(0,m.start),g=Math.min(l.count,m.start+m.count);for(let y=h,_=g;y<_;y+=3){const M=y,v=y+1,x=y+2;i=bs(this,o,t,n,c,u,d,M,v,x),i&&(i.faceIndex=Math.floor(y/3),e.push(i))}}}}function Gp(r,t,e,n,i,s,o,a){let l;if(t.side===Ae?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side===In,a),l===null)return null;xs.copy(a),xs.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(xs);return c<e.near||c>e.far?null:{distance:c,point:xs.clone(),object:r}}function bs(r,t,e,n,i,s,o,a,l,c){r.getVertexPosition(a,Oi),r.getVertexPosition(l,Fi),r.getVertexPosition(c,Bi);const u=Gp(r,t,e,n,Oi,Fi,Bi,vs);if(u){i&&(gs.fromBufferAttribute(i,a),_s.fromBufferAttribute(i,l),ys.fromBufferAttribute(i,c),u.uv=Oe.getInterpolation(vs,Oi,Fi,Bi,gs,_s,ys,new wt)),s&&(gs.fromBufferAttribute(s,a),_s.fromBufferAttribute(s,l),ys.fromBufferAttribute(s,c),u.uv1=Oe.getInterpolation(vs,Oi,Fi,Bi,gs,_s,ys,new wt),u.uv2=u.uv1),o&&(Mc.fromBufferAttribute(o,a),wc.fromBufferAttribute(o,l),Ec.fromBufferAttribute(o,c),u.normal=Oe.getInterpolation(vs,Oi,Fi,Bi,Mc,wc,Ec,new W),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new W,materialIndex:0};Oe.getNormal(Oi,Fi,Bi,d.normal),u.face=d}return u}class Yn extends Yt{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],d=[];let p=0,m=0;h("z","y","x",-1,-1,n,e,t,o,s,0),h("z","y","x",1,-1,n,e,-t,o,s,1),h("x","z","y",1,1,t,n,e,i,o,2),h("x","z","y",1,-1,t,n,-e,i,o,3),h("x","y","z",1,-1,t,e,n,i,s,4),h("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new Nt(c,3)),this.setAttribute("normal",new Nt(u,3)),this.setAttribute("uv",new Nt(d,2));function h(g,y,_,M,v,x,w,b,E,L,T){const P=x/E,G=w/L,X=x/2,$=w/2,O=b/2,B=E+1,C=L+1;let Z=0,D=0;const tt=new W;for(let rt=0;rt<C;rt++){const U=rt*G-$;for(let N=0;N<B;N++){const H=N*P-X;tt[g]=H*M,tt[y]=U*v,tt[_]=O,c.push(tt.x,tt.y,tt.z),tt[g]=0,tt[y]=0,tt[_]=b>0?1:-1,u.push(tt.x,tt.y,tt.z),d.push(N/E),d.push(1-rt/L),Z+=1}}for(let rt=0;rt<L;rt++)for(let U=0;U<E;U++){const N=p+U+B*rt,H=p+U+B*(rt+1),Y=p+(U+1)+B*(rt+1),et=p+(U+1)+B*rt;l.push(N,H,et),l.push(H,Y,et),D+=6}a.addGroup(m,D,T),m+=D,p+=Z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Yn(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function er(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Pe(r){const t={};for(let e=0;e<r.length;e++){const n=er(r[e]);for(const i in n)t[i]=n[i]}return t}function Hp(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function $u(r){return r.getRenderTarget()===null?r.outputColorSpace:Qe}const Zu={clone:er,merge:Pe};var Vp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Wp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class en extends Re{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Vp,this.fragmentShader=Wp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=er(t.uniforms),this.uniformsGroups=Hp(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class uo extends Jt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new zt,this.projectionMatrix=new zt,this.projectionMatrixInverse=new zt,this.coordinateSystem=hn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class xe extends uo{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=tr*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(_i*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return tr*2*Math.atan(Math.tan(_i*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(_i*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const zi=-90,ki=1;class Ju extends Jt{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new xe(zi,ki,t,e);i.layers=this.layers,this.add(i);const s=new xe(zi,ki,t,e);s.layers=this.layers,this.add(s);const o=new xe(zi,ki,t,e);o.layers=this.layers,this.add(o);const a=new xe(zi,ki,t,e);a.layers=this.layers,this.add(a);const l=new xe(zi,ki,t,e);l.layers=this.layers,this.add(l);const c=new xe(zi,ki,t,e);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,o,a,l]=e;for(const c of e)this.remove(c);if(t===hn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(t===Nr)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const c of e)this.add(c),c.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[i,s,o,a,l,c]=this.children,u=t.getRenderTarget(),d=t.xr.enabled;t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=p,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class $r extends fe{constructor(t,e,n,i,s,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Cn,super(t,e,n,i,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Ku extends tn{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];e.encoding!==void 0&&(Mr("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),e.colorSpace=e.encoding===zn?ne:kn),this.texture=new $r(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:re}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Yn(5,5,5),s=new en({name:"CubemapFromEquirect",uniforms:er(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ae,blending:Tn});s.uniforms.tEquirect.value=e;const o=new be(i,s),a=e.minFilter;return e.minFilter===Hn&&(e.minFilter=re),new Ju(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}const ra=new W,Xp=new W,qp=new Xt;class Mn{constructor(t=new W(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ra.subVectors(n,e).cross(Xp.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(ra),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||qp.getNormalMatrix(t),i=this.coplanarPoint(ra).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ei=new nn,Ss=new W;class fo{constructor(t=new Mn,e=new Mn,n=new Mn,i=new Mn,s=new Mn,o=new Mn){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=hn){const n=this.planes,i=t.elements,s=i[0],o=i[1],a=i[2],l=i[3],c=i[4],u=i[5],d=i[6],p=i[7],m=i[8],h=i[9],g=i[10],y=i[11],_=i[12],M=i[13],v=i[14],x=i[15];if(n[0].setComponents(l-s,p-c,y-m,x-_).normalize(),n[1].setComponents(l+s,p+c,y+m,x+_).normalize(),n[2].setComponents(l+o,p+u,y+h,x+M).normalize(),n[3].setComponents(l-o,p-u,y-h,x-M).normalize(),n[4].setComponents(l-a,p-d,y-g,x-v).normalize(),e===hn)n[5].setComponents(l+a,p+d,y+g,x+v).normalize();else if(e===Nr)n[5].setComponents(a,d,g,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),ei.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),ei.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(ei)}intersectsSprite(t){return ei.center.set(0,0,0),ei.radius=.7071067811865476,ei.applyMatrix4(t.matrixWorld),this.intersectsSphere(ei)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Ss.x=i.normal.x>0?t.max.x:t.min.x,Ss.y=i.normal.y>0?t.max.y:t.min.y,Ss.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Ss)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Qu(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function Yp(r,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const d=c.array,p=c.usage,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,d,p),c.onUploadCallback();let h;if(d instanceof Float32Array)h=r.FLOAT;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)h=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else h=r.UNSIGNED_SHORT;else if(d instanceof Int16Array)h=r.SHORT;else if(d instanceof Uint32Array)h=r.UNSIGNED_INT;else if(d instanceof Int32Array)h=r.INT;else if(d instanceof Int8Array)h=r.BYTE;else if(d instanceof Uint8Array)h=r.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)h=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:h,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,d){const p=u.array,m=u.updateRange;r.bindBuffer(d,c),m.count===-1?r.bufferSubData(d,0,p):(e?r.bufferSubData(d,m.offset*p.BYTES_PER_ELEMENT,p,m.offset,m.count):r.bufferSubData(d,m.offset*p.BYTES_PER_ELEMENT,p.subarray(m.offset,m.offset+m.count)),m.count=-1),u.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const p=n.get(c);(!p||p.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=n.get(c);d===void 0?n.set(c,i(c,u)):d.version<c.version&&(s(d.buffer,c,u),d.version=c.version)}return{get:o,remove:a,update:l}}class Zr extends Yt{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,d=t/a,p=e/l,m=[],h=[],g=[],y=[];for(let _=0;_<u;_++){const M=_*p-o;for(let v=0;v<c;v++){const x=v*d-s;h.push(x,-M,0),g.push(0,0,1),y.push(v/a),y.push(1-_/l)}}for(let _=0;_<l;_++)for(let M=0;M<a;M++){const v=M+c*_,x=M+c*(_+1),w=M+1+c*(_+1),b=M+1+c*_;m.push(v,x,b),m.push(x,w,b)}this.setIndex(m),this.setAttribute("position",new Nt(h,3)),this.setAttribute("normal",new Nt(g,3)),this.setAttribute("uv",new Nt(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Zr(t.width,t.height,t.widthSegments,t.heightSegments)}}var jp=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,$p=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Zp=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Jp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Kp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Qp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,tm=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,em=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,nm=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,im=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,rm=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,sm=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,om=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,am=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,lm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,cm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,um=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,fm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,dm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,pm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,mm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,gm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,_m=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ym=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,vm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,xm=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,bm=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Sm="gl_FragColor = linearToOutputTexel( gl_FragColor );",Mm=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,wm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Em=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Tm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Am=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Rm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Im=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Cm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Lm=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Pm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Um=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Nm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Dm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Om=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Fm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Bm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,zm=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,km=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Gm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Hm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Vm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Wm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,Xm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ym=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,jm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,$m=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Zm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Jm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Km=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Qm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,tg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,eg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ng=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ig=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,rg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,sg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,og=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ag=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,lg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,cg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,hg=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,ug=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,fg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,mg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,gg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,_g=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,yg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,vg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,bg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Mg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,wg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Eg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Tg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Ag=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Rg=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Ig=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Cg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Lg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Pg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Ug=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ng=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Dg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Og=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Fg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Bg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,zg=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,kg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Gg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Hg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Vg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Wg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Xg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,qg=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Yg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,jg=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$g=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Zg=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Kg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Qg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,t_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,e_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,n_=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,i_=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,r_=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,s_=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,o_=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a_=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,l_=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,c_=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,h_=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,u_=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,f_=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,d_=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,p_=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m_=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,g_=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,__=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,y_=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,v_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,x_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,b_=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,S_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,M_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,w_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ht={alphahash_fragment:jp,alphahash_pars_fragment:$p,alphamap_fragment:Zp,alphamap_pars_fragment:Jp,alphatest_fragment:Kp,alphatest_pars_fragment:Qp,aomap_fragment:tm,aomap_pars_fragment:em,begin_vertex:nm,beginnormal_vertex:im,bsdfs:rm,iridescence_fragment:sm,bumpmap_pars_fragment:om,clipping_planes_fragment:am,clipping_planes_pars_fragment:lm,clipping_planes_pars_vertex:cm,clipping_planes_vertex:hm,color_fragment:um,color_pars_fragment:fm,color_pars_vertex:dm,color_vertex:pm,common:mm,cube_uv_reflection_fragment:gm,defaultnormal_vertex:_m,displacementmap_pars_vertex:ym,displacementmap_vertex:vm,emissivemap_fragment:xm,emissivemap_pars_fragment:bm,colorspace_fragment:Sm,colorspace_pars_fragment:Mm,envmap_fragment:wm,envmap_common_pars_fragment:Em,envmap_pars_fragment:Tm,envmap_pars_vertex:Am,envmap_physical_pars_fragment:zm,envmap_vertex:Rm,fog_vertex:Im,fog_pars_vertex:Cm,fog_fragment:Lm,fog_pars_fragment:Pm,gradientmap_pars_fragment:Um,lightmap_fragment:Nm,lightmap_pars_fragment:Dm,lights_lambert_fragment:Om,lights_lambert_pars_fragment:Fm,lights_pars_begin:Bm,lights_toon_fragment:km,lights_toon_pars_fragment:Gm,lights_phong_fragment:Hm,lights_phong_pars_fragment:Vm,lights_physical_fragment:Wm,lights_physical_pars_fragment:Xm,lights_fragment_begin:qm,lights_fragment_maps:Ym,lights_fragment_end:jm,logdepthbuf_fragment:$m,logdepthbuf_pars_fragment:Zm,logdepthbuf_pars_vertex:Jm,logdepthbuf_vertex:Km,map_fragment:Qm,map_pars_fragment:tg,map_particle_fragment:eg,map_particle_pars_fragment:ng,metalnessmap_fragment:ig,metalnessmap_pars_fragment:rg,morphcolor_vertex:sg,morphnormal_vertex:og,morphtarget_pars_vertex:ag,morphtarget_vertex:lg,normal_fragment_begin:cg,normal_fragment_maps:hg,normal_pars_fragment:ug,normal_pars_vertex:fg,normal_vertex:dg,normalmap_pars_fragment:pg,clearcoat_normal_fragment_begin:mg,clearcoat_normal_fragment_maps:gg,clearcoat_pars_fragment:_g,iridescence_pars_fragment:yg,opaque_fragment:vg,packing:xg,premultiplied_alpha_fragment:bg,project_vertex:Sg,dithering_fragment:Mg,dithering_pars_fragment:wg,roughnessmap_fragment:Eg,roughnessmap_pars_fragment:Tg,shadowmap_pars_fragment:Ag,shadowmap_pars_vertex:Rg,shadowmap_vertex:Ig,shadowmask_pars_fragment:Cg,skinbase_vertex:Lg,skinning_pars_vertex:Pg,skinning_vertex:Ug,skinnormal_vertex:Ng,specularmap_fragment:Dg,specularmap_pars_fragment:Og,tonemapping_fragment:Fg,tonemapping_pars_fragment:Bg,transmission_fragment:zg,transmission_pars_fragment:kg,uv_pars_fragment:Gg,uv_pars_vertex:Hg,uv_vertex:Vg,worldpos_vertex:Wg,background_vert:Xg,background_frag:qg,backgroundCube_vert:Yg,backgroundCube_frag:jg,cube_vert:$g,cube_frag:Zg,depth_vert:Jg,depth_frag:Kg,distanceRGBA_vert:Qg,distanceRGBA_frag:t_,equirect_vert:e_,equirect_frag:n_,linedashed_vert:i_,linedashed_frag:r_,meshbasic_vert:s_,meshbasic_frag:o_,meshlambert_vert:a_,meshlambert_frag:l_,meshmatcap_vert:c_,meshmatcap_frag:h_,meshnormal_vert:u_,meshnormal_frag:f_,meshphong_vert:d_,meshphong_frag:p_,meshphysical_vert:m_,meshphysical_frag:g_,meshtoon_vert:__,meshtoon_frag:y_,points_vert:v_,points_frag:x_,shadow_vert:b_,shadow_frag:S_,sprite_vert:M_,sprite_frag:w_},Lt={common:{diffuse:{value:new Pt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Xt},alphaMap:{value:null},alphaMapTransform:{value:new Xt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Xt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Xt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Xt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Xt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Xt},normalScale:{value:new wt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Xt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Xt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Xt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Xt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Pt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Pt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Xt},alphaTest:{value:0},uvTransform:{value:new Xt}},sprite:{diffuse:{value:new Pt(16777215)},opacity:{value:1},center:{value:new wt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Xt},alphaMap:{value:null},alphaMapTransform:{value:new Xt},alphaTest:{value:0}}},Ke={basic:{uniforms:Pe([Lt.common,Lt.specularmap,Lt.envmap,Lt.aomap,Lt.lightmap,Lt.fog]),vertexShader:Ht.meshbasic_vert,fragmentShader:Ht.meshbasic_frag},lambert:{uniforms:Pe([Lt.common,Lt.specularmap,Lt.envmap,Lt.aomap,Lt.lightmap,Lt.emissivemap,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,Lt.fog,Lt.lights,{emissive:{value:new Pt(0)}}]),vertexShader:Ht.meshlambert_vert,fragmentShader:Ht.meshlambert_frag},phong:{uniforms:Pe([Lt.common,Lt.specularmap,Lt.envmap,Lt.aomap,Lt.lightmap,Lt.emissivemap,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,Lt.fog,Lt.lights,{emissive:{value:new Pt(0)},specular:{value:new Pt(1118481)},shininess:{value:30}}]),vertexShader:Ht.meshphong_vert,fragmentShader:Ht.meshphong_frag},standard:{uniforms:Pe([Lt.common,Lt.envmap,Lt.aomap,Lt.lightmap,Lt.emissivemap,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,Lt.roughnessmap,Lt.metalnessmap,Lt.fog,Lt.lights,{emissive:{value:new Pt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ht.meshphysical_vert,fragmentShader:Ht.meshphysical_frag},toon:{uniforms:Pe([Lt.common,Lt.aomap,Lt.lightmap,Lt.emissivemap,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,Lt.gradientmap,Lt.fog,Lt.lights,{emissive:{value:new Pt(0)}}]),vertexShader:Ht.meshtoon_vert,fragmentShader:Ht.meshtoon_frag},matcap:{uniforms:Pe([Lt.common,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,Lt.fog,{matcap:{value:null}}]),vertexShader:Ht.meshmatcap_vert,fragmentShader:Ht.meshmatcap_frag},points:{uniforms:Pe([Lt.points,Lt.fog]),vertexShader:Ht.points_vert,fragmentShader:Ht.points_frag},dashed:{uniforms:Pe([Lt.common,Lt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ht.linedashed_vert,fragmentShader:Ht.linedashed_frag},depth:{uniforms:Pe([Lt.common,Lt.displacementmap]),vertexShader:Ht.depth_vert,fragmentShader:Ht.depth_frag},normal:{uniforms:Pe([Lt.common,Lt.bumpmap,Lt.normalmap,Lt.displacementmap,{opacity:{value:1}}]),vertexShader:Ht.meshnormal_vert,fragmentShader:Ht.meshnormal_frag},sprite:{uniforms:Pe([Lt.sprite,Lt.fog]),vertexShader:Ht.sprite_vert,fragmentShader:Ht.sprite_frag},background:{uniforms:{uvTransform:{value:new Xt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ht.background_vert,fragmentShader:Ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Ht.backgroundCube_vert,fragmentShader:Ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ht.cube_vert,fragmentShader:Ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ht.equirect_vert,fragmentShader:Ht.equirect_frag},distanceRGBA:{uniforms:Pe([Lt.common,Lt.displacementmap,{referencePosition:{value:new W},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ht.distanceRGBA_vert,fragmentShader:Ht.distanceRGBA_frag},shadow:{uniforms:Pe([Lt.lights,Lt.fog,{color:{value:new Pt(0)},opacity:{value:1}}]),vertexShader:Ht.shadow_vert,fragmentShader:Ht.shadow_frag}};Ke.physical={uniforms:Pe([Ke.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Xt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Xt},clearcoatNormalScale:{value:new wt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Xt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Xt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Xt},sheen:{value:0},sheenColor:{value:new Pt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Xt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Xt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Xt},transmissionSamplerSize:{value:new wt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Xt},attenuationDistance:{value:0},attenuationColor:{value:new Pt(0)},specularColor:{value:new Pt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Xt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Xt},anisotropyVector:{value:new wt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Xt}}]),vertexShader:Ht.meshphysical_vert,fragmentShader:Ht.meshphysical_frag};const Ms={r:0,b:0,g:0};function E_(r,t,e,n,i,s,o){const a=new Pt(0);let l=s===!0?0:1,c,u,d=null,p=0,m=null;function h(y,_){let M=!1,v=_.isScene===!0?_.background:null;v&&v.isTexture&&(v=(_.backgroundBlurriness>0?e:t).get(v)),v===null?g(a,l):v&&v.isColor&&(g(v,1),M=!0);const x=r.xr.getEnvironmentBlendMode();x==="additive"?n.buffers.color.setClear(0,0,0,1,o):x==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(r.autoClear||M)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),v&&(v.isCubeTexture||v.mapping===ir)?(u===void 0&&(u=new be(new Yn(1,1,1),new en({name:"BackgroundCubeMaterial",uniforms:er(Ke.backgroundCube.uniforms),vertexShader:Ke.backgroundCube.vertexShader,fragmentShader:Ke.backgroundCube.fragmentShader,side:Ae,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,b,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,u.material.toneMapped=v.colorSpace!==ne,(d!==v||p!==v.version||m!==r.toneMapping)&&(u.material.needsUpdate=!0,d=v,p=v.version,m=r.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new be(new Zr(2,2),new en({name:"BackgroundMaterial",uniforms:er(Ke.background.uniforms),vertexShader:Ke.background.vertexShader,fragmentShader:Ke.background.fragmentShader,side:In,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=v.colorSpace!==ne,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(d!==v||p!==v.version||m!==r.toneMapping)&&(c.material.needsUpdate=!0,d=v,p=v.version,m=r.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function g(y,_){y.getRGB(Ms,$u(r)),n.buffers.color.setClear(Ms.r,Ms.g,Ms.b,_,o)}return{getClearColor:function(){return a},setClearColor:function(y,_=1){a.set(y),l=_,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,g(a,l)},render:h}}function T_(r,t,e,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=y(null);let c=l,u=!1;function d(O,B,C,Z,D){let tt=!1;if(o){const rt=g(Z,C,B);c!==rt&&(c=rt,m(c.object)),tt=_(O,Z,C,D),tt&&M(O,Z,C,D)}else{const rt=B.wireframe===!0;(c.geometry!==Z.id||c.program!==C.id||c.wireframe!==rt)&&(c.geometry=Z.id,c.program=C.id,c.wireframe=rt,tt=!0)}D!==null&&e.update(D,r.ELEMENT_ARRAY_BUFFER),(tt||u)&&(u=!1,L(O,B,C,Z),D!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(D).buffer))}function p(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function m(O){return n.isWebGL2?r.bindVertexArray(O):s.bindVertexArrayOES(O)}function h(O){return n.isWebGL2?r.deleteVertexArray(O):s.deleteVertexArrayOES(O)}function g(O,B,C){const Z=C.wireframe===!0;let D=a[O.id];D===void 0&&(D={},a[O.id]=D);let tt=D[B.id];tt===void 0&&(tt={},D[B.id]=tt);let rt=tt[Z];return rt===void 0&&(rt=y(p()),tt[Z]=rt),rt}function y(O){const B=[],C=[],Z=[];for(let D=0;D<i;D++)B[D]=0,C[D]=0,Z[D]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:C,attributeDivisors:Z,object:O,attributes:{},index:null}}function _(O,B,C,Z){const D=c.attributes,tt=B.attributes;let rt=0;const U=C.getAttributes();for(const N in U)if(U[N].location>=0){const Y=D[N];let et=tt[N];if(et===void 0&&(N==="instanceMatrix"&&O.instanceMatrix&&(et=O.instanceMatrix),N==="instanceColor"&&O.instanceColor&&(et=O.instanceColor)),Y===void 0||Y.attribute!==et||et&&Y.data!==et.data)return!0;rt++}return c.attributesNum!==rt||c.index!==Z}function M(O,B,C,Z){const D={},tt=B.attributes;let rt=0;const U=C.getAttributes();for(const N in U)if(U[N].location>=0){let Y=tt[N];Y===void 0&&(N==="instanceMatrix"&&O.instanceMatrix&&(Y=O.instanceMatrix),N==="instanceColor"&&O.instanceColor&&(Y=O.instanceColor));const et={};et.attribute=Y,Y&&Y.data&&(et.data=Y.data),D[N]=et,rt++}c.attributes=D,c.attributesNum=rt,c.index=Z}function v(){const O=c.newAttributes;for(let B=0,C=O.length;B<C;B++)O[B]=0}function x(O){w(O,0)}function w(O,B){const C=c.newAttributes,Z=c.enabledAttributes,D=c.attributeDivisors;C[O]=1,Z[O]===0&&(r.enableVertexAttribArray(O),Z[O]=1),D[O]!==B&&((n.isWebGL2?r:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,B),D[O]=B)}function b(){const O=c.newAttributes,B=c.enabledAttributes;for(let C=0,Z=B.length;C<Z;C++)B[C]!==O[C]&&(r.disableVertexAttribArray(C),B[C]=0)}function E(O,B,C,Z,D,tt,rt){rt===!0?r.vertexAttribIPointer(O,B,C,D,tt):r.vertexAttribPointer(O,B,C,Z,D,tt)}function L(O,B,C,Z){if(n.isWebGL2===!1&&(O.isInstancedMesh||Z.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;v();const D=Z.attributes,tt=C.getAttributes(),rt=B.defaultAttributeValues;for(const U in tt){const N=tt[U];if(N.location>=0){let H=D[U];if(H===void 0&&(U==="instanceMatrix"&&O.instanceMatrix&&(H=O.instanceMatrix),U==="instanceColor"&&O.instanceColor&&(H=O.instanceColor)),H!==void 0){const Y=H.normalized,et=H.itemSize,ut=e.get(H);if(ut===void 0)continue;const ct=ut.buffer,ot=ut.type,dt=ut.bytesPerElement,It=n.isWebGL2===!0&&(ot===r.INT||ot===r.UNSIGNED_INT||H.gpuType===yl);if(H.isInterleavedBufferAttribute){const Mt=H.data,V=Mt.stride,_t=H.offset;if(Mt.isInstancedInterleavedBuffer){for(let ht=0;ht<N.locationSize;ht++)w(N.location+ht,Mt.meshPerAttribute);O.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=Mt.meshPerAttribute*Mt.count)}else for(let ht=0;ht<N.locationSize;ht++)x(N.location+ht);r.bindBuffer(r.ARRAY_BUFFER,ct);for(let ht=0;ht<N.locationSize;ht++)E(N.location+ht,et/N.locationSize,ot,Y,V*dt,(_t+et/N.locationSize*ht)*dt,It)}else{if(H.isInstancedBufferAttribute){for(let Mt=0;Mt<N.locationSize;Mt++)w(N.location+Mt,H.meshPerAttribute);O.isInstancedMesh!==!0&&Z._maxInstanceCount===void 0&&(Z._maxInstanceCount=H.meshPerAttribute*H.count)}else for(let Mt=0;Mt<N.locationSize;Mt++)x(N.location+Mt);r.bindBuffer(r.ARRAY_BUFFER,ct);for(let Mt=0;Mt<N.locationSize;Mt++)E(N.location+Mt,et/N.locationSize,ot,Y,et*dt,et/N.locationSize*Mt*dt,It)}}else if(rt!==void 0){const Y=rt[U];if(Y!==void 0)switch(Y.length){case 2:r.vertexAttrib2fv(N.location,Y);break;case 3:r.vertexAttrib3fv(N.location,Y);break;case 4:r.vertexAttrib4fv(N.location,Y);break;default:r.vertexAttrib1fv(N.location,Y)}}}}b()}function T(){X();for(const O in a){const B=a[O];for(const C in B){const Z=B[C];for(const D in Z)h(Z[D].object),delete Z[D];delete B[C]}delete a[O]}}function P(O){if(a[O.id]===void 0)return;const B=a[O.id];for(const C in B){const Z=B[C];for(const D in Z)h(Z[D].object),delete Z[D];delete B[C]}delete a[O.id]}function G(O){for(const B in a){const C=a[B];if(C[O.id]===void 0)continue;const Z=C[O.id];for(const D in Z)h(Z[D].object),delete Z[D];delete C[O.id]}}function X(){$(),u=!0,c!==l&&(c=l,m(c.object))}function $(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:X,resetDefaultState:$,dispose:T,releaseStatesOfGeometry:P,releaseStatesOfProgram:G,initAttributes:v,enableAttribute:x,disableUnusedAttributes:b}}function A_(r,t,e,n){const i=n.isWebGL2;let s;function o(c){s=c}function a(c,u){r.drawArrays(s,c,u),e.update(u,s,1)}function l(c,u,d){if(d===0)return;let p,m;if(i)p=r,m="drawArraysInstanced";else if(p=t.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[m](s,c,u,d),e.update(u,s,d)}this.setMode=o,this.render=a,this.renderInstances=l}function R_(r,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const E=t.get("EXT_texture_filter_anisotropic");n=r.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(E){if(E==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let a=e.precision!==void 0?e.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,d=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_TEXTURE_SIZE),h=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),M=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),v=p>0,x=o||t.has("OES_texture_float"),w=v&&x,b=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:p,maxTextureSize:m,maxCubemapSize:h,maxAttributes:g,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:M,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:w,maxSamples:b}}function I_(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new Mn,a=new Xt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,p){const m=d.length!==0||p||n!==0||i;return i=p,n=d.length,m},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(d,p){e=u(d,p,0)},this.setState=function(d,p,m){const h=d.clippingPlanes,g=d.clipIntersection,y=d.clipShadows,_=r.get(d);if(!i||h===null||h.length===0||s&&!y)s?u(null):c();else{const M=s?0:n,v=M*4;let x=_.clippingState||null;l.value=x,x=u(h,p,v,m);for(let w=0;w!==v;++w)x[w]=e[w];_.clippingState=x,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=M}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(d,p,m,h){const g=d!==null?d.length:0;let y=null;if(g!==0){if(y=l.value,h!==!0||y===null){const _=m+g*4,M=p.matrixWorldInverse;a.getNormalMatrix(M),(y===null||y.length<_)&&(y=new Float32Array(_));for(let v=0,x=m;v!==g;++v,x+=4)o.copy(d[v]).applyMatrix4(M,a),o.normal.toArray(y,x),y[x+3]=o.constant}l.value=y,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,y}}function C_(r){let t=new WeakMap;function e(o,a){return a===Tr?o.mapping=Cn:a===Ar&&(o.mapping=Gn),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Tr||a===Ar)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Ku(l.height/2);return c.fromEquirectangularTexture(r,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}class po extends uo{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const $i=4,Tc=[.125,.215,.35,.446,.526,.582],ui=20,sa=new po,Ac=new Pt;let oa=null;const ci=(1+Math.sqrt(5))/2,Gi=1/ci,Rc=[new W(1,1,1),new W(-1,1,1),new W(1,1,-1),new W(-1,1,-1),new W(0,ci,Gi),new W(0,ci,-Gi),new W(Gi,0,ci),new W(-Gi,0,ci),new W(ci,Gi,0),new W(-ci,Gi,0)];class sl{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){oa=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Lc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Cc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(oa),t.scissorTest=!1,ws(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Cn||t.mapping===Gn?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),oa=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:re,minFilter:re,generateMipmaps:!1,type:Vn,format:Fe,colorSpace:Qe,depthBuffer:!1},i=Ic(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ic(t,e,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=L_(s)),this._blurMaterial=P_(s,t,e)}return i}_compileMaterial(t){const e=new be(this._lodPlanes[0],t);this._renderer.compile(e,sa)}_sceneToCubeUV(t,e,n,i){const a=new xe(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,p=u.toneMapping;u.getClearColor(Ac),u.toneMapping=An,u.autoClear=!1;const m=new qn({name:"PMREM.Background",side:Ae,depthWrite:!1,depthTest:!1}),h=new be(new Yn,m);let g=!1;const y=t.background;y?y.isColor&&(m.color.copy(y),t.background=null,g=!0):(m.color.copy(Ac),g=!0);for(let _=0;_<6;_++){const M=_%3;M===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):M===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const v=this._cubeSize;ws(i,M*v,_>2?v:0,v,v),u.setRenderTarget(i),g&&u.render(h,a),u.render(t,a)}h.geometry.dispose(),h.material.dispose(),u.toneMapping=p,u.autoClear=d,t.background=y}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Cn||t.mapping===Gn;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Lc()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Cc());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new be(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const l=this._cubeSize;ws(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,sa)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Rc[(i-1)%Rc.length];this._blur(t,i-1,i,s,o)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new be(this._lodPlanes[i],c),p=c.uniforms,m=this._sizeLods[n]-1,h=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*ui-1),g=s/h,y=isFinite(s)?1+Math.floor(u*g):ui;y>ui&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${ui}`);const _=[];let M=0;for(let E=0;E<ui;++E){const L=E/g,T=Math.exp(-L*L/2);_.push(T),E===0?M+=T:E<y&&(M+=2*T)}for(let E=0;E<_.length;E++)_[E]=_[E]/M;p.envMap.value=t.texture,p.samples.value=y,p.weights.value=_,p.latitudinal.value=o==="latitudinal",a&&(p.poleAxis.value=a);const{_lodMax:v}=this;p.dTheta.value=h,p.mipInt.value=v-n;const x=this._sizeLods[i],w=3*x*(i>v-$i?i-v+$i:0),b=4*(this._cubeSize-x);ws(e,w,b,3*x,2*x),l.setRenderTarget(e),l.render(d,sa)}}function L_(r){const t=[],e=[],n=[];let i=r;const s=r-$i+1+Tc.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>r-$i?l=Tc[o-r+$i-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,d=1+c,p=[u,u,d,u,d,d,u,u,d,d,u,d],m=6,h=6,g=3,y=2,_=1,M=new Float32Array(g*h*m),v=new Float32Array(y*h*m),x=new Float32Array(_*h*m);for(let b=0;b<m;b++){const E=b%3*2/3-1,L=b>2?0:-1,T=[E,L,0,E+2/3,L,0,E+2/3,L+1,0,E,L,0,E+2/3,L+1,0,E,L+1,0];M.set(T,g*h*b),v.set(p,y*h*b);const P=[b,b,b,b,b,b];x.set(P,_*h*b)}const w=new Yt;w.setAttribute("position",new te(M,g)),w.setAttribute("uv",new te(v,y)),w.setAttribute("faceIndex",new te(x,_)),t.push(w),i>$i&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Ic(r,t,e){const n=new tn(r,t,e);return n.texture.mapping=ir,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ws(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function P_(r,t,e){const n=new Float32Array(ui),i=new W(0,1,0);return new en({name:"SphericalGaussianBlur",defines:{n:ui,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Ll(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Tn,depthTest:!1,depthWrite:!1})}function Cc(){return new en({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ll(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Tn,depthTest:!1,depthWrite:!1})}function Lc(){return new en({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ll(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Tn,depthTest:!1,depthWrite:!1})}function Ll(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function U_(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Tr||l===Ar,u=l===Cn||l===Gn;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let d=t.get(a);return e===null&&(e=new sl(r)),d=c?e.fromEquirectangular(a,d):e.fromCubemap(a,d),t.set(a,d),d.texture}else{if(t.has(a))return t.get(a).texture;{const d=a.image;if(c&&d&&d.height>0||u&&d&&i(d)){e===null&&(e=new sl(r));const p=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,p),a.addEventListener("dispose",s),p.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function N_(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function D_(r,t,e,n){const i={},s=new WeakMap;function o(d){const p=d.target;p.index!==null&&t.remove(p.index);for(const h in p.attributes)t.remove(p.attributes[h]);for(const h in p.morphAttributes){const g=p.morphAttributes[h];for(let y=0,_=g.length;y<_;y++)t.remove(g[y])}p.removeEventListener("dispose",o),delete i[p.id];const m=s.get(p);m&&(t.remove(m),s.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,e.memory.geometries--}function a(d,p){return i[p.id]===!0||(p.addEventListener("dispose",o),i[p.id]=!0,e.memory.geometries++),p}function l(d){const p=d.attributes;for(const h in p)t.update(p[h],r.ARRAY_BUFFER);const m=d.morphAttributes;for(const h in m){const g=m[h];for(let y=0,_=g.length;y<_;y++)t.update(g[y],r.ARRAY_BUFFER)}}function c(d){const p=[],m=d.index,h=d.attributes.position;let g=0;if(m!==null){const M=m.array;g=m.version;for(let v=0,x=M.length;v<x;v+=3){const w=M[v+0],b=M[v+1],E=M[v+2];p.push(w,b,b,E,E,w)}}else if(h!==void 0){const M=h.array;g=h.version;for(let v=0,x=M.length/3-1;v<x;v+=3){const w=v+0,b=v+1,E=v+2;p.push(w,b,b,E,E,w)}}else return;const y=new(Xu(p)?Cl:Il)(p,1);y.version=g;const _=s.get(d);_&&t.remove(_),s.set(d,y)}function u(d){const p=s.get(d);if(p){const m=d.index;m!==null&&p.version<m.version&&c(d)}else c(d);return s.get(d)}return{get:a,update:l,getWireframeAttribute:u}}function O_(r,t,e,n){const i=n.isWebGL2;let s;function o(p){s=p}let a,l;function c(p){a=p.type,l=p.bytesPerElement}function u(p,m){r.drawElements(s,m,a,p*l),e.update(m,s,1)}function d(p,m,h){if(h===0)return;let g,y;if(i)g=r,y="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[y](s,m,a,p*l,h),e.update(m,s,h)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=d}function F_(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case r.TRIANGLES:e.triangles+=a*(s/3);break;case r.LINES:e.lines+=a*(s/2);break;case r.LINE_STRIP:e.lines+=a*(s-1);break;case r.LINE_LOOP:e.lines+=a*s;break;case r.POINTS:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function B_(r,t){return r[0]-t[0]}function z_(r,t){return Math.abs(t[1])-Math.abs(r[1])}function k_(r,t,e){const n={},i=new Float32Array(8),s=new WeakMap,o=new Qt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,d){const p=c.morphTargetInfluences;if(t.isWebGL2===!0){const h=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=h!==void 0?h.length:0;let y=s.get(u);if(y===void 0||y.count!==g){let B=function(){$.dispose(),s.delete(u),u.removeEventListener("dispose",B)};var m=B;y!==void 0&&y.texture.dispose();const v=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,w=u.morphAttributes.color!==void 0,b=u.morphAttributes.position||[],E=u.morphAttributes.normal||[],L=u.morphAttributes.color||[];let T=0;v===!0&&(T=1),x===!0&&(T=2),w===!0&&(T=3);let P=u.attributes.position.count*T,G=1;P>t.maxTextureSize&&(G=Math.ceil(P/t.maxTextureSize),P=t.maxTextureSize);const X=new Float32Array(P*G*4*g),$=new co(X,P,G,g);$.type=cn,$.needsUpdate=!0;const O=T*4;for(let C=0;C<g;C++){const Z=b[C],D=E[C],tt=L[C],rt=P*G*4*C;for(let U=0;U<Z.count;U++){const N=U*O;v===!0&&(o.fromBufferAttribute(Z,U),X[rt+N+0]=o.x,X[rt+N+1]=o.y,X[rt+N+2]=o.z,X[rt+N+3]=0),x===!0&&(o.fromBufferAttribute(D,U),X[rt+N+4]=o.x,X[rt+N+5]=o.y,X[rt+N+6]=o.z,X[rt+N+7]=0),w===!0&&(o.fromBufferAttribute(tt,U),X[rt+N+8]=o.x,X[rt+N+9]=o.y,X[rt+N+10]=o.z,X[rt+N+11]=tt.itemSize===4?o.w:1)}}y={count:g,texture:$,size:new wt(P,G)},s.set(u,y),u.addEventListener("dispose",B)}let _=0;for(let v=0;v<p.length;v++)_+=p[v];const M=u.morphTargetsRelative?1:1-_;d.getUniforms().setValue(r,"morphTargetBaseInfluence",M),d.getUniforms().setValue(r,"morphTargetInfluences",p),d.getUniforms().setValue(r,"morphTargetsTexture",y.texture,e),d.getUniforms().setValue(r,"morphTargetsTextureSize",y.size)}else{const h=p===void 0?0:p.length;let g=n[u.id];if(g===void 0||g.length!==h){g=[];for(let x=0;x<h;x++)g[x]=[x,0];n[u.id]=g}for(let x=0;x<h;x++){const w=g[x];w[0]=x,w[1]=p[x]}g.sort(z_);for(let x=0;x<8;x++)x<h&&g[x][1]?(a[x][0]=g[x][0],a[x][1]=g[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(B_);const y=u.morphAttributes.position,_=u.morphAttributes.normal;let M=0;for(let x=0;x<8;x++){const w=a[x],b=w[0],E=w[1];b!==Number.MAX_SAFE_INTEGER&&E?(y&&u.getAttribute("morphTarget"+x)!==y[b]&&u.setAttribute("morphTarget"+x,y[b]),_&&u.getAttribute("morphNormal"+x)!==_[b]&&u.setAttribute("morphNormal"+x,_[b]),i[x]=E,M+=E):(y&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),_&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const v=u.morphTargetsRelative?1:1-M;d.getUniforms().setValue(r,"morphTargetBaseInfluence",v),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function G_(r,t,e,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,d=t.get(l,u);if(i.get(d)!==c&&(t.update(d),i.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(e.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&e.update(l.instanceColor,r.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const p=l.skeleton;i.get(p)!==c&&(p.update(),i.set(p,c))}return d}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:o}}const tf=new fe,ef=new co,nf=new Or,rf=new $r,Pc=[],Uc=[],Nc=new Float32Array(16),Dc=new Float32Array(9),Oc=new Float32Array(4);function rr(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=Pc[i];if(s===void 0&&(s=new Float32Array(i),Pc[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function _e(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function ye(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function mo(r,t){let e=Uc[t];e===void 0&&(e=new Int32Array(t),Uc[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function H_(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function V_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(_e(e,t))return;r.uniform2fv(this.addr,t),ye(e,t)}}function W_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(_e(e,t))return;r.uniform3fv(this.addr,t),ye(e,t)}}function X_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(_e(e,t))return;r.uniform4fv(this.addr,t),ye(e,t)}}function q_(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(_e(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),ye(e,t)}else{if(_e(e,n))return;Oc.set(n),r.uniformMatrix2fv(this.addr,!1,Oc),ye(e,n)}}function Y_(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(_e(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),ye(e,t)}else{if(_e(e,n))return;Dc.set(n),r.uniformMatrix3fv(this.addr,!1,Dc),ye(e,n)}}function j_(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(_e(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),ye(e,t)}else{if(_e(e,n))return;Nc.set(n),r.uniformMatrix4fv(this.addr,!1,Nc),ye(e,n)}}function $_(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function Z_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(_e(e,t))return;r.uniform2iv(this.addr,t),ye(e,t)}}function J_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(_e(e,t))return;r.uniform3iv(this.addr,t),ye(e,t)}}function K_(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(_e(e,t))return;r.uniform4iv(this.addr,t),ye(e,t)}}function Q_(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function t0(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(_e(e,t))return;r.uniform2uiv(this.addr,t),ye(e,t)}}function e0(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(_e(e,t))return;r.uniform3uiv(this.addr,t),ye(e,t)}}function n0(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(_e(e,t))return;r.uniform4uiv(this.addr,t),ye(e,t)}}function i0(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||tf,i)}function r0(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||nf,i)}function s0(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||rf,i)}function o0(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||ef,i)}function a0(r){switch(r){case 5126:return H_;case 35664:return V_;case 35665:return W_;case 35666:return X_;case 35674:return q_;case 35675:return Y_;case 35676:return j_;case 5124:case 35670:return $_;case 35667:case 35671:return Z_;case 35668:case 35672:return J_;case 35669:case 35673:return K_;case 5125:return Q_;case 36294:return t0;case 36295:return e0;case 36296:return n0;case 35678:case 36198:case 36298:case 36306:case 35682:return i0;case 35679:case 36299:case 36307:return r0;case 35680:case 36300:case 36308:case 36293:return s0;case 36289:case 36303:case 36311:case 36292:return o0}}function l0(r,t){r.uniform1fv(this.addr,t)}function c0(r,t){const e=rr(t,this.size,2);r.uniform2fv(this.addr,e)}function h0(r,t){const e=rr(t,this.size,3);r.uniform3fv(this.addr,e)}function u0(r,t){const e=rr(t,this.size,4);r.uniform4fv(this.addr,e)}function f0(r,t){const e=rr(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function d0(r,t){const e=rr(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function p0(r,t){const e=rr(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function m0(r,t){r.uniform1iv(this.addr,t)}function g0(r,t){r.uniform2iv(this.addr,t)}function _0(r,t){r.uniform3iv(this.addr,t)}function y0(r,t){r.uniform4iv(this.addr,t)}function v0(r,t){r.uniform1uiv(this.addr,t)}function x0(r,t){r.uniform2uiv(this.addr,t)}function b0(r,t){r.uniform3uiv(this.addr,t)}function S0(r,t){r.uniform4uiv(this.addr,t)}function M0(r,t,e){const n=this.cache,i=t.length,s=mo(e,i);_e(n,s)||(r.uniform1iv(this.addr,s),ye(n,s));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||tf,s[o])}function w0(r,t,e){const n=this.cache,i=t.length,s=mo(e,i);_e(n,s)||(r.uniform1iv(this.addr,s),ye(n,s));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||nf,s[o])}function E0(r,t,e){const n=this.cache,i=t.length,s=mo(e,i);_e(n,s)||(r.uniform1iv(this.addr,s),ye(n,s));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||rf,s[o])}function T0(r,t,e){const n=this.cache,i=t.length,s=mo(e,i);_e(n,s)||(r.uniform1iv(this.addr,s),ye(n,s));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||ef,s[o])}function A0(r){switch(r){case 5126:return l0;case 35664:return c0;case 35665:return h0;case 35666:return u0;case 35674:return f0;case 35675:return d0;case 35676:return p0;case 5124:case 35670:return m0;case 35667:case 35671:return g0;case 35668:case 35672:return _0;case 35669:case 35673:return y0;case 5125:return v0;case 36294:return x0;case 36295:return b0;case 36296:return S0;case 35678:case 36198:case 36298:case 36306:case 35682:return M0;case 35679:case 36299:case 36307:return w0;case 35680:case 36300:case 36308:case 36293:return E0;case 36289:case 36303:case 36311:case 36292:return T0}}class R0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=a0(e.type)}}class I0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=A0(e.type)}}class C0{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(t,e[a.id],n)}}}const aa=/(\w+)(\])?(\[|\.)?/g;function Fc(r,t){r.seq.push(t),r.map[t.id]=t}function L0(r,t,e){const n=r.name,i=n.length;for(aa.lastIndex=0;;){const s=aa.exec(n),o=aa.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Fc(e,c===void 0?new R0(a,r,t):new I0(a,r,t));break}else{let d=e.map[a];d===void 0&&(d=new C0(a),Fc(e,d)),e=d}}}class to{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),o=t.getUniformLocation(e,s.name);L0(s,o,this)}}setValue(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const a=e[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function Bc(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}let P0=0;function U0(r,t){const e=r.split(`
`),n=[],i=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function N0(r){switch(r){case Qe:return["Linear","( value )"];case ne:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function zc(r,t,e){const n=r.getShaderParameter(t,r.COMPILE_STATUS),i=r.getShaderInfoLog(t).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return e.toUpperCase()+`

`+i+`

`+U0(r.getShaderSource(t),o)}else return i}function D0(r,t){const e=N0(t);return"vec4 "+r+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function O0(r,t){let e;switch(t){case mu:e="Linear";break;case gu:e="Reinhard";break;case _u:e="OptimizedCineon";break;case yu:e="ACESFilmic";break;case vu:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function F0(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(xr).join(`
`)}function B0(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function z0(r,t){const e={},n=r.getProgramParameter(t,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function xr(r){return r!==""}function kc(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Gc(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const k0=/^[ \t]*#include +<([\w\d./]+)>/gm;function ol(r){return r.replace(k0,H0)}const G0=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function H0(r,t){let e=Ht[t];if(e===void 0){const n=G0.get(t);if(n!==void 0)e=Ht[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return ol(e)}const V0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Hc(r){return r.replace(V0,W0)}function W0(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Vc(r){let t="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function X0(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===pl?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===Yh?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===an&&(t="SHADOWMAP_TYPE_VSM"),t}function q0(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Cn:case Gn:t="ENVMAP_TYPE_CUBE";break;case ir:t="ENVMAP_TYPE_CUBE_UV";break}return t}function Y0(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Gn:t="ENVMAP_MODE_REFRACTION";break}return t}function j0(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case qr:t="ENVMAP_BLENDING_MULTIPLY";break;case du:t="ENVMAP_BLENDING_MIX";break;case pu:t="ENVMAP_BLENDING_ADD";break}return t}function $0(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function Z0(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=X0(e),c=q0(e),u=Y0(e),d=j0(e),p=$0(e),m=e.isWebGL2?"":F0(e),h=B0(s),g=i.createProgram();let y,_,M=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(y=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,h].filter(xr).join(`
`),y.length>0&&(y+=`
`),_=[m,"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,h].filter(xr).join(`
`),_.length>0&&(_+=`
`)):(y=[Vc(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,h,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(xr).join(`
`),_=[m,Vc(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,h,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+d:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==An?"#define TONE_MAPPING":"",e.toneMapping!==An?Ht.tonemapping_pars_fragment:"",e.toneMapping!==An?O0("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Ht.colorspace_pars_fragment,D0("linearToOutputTexel",e.outputColorSpace),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(xr).join(`
`)),o=ol(o),o=kc(o,e),o=Gc(o,e),a=ol(a),a=kc(a,e),a=Gc(a,e),o=Hc(o),a=Hc(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",e.glslVersion===il?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===il?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const v=M+y+o,x=M+_+a,w=Bc(i,i.VERTEX_SHADER,v),b=Bc(i,i.FRAGMENT_SHADER,x);if(i.attachShader(g,w),i.attachShader(g,b),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(g).trim(),P=i.getShaderInfoLog(w).trim(),G=i.getShaderInfoLog(b).trim();let X=!0,$=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1)if(X=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,g,w,b);else{const O=zc(i,w,"vertex"),B=zc(i,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Program Info Log: `+T+`
`+O+`
`+B)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(P===""||G==="")&&($=!1);$&&(this.diagnostics={runnable:X,programLog:T,vertexShader:{log:P,prefix:y},fragmentShader:{log:G,prefix:_}})}i.deleteShader(w),i.deleteShader(b);let E;this.getUniforms=function(){return E===void 0&&(E=new to(i,g)),E};let L;return this.getAttributes=function(){return L===void 0&&(L=z0(i,g)),L},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=P0++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=b,this}let J0=0;class K0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new Q0(t),e.set(t,n)),n}}class Q0{constructor(t){this.id=J0++,this.code=t,this.usedTimes=0}}function ty(r,t,e,n,i,s,o){const a=new ho,l=new K0,c=[],u=i.isWebGL2,d=i.logarithmicDepthBuffer,p=i.vertexTextures;let m=i.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(T){return T===0?"uv":`uv${T}`}function y(T,P,G,X,$){const O=X.fog,B=$.geometry,C=T.isMeshStandardMaterial?X.environment:null,Z=(T.isMeshStandardMaterial?e:t).get(T.envMap||C),D=Z&&Z.mapping===ir?Z.image.height:null,tt=h[T.type];T.precision!==null&&(m=i.getMaxPrecision(T.precision),m!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",m,"instead."));const rt=B.morphAttributes.position||B.morphAttributes.normal||B.morphAttributes.color,U=rt!==void 0?rt.length:0;let N=0;B.morphAttributes.position!==void 0&&(N=1),B.morphAttributes.normal!==void 0&&(N=2),B.morphAttributes.color!==void 0&&(N=3);let H,Y,et,ut;if(tt){const ie=Ke[tt];H=ie.vertexShader,Y=ie.fragmentShader}else H=T.vertexShader,Y=T.fragmentShader,l.update(T),et=l.getVertexShaderID(T),ut=l.getFragmentShaderID(T);const ct=r.getRenderTarget(),ot=$.isInstancedMesh===!0,dt=!!T.map,It=!!T.matcap,Mt=!!Z,V=!!T.aoMap,_t=!!T.lightMap,ht=!!T.bumpMap,Q=!!T.normalMap,nt=!!T.displacementMap,yt=!!T.emissiveMap,lt=!!T.metalnessMap,K=!!T.roughnessMap,st=T.anisotropy>0,mt=T.clearcoat>0,Tt=T.iridescence>0,F=T.sheen>0,f=T.transmission>0,S=st&&!!T.anisotropyMap,A=mt&&!!T.clearcoatMap,z=mt&&!!T.clearcoatNormalMap,R=mt&&!!T.clearcoatRoughnessMap,I=Tt&&!!T.iridescenceMap,q=Tt&&!!T.iridescenceThicknessMap,j=F&&!!T.sheenColorMap,k=F&&!!T.sheenRoughnessMap,at=!!T.specularMap,St=!!T.specularColorMap,vt=!!T.specularIntensityMap,Rt=f&&!!T.transmissionMap,Dt=f&&!!T.thicknessMap,qt=!!T.gradientMap,it=!!T.alphaMap,Ct=T.alphaTest>0,gt=!!T.alphaHash,Et=!!T.extensions,At=!!B.attributes.uv1,Ft=!!B.attributes.uv2,Kt=!!B.attributes.uv3;let ee=An;return T.toneMapped&&(ct===null||ct.isXRRenderTarget===!0)&&(ee=r.toneMapping),{isWebGL2:u,shaderID:tt,shaderType:T.type,shaderName:T.name,vertexShader:H,fragmentShader:Y,defines:T.defines,customVertexShaderID:et,customFragmentShaderID:ut,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:m,instancing:ot,instancingColor:ot&&$.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:ct===null?r.outputColorSpace:ct.isXRRenderTarget===!0?ct.texture.colorSpace:Qe,map:dt,matcap:It,envMap:Mt,envMapMode:Mt&&Z.mapping,envMapCubeUVHeight:D,aoMap:V,lightMap:_t,bumpMap:ht,normalMap:Q,displacementMap:p&&nt,emissiveMap:yt,normalMapObjectSpace:Q&&T.normalMapType===Uu,normalMapTangentSpace:Q&&T.normalMapType===Xn,metalnessMap:lt,roughnessMap:K,anisotropy:st,anisotropyMap:S,clearcoat:mt,clearcoatMap:A,clearcoatNormalMap:z,clearcoatRoughnessMap:R,iridescence:Tt,iridescenceMap:I,iridescenceThicknessMap:q,sheen:F,sheenColorMap:j,sheenRoughnessMap:k,specularMap:at,specularColorMap:St,specularIntensityMap:vt,transmission:f,transmissionMap:Rt,thicknessMap:Dt,gradientMap:qt,opaque:T.transparent===!1&&T.blending===gi,alphaMap:it,alphaTest:Ct,alphaHash:gt,combine:T.combine,mapUv:dt&&g(T.map.channel),aoMapUv:V&&g(T.aoMap.channel),lightMapUv:_t&&g(T.lightMap.channel),bumpMapUv:ht&&g(T.bumpMap.channel),normalMapUv:Q&&g(T.normalMap.channel),displacementMapUv:nt&&g(T.displacementMap.channel),emissiveMapUv:yt&&g(T.emissiveMap.channel),metalnessMapUv:lt&&g(T.metalnessMap.channel),roughnessMapUv:K&&g(T.roughnessMap.channel),anisotropyMapUv:S&&g(T.anisotropyMap.channel),clearcoatMapUv:A&&g(T.clearcoatMap.channel),clearcoatNormalMapUv:z&&g(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:R&&g(T.clearcoatRoughnessMap.channel),iridescenceMapUv:I&&g(T.iridescenceMap.channel),iridescenceThicknessMapUv:q&&g(T.iridescenceThicknessMap.channel),sheenColorMapUv:j&&g(T.sheenColorMap.channel),sheenRoughnessMapUv:k&&g(T.sheenRoughnessMap.channel),specularMapUv:at&&g(T.specularMap.channel),specularColorMapUv:St&&g(T.specularColorMap.channel),specularIntensityMapUv:vt&&g(T.specularIntensityMap.channel),transmissionMapUv:Rt&&g(T.transmissionMap.channel),thicknessMapUv:Dt&&g(T.thicknessMap.channel),alphaMapUv:it&&g(T.alphaMap.channel),vertexTangents:!!B.attributes.tangent&&(Q||st),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!B.attributes.color&&B.attributes.color.itemSize===4,vertexUv1s:At,vertexUv2s:Ft,vertexUv3s:Kt,pointsUvs:$.isPoints===!0&&!!B.attributes.uv&&(dt||it),fog:!!O,useFog:T.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:$.isSkinnedMesh===!0,morphTargets:B.morphAttributes.position!==void 0,morphNormals:B.morphAttributes.normal!==void 0,morphColors:B.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:N,numDirLights:P.directional.length,numPointLights:P.point.length,numSpotLights:P.spot.length,numSpotLightMaps:P.spotLightMap.length,numRectAreaLights:P.rectArea.length,numHemiLights:P.hemi.length,numDirLightShadows:P.directionalShadowMap.length,numPointLightShadows:P.pointShadowMap.length,numSpotLightShadows:P.spotShadowMap.length,numSpotLightShadowsWithMaps:P.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&G.length>0,shadowMapType:r.shadowMap.type,toneMapping:ee,useLegacyLights:r._useLegacyLights,decodeVideoTexture:dt&&T.map.isVideoTexture===!0&&T.map.colorSpace===ne,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===ln,flipSided:T.side===Ae,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:Et&&T.extensions.derivatives===!0,extensionFragDepth:Et&&T.extensions.fragDepth===!0,extensionDrawBuffers:Et&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:Et&&T.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function _(T){const P=[];if(T.shaderID?P.push(T.shaderID):(P.push(T.customVertexShaderID),P.push(T.customFragmentShaderID)),T.defines!==void 0)for(const G in T.defines)P.push(G),P.push(T.defines[G]);return T.isRawShaderMaterial===!1&&(M(P,T),v(P,T),P.push(r.outputColorSpace)),P.push(T.customProgramCacheKey),P.join()}function M(T,P){T.push(P.precision),T.push(P.outputColorSpace),T.push(P.envMapMode),T.push(P.envMapCubeUVHeight),T.push(P.mapUv),T.push(P.alphaMapUv),T.push(P.lightMapUv),T.push(P.aoMapUv),T.push(P.bumpMapUv),T.push(P.normalMapUv),T.push(P.displacementMapUv),T.push(P.emissiveMapUv),T.push(P.metalnessMapUv),T.push(P.roughnessMapUv),T.push(P.anisotropyMapUv),T.push(P.clearcoatMapUv),T.push(P.clearcoatNormalMapUv),T.push(P.clearcoatRoughnessMapUv),T.push(P.iridescenceMapUv),T.push(P.iridescenceThicknessMapUv),T.push(P.sheenColorMapUv),T.push(P.sheenRoughnessMapUv),T.push(P.specularMapUv),T.push(P.specularColorMapUv),T.push(P.specularIntensityMapUv),T.push(P.transmissionMapUv),T.push(P.thicknessMapUv),T.push(P.combine),T.push(P.fogExp2),T.push(P.sizeAttenuation),T.push(P.morphTargetsCount),T.push(P.morphAttributeCount),T.push(P.numDirLights),T.push(P.numPointLights),T.push(P.numSpotLights),T.push(P.numSpotLightMaps),T.push(P.numHemiLights),T.push(P.numRectAreaLights),T.push(P.numDirLightShadows),T.push(P.numPointLightShadows),T.push(P.numSpotLightShadows),T.push(P.numSpotLightShadowsWithMaps),T.push(P.shadowMapType),T.push(P.toneMapping),T.push(P.numClippingPlanes),T.push(P.numClipIntersection),T.push(P.depthPacking)}function v(T,P){a.disableAll(),P.isWebGL2&&a.enable(0),P.supportsVertexTextures&&a.enable(1),P.instancing&&a.enable(2),P.instancingColor&&a.enable(3),P.matcap&&a.enable(4),P.envMap&&a.enable(5),P.normalMapObjectSpace&&a.enable(6),P.normalMapTangentSpace&&a.enable(7),P.clearcoat&&a.enable(8),P.iridescence&&a.enable(9),P.alphaTest&&a.enable(10),P.vertexColors&&a.enable(11),P.vertexAlphas&&a.enable(12),P.vertexUv1s&&a.enable(13),P.vertexUv2s&&a.enable(14),P.vertexUv3s&&a.enable(15),P.vertexTangents&&a.enable(16),P.anisotropy&&a.enable(17),T.push(a.mask),a.disableAll(),P.fog&&a.enable(0),P.useFog&&a.enable(1),P.flatShading&&a.enable(2),P.logarithmicDepthBuffer&&a.enable(3),P.skinning&&a.enable(4),P.morphTargets&&a.enable(5),P.morphNormals&&a.enable(6),P.morphColors&&a.enable(7),P.premultipliedAlpha&&a.enable(8),P.shadowMapEnabled&&a.enable(9),P.useLegacyLights&&a.enable(10),P.doubleSided&&a.enable(11),P.flipSided&&a.enable(12),P.useDepthPacking&&a.enable(13),P.dithering&&a.enable(14),P.transmission&&a.enable(15),P.sheen&&a.enable(16),P.opaque&&a.enable(17),P.pointsUvs&&a.enable(18),P.decodeVideoTexture&&a.enable(19),T.push(a.mask)}function x(T){const P=h[T.type];let G;if(P){const X=Ke[P];G=Zu.clone(X.uniforms)}else G=T.uniforms;return G}function w(T,P){let G;for(let X=0,$=c.length;X<$;X++){const O=c[X];if(O.cacheKey===P){G=O,++G.usedTimes;break}}return G===void 0&&(G=new Z0(r,P,T,s),c.push(G)),G}function b(T){if(--T.usedTimes===0){const P=c.indexOf(T);c[P]=c[c.length-1],c.pop(),T.destroy()}}function E(T){l.remove(T)}function L(){l.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:x,acquireProgram:w,releaseProgram:b,releaseShaderCache:E,programs:c,dispose:L}}function ey(){let r=new WeakMap;function t(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function e(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function ny(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function Wc(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function Xc(){const r=[];let t=0;const e=[],n=[],i=[];function s(){t=0,e.length=0,n.length=0,i.length=0}function o(d,p,m,h,g,y){let _=r[t];return _===void 0?(_={id:d.id,object:d,geometry:p,material:m,groupOrder:h,renderOrder:d.renderOrder,z:g,group:y},r[t]=_):(_.id=d.id,_.object=d,_.geometry=p,_.material=m,_.groupOrder=h,_.renderOrder=d.renderOrder,_.z=g,_.group=y),t++,_}function a(d,p,m,h,g,y){const _=o(d,p,m,h,g,y);m.transmission>0?n.push(_):m.transparent===!0?i.push(_):e.push(_)}function l(d,p,m,h,g,y){const _=o(d,p,m,h,g,y);m.transmission>0?n.unshift(_):m.transparent===!0?i.unshift(_):e.unshift(_)}function c(d,p){e.length>1&&e.sort(d||ny),n.length>1&&n.sort(p||Wc),i.length>1&&i.sort(p||Wc)}function u(){for(let d=t,p=r.length;d<p;d++){const m=r[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:e,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:c}}function iy(){let r=new WeakMap;function t(n,i){const s=r.get(n);let o;return s===void 0?(o=new Xc,r.set(n,[o])):i>=s.length?(o=new Xc,s.push(o)):o=s[i],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function ry(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new W,color:new Pt};break;case"SpotLight":e={position:new W,direction:new W,color:new Pt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new W,color:new Pt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new W,skyColor:new Pt,groundColor:new Pt};break;case"RectAreaLight":e={color:new Pt,position:new W,halfWidth:new W,halfHeight:new W};break}return r[t.id]=e,e}}}function sy(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new wt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new wt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new wt,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let oy=0;function ay(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function ly(r,t){const e=new ry,n=sy(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new W);const s=new W,o=new zt,a=new zt;function l(u,d){let p=0,m=0,h=0;for(let G=0;G<9;G++)i.probe[G].set(0,0,0);let g=0,y=0,_=0,M=0,v=0,x=0,w=0,b=0,E=0,L=0;u.sort(ay);const T=d===!0?Math.PI:1;for(let G=0,X=u.length;G<X;G++){const $=u[G],O=$.color,B=$.intensity,C=$.distance,Z=$.shadow&&$.shadow.map?$.shadow.map.texture:null;if($.isAmbientLight)p+=O.r*B*T,m+=O.g*B*T,h+=O.b*B*T;else if($.isLightProbe)for(let D=0;D<9;D++)i.probe[D].addScaledVector($.sh.coefficients[D],B);else if($.isDirectionalLight){const D=e.get($);if(D.color.copy($.color).multiplyScalar($.intensity*T),$.castShadow){const tt=$.shadow,rt=n.get($);rt.shadowBias=tt.bias,rt.shadowNormalBias=tt.normalBias,rt.shadowRadius=tt.radius,rt.shadowMapSize=tt.mapSize,i.directionalShadow[g]=rt,i.directionalShadowMap[g]=Z,i.directionalShadowMatrix[g]=$.shadow.matrix,x++}i.directional[g]=D,g++}else if($.isSpotLight){const D=e.get($);D.position.setFromMatrixPosition($.matrixWorld),D.color.copy(O).multiplyScalar(B*T),D.distance=C,D.coneCos=Math.cos($.angle),D.penumbraCos=Math.cos($.angle*(1-$.penumbra)),D.decay=$.decay,i.spot[_]=D;const tt=$.shadow;if($.map&&(i.spotLightMap[E]=$.map,E++,tt.updateMatrices($),$.castShadow&&L++),i.spotLightMatrix[_]=tt.matrix,$.castShadow){const rt=n.get($);rt.shadowBias=tt.bias,rt.shadowNormalBias=tt.normalBias,rt.shadowRadius=tt.radius,rt.shadowMapSize=tt.mapSize,i.spotShadow[_]=rt,i.spotShadowMap[_]=Z,b++}_++}else if($.isRectAreaLight){const D=e.get($);D.color.copy(O).multiplyScalar(B),D.halfWidth.set($.width*.5,0,0),D.halfHeight.set(0,$.height*.5,0),i.rectArea[M]=D,M++}else if($.isPointLight){const D=e.get($);if(D.color.copy($.color).multiplyScalar($.intensity*T),D.distance=$.distance,D.decay=$.decay,$.castShadow){const tt=$.shadow,rt=n.get($);rt.shadowBias=tt.bias,rt.shadowNormalBias=tt.normalBias,rt.shadowRadius=tt.radius,rt.shadowMapSize=tt.mapSize,rt.shadowCameraNear=tt.camera.near,rt.shadowCameraFar=tt.camera.far,i.pointShadow[y]=rt,i.pointShadowMap[y]=Z,i.pointShadowMatrix[y]=$.shadow.matrix,w++}i.point[y]=D,y++}else if($.isHemisphereLight){const D=e.get($);D.skyColor.copy($.color).multiplyScalar(B*T),D.groundColor.copy($.groundColor).multiplyScalar(B*T),i.hemi[v]=D,v++}}M>0&&(t.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Lt.LTC_FLOAT_1,i.rectAreaLTC2=Lt.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Lt.LTC_HALF_1,i.rectAreaLTC2=Lt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=m,i.ambient[2]=h;const P=i.hash;(P.directionalLength!==g||P.pointLength!==y||P.spotLength!==_||P.rectAreaLength!==M||P.hemiLength!==v||P.numDirectionalShadows!==x||P.numPointShadows!==w||P.numSpotShadows!==b||P.numSpotMaps!==E)&&(i.directional.length=g,i.spot.length=_,i.rectArea.length=M,i.point.length=y,i.hemi.length=v,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=b,i.spotShadowMap.length=b,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=b+E-L,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=L,P.directionalLength=g,P.pointLength=y,P.spotLength=_,P.rectAreaLength=M,P.hemiLength=v,P.numDirectionalShadows=x,P.numPointShadows=w,P.numSpotShadows=b,P.numSpotMaps=E,i.version=oy++)}function c(u,d){let p=0,m=0,h=0,g=0,y=0;const _=d.matrixWorldInverse;for(let M=0,v=u.length;M<v;M++){const x=u[M];if(x.isDirectionalLight){const w=i.directional[p];w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(_),p++}else if(x.isSpotLight){const w=i.spot[h];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(_),w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(_),h++}else if(x.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(_),a.identity(),o.copy(x.matrixWorld),o.premultiply(_),a.extractRotation(o),w.halfWidth.set(x.width*.5,0,0),w.halfHeight.set(0,x.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(x.isPointLight){const w=i.point[m];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(_),m++}else if(x.isHemisphereLight){const w=i.hemi[y];w.direction.setFromMatrixPosition(x.matrixWorld),w.direction.transformDirection(_),y++}}}return{setup:l,setupView:c,state:i}}function qc(r,t){const e=new ly(r,t),n=[],i=[];function s(){n.length=0,i.length=0}function o(d){n.push(d)}function a(d){i.push(d)}function l(d){e.setup(n,d)}function c(d){e.setupView(n,d)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function cy(r,t){let e=new WeakMap;function n(s,o=0){const a=e.get(s);let l;return a===void 0?(l=new qc(r,t),e.set(s,[l])):o>=a.length?(l=new qc(r,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class Pl extends Re{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Lu,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Ul extends Re{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const hy=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,uy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function fy(r,t,e){let n=new fo;const i=new wt,s=new wt,o=new Qt,a=new Pl({depthPacking:Pu}),l=new Ul,c={},u=e.maxTextureSize,d={[In]:Ae,[Ae]:In,[ln]:ln},p=new en({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new wt},radius:{value:4}},vertexShader:hy,fragmentShader:uy}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const h=new Yt;h.setAttribute("position",new te(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new be(h,p),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=pl;let _=this.type;this.render=function(w,b,E){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||w.length===0)return;const L=r.getRenderTarget(),T=r.getActiveCubeFace(),P=r.getActiveMipmapLevel(),G=r.state;G.setBlending(Tn),G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);const X=_!==an&&this.type===an,$=_===an&&this.type!==an;for(let O=0,B=w.length;O<B;O++){const C=w[O],Z=C.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",C,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;i.copy(Z.mapSize);const D=Z.getFrameExtents();if(i.multiply(D),s.copy(Z.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/D.x),i.x=s.x*D.x,Z.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/D.y),i.y=s.y*D.y,Z.mapSize.y=s.y)),Z.map===null||X===!0||$===!0){const rt=this.type!==an?{minFilter:ue,magFilter:ue}:{};Z.map!==null&&Z.map.dispose(),Z.map=new tn(i.x,i.y,rt),Z.map.texture.name=C.name+".shadowMap",Z.camera.updateProjectionMatrix()}r.setRenderTarget(Z.map),r.clear();const tt=Z.getViewportCount();for(let rt=0;rt<tt;rt++){const U=Z.getViewport(rt);o.set(s.x*U.x,s.y*U.y,s.x*U.z,s.y*U.w),G.viewport(o),Z.updateMatrices(C,rt),n=Z.getFrustum(),x(b,E,Z.camera,C,this.type)}Z.isPointLightShadow!==!0&&this.type===an&&M(Z,E),Z.needsUpdate=!1}_=this.type,y.needsUpdate=!1,r.setRenderTarget(L,T,P)};function M(w,b){const E=t.update(g);p.defines.VSM_SAMPLES!==w.blurSamples&&(p.defines.VSM_SAMPLES=w.blurSamples,m.defines.VSM_SAMPLES=w.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new tn(i.x,i.y)),p.uniforms.shadow_pass.value=w.map.texture,p.uniforms.resolution.value=w.mapSize,p.uniforms.radius.value=w.radius,r.setRenderTarget(w.mapPass),r.clear(),r.renderBufferDirect(b,null,E,p,g,null),m.uniforms.shadow_pass.value=w.mapPass.texture,m.uniforms.resolution.value=w.mapSize,m.uniforms.radius.value=w.radius,r.setRenderTarget(w.map),r.clear(),r.renderBufferDirect(b,null,E,m,g,null)}function v(w,b,E,L){let T=null;const P=E.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(P!==void 0)T=P;else if(T=E.isPointLight===!0?l:a,r.localClippingEnabled&&b.clipShadows===!0&&Array.isArray(b.clippingPlanes)&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0||b.map&&b.alphaTest>0){const G=T.uuid,X=b.uuid;let $=c[G];$===void 0&&($={},c[G]=$);let O=$[X];O===void 0&&(O=T.clone(),$[X]=O),T=O}if(T.visible=b.visible,T.wireframe=b.wireframe,L===an?T.side=b.shadowSide!==null?b.shadowSide:b.side:T.side=b.shadowSide!==null?b.shadowSide:d[b.side],T.alphaMap=b.alphaMap,T.alphaTest=b.alphaTest,T.map=b.map,T.clipShadows=b.clipShadows,T.clippingPlanes=b.clippingPlanes,T.clipIntersection=b.clipIntersection,T.displacementMap=b.displacementMap,T.displacementScale=b.displacementScale,T.displacementBias=b.displacementBias,T.wireframeLinewidth=b.wireframeLinewidth,T.linewidth=b.linewidth,E.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const G=r.properties.get(T);G.light=E}return T}function x(w,b,E,L,T){if(w.visible===!1)return;if(w.layers.test(b.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&T===an)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,w.matrixWorld);const X=t.update(w),$=w.material;if(Array.isArray($)){const O=X.groups;for(let B=0,C=O.length;B<C;B++){const Z=O[B],D=$[Z.materialIndex];if(D&&D.visible){const tt=v(w,D,L,T);r.renderBufferDirect(E,null,X,tt,w,Z)}}}else if($.visible){const O=v(w,$,L,T);r.renderBufferDirect(E,null,X,O,w,null)}}const G=w.children;for(let X=0,$=G.length;X<$;X++)x(G[X],b,E,L,T)}}function dy(r,t,e){const n=e.isWebGL2;function i(){let it=!1;const Ct=new Qt;let gt=null;const Et=new Qt(0,0,0,0);return{setMask:function(At){gt!==At&&!it&&(r.colorMask(At,At,At,At),gt=At)},setLocked:function(At){it=At},setClear:function(At,Ft,Kt,ee,ke){ke===!0&&(At*=ee,Ft*=ee,Kt*=ee),Ct.set(At,Ft,Kt,ee),Et.equals(Ct)===!1&&(r.clearColor(At,Ft,Kt,ee),Et.copy(Ct))},reset:function(){it=!1,gt=null,Et.set(-1,0,0,0)}}}function s(){let it=!1,Ct=null,gt=null,Et=null;return{setTest:function(At){At?ct(r.DEPTH_TEST):ot(r.DEPTH_TEST)},setMask:function(At){Ct!==At&&!it&&(r.depthMask(At),Ct=At)},setFunc:function(At){if(gt!==At){switch(At){case ou:r.depthFunc(r.NEVER);break;case au:r.depthFunc(r.ALWAYS);break;case lu:r.depthFunc(r.LESS);break;case eo:r.depthFunc(r.LEQUAL);break;case cu:r.depthFunc(r.EQUAL);break;case hu:r.depthFunc(r.GEQUAL);break;case uu:r.depthFunc(r.GREATER);break;case fu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}gt=At}},setLocked:function(At){it=At},setClear:function(At){Et!==At&&(r.clearDepth(At),Et=At)},reset:function(){it=!1,Ct=null,gt=null,Et=null}}}function o(){let it=!1,Ct=null,gt=null,Et=null,At=null,Ft=null,Kt=null,ee=null,ke=null;return{setTest:function(ie){it||(ie?ct(r.STENCIL_TEST):ot(r.STENCIL_TEST))},setMask:function(ie){Ct!==ie&&!it&&(r.stencilMask(ie),Ct=ie)},setFunc:function(ie,on,Ie){(gt!==ie||Et!==on||At!==Ie)&&(r.stencilFunc(ie,on,Ie),gt=ie,Et=on,At=Ie)},setOp:function(ie,on,Ie){(Ft!==ie||Kt!==on||ee!==Ie)&&(r.stencilOp(ie,on,Ie),Ft=ie,Kt=on,ee=Ie)},setLocked:function(ie){it=ie},setClear:function(ie){ke!==ie&&(r.clearStencil(ie),ke=ie)},reset:function(){it=!1,Ct=null,gt=null,Et=null,At=null,Ft=null,Kt=null,ee=null,ke=null}}}const a=new i,l=new s,c=new o,u=new WeakMap,d=new WeakMap;let p={},m={},h=new WeakMap,g=[],y=null,_=!1,M=null,v=null,x=null,w=null,b=null,E=null,L=null,T=!1,P=null,G=null,X=null,$=null,O=null;const B=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let C=!1,Z=0;const D=r.getParameter(r.VERSION);D.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(D)[1]),C=Z>=1):D.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),C=Z>=2);let tt=null,rt={};const U=r.getParameter(r.SCISSOR_BOX),N=r.getParameter(r.VIEWPORT),H=new Qt().fromArray(U),Y=new Qt().fromArray(N);function et(it,Ct,gt,Et){const At=new Uint8Array(4),Ft=r.createTexture();r.bindTexture(it,Ft),r.texParameteri(it,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(it,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Kt=0;Kt<gt;Kt++)n&&(it===r.TEXTURE_3D||it===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ct,0,r.RGBA,1,1,Et,0,r.RGBA,r.UNSIGNED_BYTE,At):r.texImage2D(Ct+Kt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,At);return Ft}const ut={};ut[r.TEXTURE_2D]=et(r.TEXTURE_2D,r.TEXTURE_2D,1),ut[r.TEXTURE_CUBE_MAP]=et(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(ut[r.TEXTURE_2D_ARRAY]=et(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),ut[r.TEXTURE_3D]=et(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ct(r.DEPTH_TEST),l.setFunc(eo),nt(!1),yt(Ta),ct(r.CULL_FACE),ht(Tn);function ct(it){p[it]!==!0&&(r.enable(it),p[it]=!0)}function ot(it){p[it]!==!1&&(r.disable(it),p[it]=!1)}function dt(it,Ct){return m[it]!==Ct?(r.bindFramebuffer(it,Ct),m[it]=Ct,n&&(it===r.DRAW_FRAMEBUFFER&&(m[r.FRAMEBUFFER]=Ct),it===r.FRAMEBUFFER&&(m[r.DRAW_FRAMEBUFFER]=Ct)),!0):!1}function It(it,Ct){let gt=g,Et=!1;if(it)if(gt=h.get(Ct),gt===void 0&&(gt=[],h.set(Ct,gt)),it.isWebGLMultipleRenderTargets){const At=it.texture;if(gt.length!==At.length||gt[0]!==r.COLOR_ATTACHMENT0){for(let Ft=0,Kt=At.length;Ft<Kt;Ft++)gt[Ft]=r.COLOR_ATTACHMENT0+Ft;gt.length=At.length,Et=!0}}else gt[0]!==r.COLOR_ATTACHMENT0&&(gt[0]=r.COLOR_ATTACHMENT0,Et=!0);else gt[0]!==r.BACK&&(gt[0]=r.BACK,Et=!0);Et&&(e.isWebGL2?r.drawBuffers(gt):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(gt))}function Mt(it){return y!==it?(r.useProgram(it),y=it,!0):!1}const V={[hi]:r.FUNC_ADD,[$h]:r.FUNC_SUBTRACT,[Zh]:r.FUNC_REVERSE_SUBTRACT};if(n)V[Ca]=r.MIN,V[La]=r.MAX;else{const it=t.get("EXT_blend_minmax");it!==null&&(V[Ca]=it.MIN_EXT,V[La]=it.MAX_EXT)}const _t={[Jh]:r.ZERO,[Kh]:r.ONE,[Qh]:r.SRC_COLOR,[ml]:r.SRC_ALPHA,[su]:r.SRC_ALPHA_SATURATE,[iu]:r.DST_COLOR,[eu]:r.DST_ALPHA,[tu]:r.ONE_MINUS_SRC_COLOR,[gl]:r.ONE_MINUS_SRC_ALPHA,[ru]:r.ONE_MINUS_DST_COLOR,[nu]:r.ONE_MINUS_DST_ALPHA};function ht(it,Ct,gt,Et,At,Ft,Kt,ee){if(it===Tn){_===!0&&(ot(r.BLEND),_=!1);return}if(_===!1&&(ct(r.BLEND),_=!0),it!==jh){if(it!==M||ee!==T){if((v!==hi||b!==hi)&&(r.blendEquation(r.FUNC_ADD),v=hi,b=hi),ee)switch(it){case gi:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Aa:r.blendFunc(r.ONE,r.ONE);break;case Ra:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ia:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",it);break}else switch(it){case gi:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Aa:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Ra:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ia:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",it);break}x=null,w=null,E=null,L=null,M=it,T=ee}return}At=At||Ct,Ft=Ft||gt,Kt=Kt||Et,(Ct!==v||At!==b)&&(r.blendEquationSeparate(V[Ct],V[At]),v=Ct,b=At),(gt!==x||Et!==w||Ft!==E||Kt!==L)&&(r.blendFuncSeparate(_t[gt],_t[Et],_t[Ft],_t[Kt]),x=gt,w=Et,E=Ft,L=Kt),M=it,T=!1}function Q(it,Ct){it.side===ln?ot(r.CULL_FACE):ct(r.CULL_FACE);let gt=it.side===Ae;Ct&&(gt=!gt),nt(gt),it.blending===gi&&it.transparent===!1?ht(Tn):ht(it.blending,it.blendEquation,it.blendSrc,it.blendDst,it.blendEquationAlpha,it.blendSrcAlpha,it.blendDstAlpha,it.premultipliedAlpha),l.setFunc(it.depthFunc),l.setTest(it.depthTest),l.setMask(it.depthWrite),a.setMask(it.colorWrite);const Et=it.stencilWrite;c.setTest(Et),Et&&(c.setMask(it.stencilWriteMask),c.setFunc(it.stencilFunc,it.stencilRef,it.stencilFuncMask),c.setOp(it.stencilFail,it.stencilZFail,it.stencilZPass)),K(it.polygonOffset,it.polygonOffsetFactor,it.polygonOffsetUnits),it.alphaToCoverage===!0?ct(r.SAMPLE_ALPHA_TO_COVERAGE):ot(r.SAMPLE_ALPHA_TO_COVERAGE)}function nt(it){P!==it&&(it?r.frontFace(r.CW):r.frontFace(r.CCW),P=it)}function yt(it){it!==Xh?(ct(r.CULL_FACE),it!==G&&(it===Ta?r.cullFace(r.BACK):it===qh?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ot(r.CULL_FACE),G=it}function lt(it){it!==X&&(C&&r.lineWidth(it),X=it)}function K(it,Ct,gt){it?(ct(r.POLYGON_OFFSET_FILL),($!==Ct||O!==gt)&&(r.polygonOffset(Ct,gt),$=Ct,O=gt)):ot(r.POLYGON_OFFSET_FILL)}function st(it){it?ct(r.SCISSOR_TEST):ot(r.SCISSOR_TEST)}function mt(it){it===void 0&&(it=r.TEXTURE0+B-1),tt!==it&&(r.activeTexture(it),tt=it)}function Tt(it,Ct,gt){gt===void 0&&(tt===null?gt=r.TEXTURE0+B-1:gt=tt);let Et=rt[gt];Et===void 0&&(Et={type:void 0,texture:void 0},rt[gt]=Et),(Et.type!==it||Et.texture!==Ct)&&(tt!==gt&&(r.activeTexture(gt),tt=gt),r.bindTexture(it,Ct||ut[it]),Et.type=it,Et.texture=Ct)}function F(){const it=rt[tt];it!==void 0&&it.type!==void 0&&(r.bindTexture(it.type,null),it.type=void 0,it.texture=void 0)}function f(){try{r.compressedTexImage2D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function S(){try{r.compressedTexImage3D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function A(){try{r.texSubImage2D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function z(){try{r.texSubImage3D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function R(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function I(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function q(){try{r.texStorage2D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function j(){try{r.texStorage3D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function k(){try{r.texImage2D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function at(){try{r.texImage3D.apply(r,arguments)}catch(it){console.error("THREE.WebGLState:",it)}}function St(it){H.equals(it)===!1&&(r.scissor(it.x,it.y,it.z,it.w),H.copy(it))}function vt(it){Y.equals(it)===!1&&(r.viewport(it.x,it.y,it.z,it.w),Y.copy(it))}function Rt(it,Ct){let gt=d.get(Ct);gt===void 0&&(gt=new WeakMap,d.set(Ct,gt));let Et=gt.get(it);Et===void 0&&(Et=r.getUniformBlockIndex(Ct,it.name),gt.set(it,Et))}function Dt(it,Ct){const Et=d.get(Ct).get(it);u.get(Ct)!==Et&&(r.uniformBlockBinding(Ct,Et,it.__bindingPointIndex),u.set(Ct,Et))}function qt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),p={},tt=null,rt={},m={},h=new WeakMap,g=[],y=null,_=!1,M=null,v=null,x=null,w=null,b=null,E=null,L=null,T=!1,P=null,G=null,X=null,$=null,O=null,H.set(0,0,r.canvas.width,r.canvas.height),Y.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ct,disable:ot,bindFramebuffer:dt,drawBuffers:It,useProgram:Mt,setBlending:ht,setMaterial:Q,setFlipSided:nt,setCullFace:yt,setLineWidth:lt,setPolygonOffset:K,setScissorTest:st,activeTexture:mt,bindTexture:Tt,unbindTexture:F,compressedTexImage2D:f,compressedTexImage3D:S,texImage2D:k,texImage3D:at,updateUBOMapping:Rt,uniformBlockBinding:Dt,texStorage2D:q,texStorage3D:j,texSubImage2D:A,texSubImage3D:z,compressedTexSubImage2D:R,compressedTexSubImage3D:I,scissor:St,viewport:vt,reset:qt}}function py(r,t,e,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,d=i.maxSamples,p=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let g;const y=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function M(F,f){return _?new OffscreenCanvas(F,f):Dr("canvas")}function v(F,f,S,A){let z=1;if((F.width>A||F.height>A)&&(z=A/Math.max(F.width,F.height)),z<1||f===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const R=f?ro:Math.floor,I=R(z*F.width),q=R(z*F.height);g===void 0&&(g=M(I,q));const j=S?M(I,q):g;return j.width=I,j.height=q,j.getContext("2d").drawImage(F,0,0,I,q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+I+"x"+q+")."),j}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function x(F){return rl(F.width)&&rl(F.height)}function w(F){return a?!1:F.wrapS!==Te||F.wrapT!==Te||F.minFilter!==ue&&F.minFilter!==re}function b(F,f){return F.generateMipmaps&&f&&F.minFilter!==ue&&F.minFilter!==re}function E(F){r.generateMipmap(F)}function L(F,f,S,A,z=!1){if(a===!1)return f;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let R=f;return f===r.RED&&(S===r.FLOAT&&(R=r.R32F),S===r.HALF_FLOAT&&(R=r.R16F),S===r.UNSIGNED_BYTE&&(R=r.R8)),f===r.RED_INTEGER&&(S===r.UNSIGNED_BYTE&&(R=r.R8UI),S===r.UNSIGNED_SHORT&&(R=r.R16UI),S===r.UNSIGNED_INT&&(R=r.R32UI),S===r.BYTE&&(R=r.R8I),S===r.SHORT&&(R=r.R16I),S===r.INT&&(R=r.R32I)),f===r.RG&&(S===r.FLOAT&&(R=r.RG32F),S===r.HALF_FLOAT&&(R=r.RG16F),S===r.UNSIGNED_BYTE&&(R=r.RG8)),f===r.RGBA&&(S===r.FLOAT&&(R=r.RGBA32F),S===r.HALF_FLOAT&&(R=r.RGBA16F),S===r.UNSIGNED_BYTE&&(R=A===ne&&z===!1?r.SRGB8_ALPHA8:r.RGBA8),S===r.UNSIGNED_SHORT_4_4_4_4&&(R=r.RGBA4),S===r.UNSIGNED_SHORT_5_5_5_1&&(R=r.RGB5_A1)),(R===r.R16F||R===r.R32F||R===r.RG16F||R===r.RG32F||R===r.RGBA16F||R===r.RGBA32F)&&t.get("EXT_color_buffer_float"),R}function T(F,f,S){return b(F,S)===!0||F.isFramebufferTexture&&F.minFilter!==ue&&F.minFilter!==re?Math.log2(Math.max(f.width,f.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?f.mipmaps.length:1}function P(F){return F===ue||F===no||F===br?r.NEAREST:r.LINEAR}function G(F){const f=F.target;f.removeEventListener("dispose",G),$(f),f.isVideoTexture&&h.delete(f)}function X(F){const f=F.target;f.removeEventListener("dispose",X),B(f)}function $(F){const f=n.get(F);if(f.__webglInit===void 0)return;const S=F.source,A=y.get(S);if(A){const z=A[f.__cacheKey];z.usedTimes--,z.usedTimes===0&&O(F),Object.keys(A).length===0&&y.delete(S)}n.remove(F)}function O(F){const f=n.get(F);r.deleteTexture(f.__webglTexture);const S=F.source,A=y.get(S);delete A[f.__cacheKey],o.memory.textures--}function B(F){const f=F.texture,S=n.get(F),A=n.get(f);if(A.__webglTexture!==void 0&&(r.deleteTexture(A.__webglTexture),o.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let z=0;z<6;z++){if(Array.isArray(S.__webglFramebuffer[z]))for(let R=0;R<S.__webglFramebuffer[z].length;R++)r.deleteFramebuffer(S.__webglFramebuffer[z][R]);else r.deleteFramebuffer(S.__webglFramebuffer[z]);S.__webglDepthbuffer&&r.deleteRenderbuffer(S.__webglDepthbuffer[z])}else{if(Array.isArray(S.__webglFramebuffer))for(let z=0;z<S.__webglFramebuffer.length;z++)r.deleteFramebuffer(S.__webglFramebuffer[z]);else r.deleteFramebuffer(S.__webglFramebuffer);if(S.__webglDepthbuffer&&r.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&r.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer)for(let z=0;z<S.__webglColorRenderbuffer.length;z++)S.__webglColorRenderbuffer[z]&&r.deleteRenderbuffer(S.__webglColorRenderbuffer[z]);S.__webglDepthRenderbuffer&&r.deleteRenderbuffer(S.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let z=0,R=f.length;z<R;z++){const I=n.get(f[z]);I.__webglTexture&&(r.deleteTexture(I.__webglTexture),o.memory.textures--),n.remove(f[z])}n.remove(f),n.remove(F)}let C=0;function Z(){C=0}function D(){const F=C;return F>=l&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+l),C+=1,F}function tt(F){const f=[];return f.push(F.wrapS),f.push(F.wrapT),f.push(F.wrapR||0),f.push(F.magFilter),f.push(F.minFilter),f.push(F.anisotropy),f.push(F.internalFormat),f.push(F.format),f.push(F.type),f.push(F.generateMipmaps),f.push(F.premultiplyAlpha),f.push(F.flipY),f.push(F.unpackAlignment),f.push(F.colorSpace),f.join()}function rt(F,f){const S=n.get(F);if(F.isVideoTexture&&mt(F),F.isRenderTargetTexture===!1&&F.version>0&&S.__version!==F.version){const A=F.image;if(A===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(A.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{dt(S,F,f);return}}e.bindTexture(r.TEXTURE_2D,S.__webglTexture,r.TEXTURE0+f)}function U(F,f){const S=n.get(F);if(F.version>0&&S.__version!==F.version){dt(S,F,f);return}e.bindTexture(r.TEXTURE_2D_ARRAY,S.__webglTexture,r.TEXTURE0+f)}function N(F,f){const S=n.get(F);if(F.version>0&&S.__version!==F.version){dt(S,F,f);return}e.bindTexture(r.TEXTURE_3D,S.__webglTexture,r.TEXTURE0+f)}function H(F,f){const S=n.get(F);if(F.version>0&&S.__version!==F.version){It(S,F,f);return}e.bindTexture(r.TEXTURE_CUBE_MAP,S.__webglTexture,r.TEXTURE0+f)}const Y={[Rr]:r.REPEAT,[Te]:r.CLAMP_TO_EDGE,[Ir]:r.MIRRORED_REPEAT},et={[ue]:r.NEAREST,[no]:r.NEAREST_MIPMAP_NEAREST,[br]:r.NEAREST_MIPMAP_LINEAR,[re]:r.LINEAR,[_l]:r.LINEAR_MIPMAP_NEAREST,[Hn]:r.LINEAR_MIPMAP_LINEAR},ut={[Du]:r.NEVER,[Hu]:r.ALWAYS,[Ou]:r.LESS,[Bu]:r.LEQUAL,[Fu]:r.EQUAL,[Gu]:r.GEQUAL,[zu]:r.GREATER,[ku]:r.NOTEQUAL};function ct(F,f,S){if(S?(r.texParameteri(F,r.TEXTURE_WRAP_S,Y[f.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,Y[f.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,Y[f.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,et[f.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,et[f.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(f.wrapS!==Te||f.wrapT!==Te)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,P(f.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,P(f.minFilter)),f.minFilter!==ue&&f.minFilter!==re&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),f.compareFunction&&(r.texParameteri(F,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(F,r.TEXTURE_COMPARE_FUNC,ut[f.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){const A=t.get("EXT_texture_filter_anisotropic");if(f.magFilter===ue||f.minFilter!==br&&f.minFilter!==Hn||f.type===cn&&t.has("OES_texture_float_linear")===!1||a===!1&&f.type===Vn&&t.has("OES_texture_half_float_linear")===!1)return;(f.anisotropy>1||n.get(f).__currentAnisotropy)&&(r.texParameterf(F,A.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,i.getMaxAnisotropy())),n.get(f).__currentAnisotropy=f.anisotropy)}}function ot(F,f){let S=!1;F.__webglInit===void 0&&(F.__webglInit=!0,f.addEventListener("dispose",G));const A=f.source;let z=y.get(A);z===void 0&&(z={},y.set(A,z));const R=tt(f);if(R!==F.__cacheKey){z[R]===void 0&&(z[R]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,S=!0),z[R].usedTimes++;const I=z[F.__cacheKey];I!==void 0&&(z[F.__cacheKey].usedTimes--,I.usedTimes===0&&O(f)),F.__cacheKey=R,F.__webglTexture=z[R].texture}return S}function dt(F,f,S){let A=r.TEXTURE_2D;(f.isDataArrayTexture||f.isCompressedArrayTexture)&&(A=r.TEXTURE_2D_ARRAY),f.isData3DTexture&&(A=r.TEXTURE_3D);const z=ot(F,f),R=f.source;e.bindTexture(A,F.__webglTexture,r.TEXTURE0+S);const I=n.get(R);if(R.version!==I.__version||z===!0){e.activeTexture(r.TEXTURE0+S),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,f.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,f.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,f.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const q=w(f)&&x(f.image)===!1;let j=v(f.image,q,!1,u);j=Tt(f,j);const k=x(j)||a,at=s.convert(f.format,f.colorSpace);let St=s.convert(f.type),vt=L(f.internalFormat,at,St,f.colorSpace,f.isVideoTexture);ct(A,f,k);let Rt;const Dt=f.mipmaps,qt=a&&f.isVideoTexture!==!0,it=I.__version===void 0||z===!0,Ct=T(f,j,k);if(f.isDepthTexture)vt=r.DEPTH_COMPONENT,a?f.type===cn?vt=r.DEPTH_COMPONENT32F:f.type===En?vt=r.DEPTH_COMPONENT24:f.type===Fn?vt=r.DEPTH24_STENCIL8:vt=r.DEPTH_COMPONENT16:f.type===cn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),f.format===Bn&&vt===r.DEPTH_COMPONENT&&f.type!==ao&&f.type!==En&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),f.type=En,St=s.convert(f.type)),f.format===vi&&vt===r.DEPTH_COMPONENT&&(vt=r.DEPTH_STENCIL,f.type!==Fn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),f.type=Fn,St=s.convert(f.type))),it&&(qt?e.texStorage2D(r.TEXTURE_2D,1,vt,j.width,j.height):e.texImage2D(r.TEXTURE_2D,0,vt,j.width,j.height,0,at,St,null));else if(f.isDataTexture)if(Dt.length>0&&k){qt&&it&&e.texStorage2D(r.TEXTURE_2D,Ct,vt,Dt[0].width,Dt[0].height);for(let gt=0,Et=Dt.length;gt<Et;gt++)Rt=Dt[gt],qt?e.texSubImage2D(r.TEXTURE_2D,gt,0,0,Rt.width,Rt.height,at,St,Rt.data):e.texImage2D(r.TEXTURE_2D,gt,vt,Rt.width,Rt.height,0,at,St,Rt.data);f.generateMipmaps=!1}else qt?(it&&e.texStorage2D(r.TEXTURE_2D,Ct,vt,j.width,j.height),e.texSubImage2D(r.TEXTURE_2D,0,0,0,j.width,j.height,at,St,j.data)):e.texImage2D(r.TEXTURE_2D,0,vt,j.width,j.height,0,at,St,j.data);else if(f.isCompressedTexture)if(f.isCompressedArrayTexture){qt&&it&&e.texStorage3D(r.TEXTURE_2D_ARRAY,Ct,vt,Dt[0].width,Dt[0].height,j.depth);for(let gt=0,Et=Dt.length;gt<Et;gt++)Rt=Dt[gt],f.format!==Fe?at!==null?qt?e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,gt,0,0,0,Rt.width,Rt.height,j.depth,at,Rt.data,0,0):e.compressedTexImage3D(r.TEXTURE_2D_ARRAY,gt,vt,Rt.width,Rt.height,j.depth,0,Rt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):qt?e.texSubImage3D(r.TEXTURE_2D_ARRAY,gt,0,0,0,Rt.width,Rt.height,j.depth,at,St,Rt.data):e.texImage3D(r.TEXTURE_2D_ARRAY,gt,vt,Rt.width,Rt.height,j.depth,0,at,St,Rt.data)}else{qt&&it&&e.texStorage2D(r.TEXTURE_2D,Ct,vt,Dt[0].width,Dt[0].height);for(let gt=0,Et=Dt.length;gt<Et;gt++)Rt=Dt[gt],f.format!==Fe?at!==null?qt?e.compressedTexSubImage2D(r.TEXTURE_2D,gt,0,0,Rt.width,Rt.height,at,Rt.data):e.compressedTexImage2D(r.TEXTURE_2D,gt,vt,Rt.width,Rt.height,0,Rt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):qt?e.texSubImage2D(r.TEXTURE_2D,gt,0,0,Rt.width,Rt.height,at,St,Rt.data):e.texImage2D(r.TEXTURE_2D,gt,vt,Rt.width,Rt.height,0,at,St,Rt.data)}else if(f.isDataArrayTexture)qt?(it&&e.texStorage3D(r.TEXTURE_2D_ARRAY,Ct,vt,j.width,j.height,j.depth),e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,j.width,j.height,j.depth,at,St,j.data)):e.texImage3D(r.TEXTURE_2D_ARRAY,0,vt,j.width,j.height,j.depth,0,at,St,j.data);else if(f.isData3DTexture)qt?(it&&e.texStorage3D(r.TEXTURE_3D,Ct,vt,j.width,j.height,j.depth),e.texSubImage3D(r.TEXTURE_3D,0,0,0,0,j.width,j.height,j.depth,at,St,j.data)):e.texImage3D(r.TEXTURE_3D,0,vt,j.width,j.height,j.depth,0,at,St,j.data);else if(f.isFramebufferTexture){if(it)if(qt)e.texStorage2D(r.TEXTURE_2D,Ct,vt,j.width,j.height);else{let gt=j.width,Et=j.height;for(let At=0;At<Ct;At++)e.texImage2D(r.TEXTURE_2D,At,vt,gt,Et,0,at,St,null),gt>>=1,Et>>=1}}else if(Dt.length>0&&k){qt&&it&&e.texStorage2D(r.TEXTURE_2D,Ct,vt,Dt[0].width,Dt[0].height);for(let gt=0,Et=Dt.length;gt<Et;gt++)Rt=Dt[gt],qt?e.texSubImage2D(r.TEXTURE_2D,gt,0,0,at,St,Rt):e.texImage2D(r.TEXTURE_2D,gt,vt,at,St,Rt);f.generateMipmaps=!1}else qt?(it&&e.texStorage2D(r.TEXTURE_2D,Ct,vt,j.width,j.height),e.texSubImage2D(r.TEXTURE_2D,0,0,0,at,St,j)):e.texImage2D(r.TEXTURE_2D,0,vt,at,St,j);b(f,k)&&E(A),I.__version=R.version,f.onUpdate&&f.onUpdate(f)}F.__version=f.version}function It(F,f,S){if(f.image.length!==6)return;const A=ot(F,f),z=f.source;e.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+S);const R=n.get(z);if(z.version!==R.__version||A===!0){e.activeTexture(r.TEXTURE0+S),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,f.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,f.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,f.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const I=f.isCompressedTexture||f.image[0].isCompressedTexture,q=f.image[0]&&f.image[0].isDataTexture,j=[];for(let gt=0;gt<6;gt++)!I&&!q?j[gt]=v(f.image[gt],!1,!0,c):j[gt]=q?f.image[gt].image:f.image[gt],j[gt]=Tt(f,j[gt]);const k=j[0],at=x(k)||a,St=s.convert(f.format,f.colorSpace),vt=s.convert(f.type),Rt=L(f.internalFormat,St,vt,f.colorSpace),Dt=a&&f.isVideoTexture!==!0,qt=R.__version===void 0||A===!0;let it=T(f,k,at);ct(r.TEXTURE_CUBE_MAP,f,at);let Ct;if(I){Dt&&qt&&e.texStorage2D(r.TEXTURE_CUBE_MAP,it,Rt,k.width,k.height);for(let gt=0;gt<6;gt++){Ct=j[gt].mipmaps;for(let Et=0;Et<Ct.length;Et++){const At=Ct[Et];f.format!==Fe?St!==null?Dt?e.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et,0,0,At.width,At.height,St,At.data):e.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et,Rt,At.width,At.height,0,At.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Dt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et,0,0,At.width,At.height,St,vt,At.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et,Rt,At.width,At.height,0,St,vt,At.data)}}}else{Ct=f.mipmaps,Dt&&qt&&(Ct.length>0&&it++,e.texStorage2D(r.TEXTURE_CUBE_MAP,it,Rt,j[0].width,j[0].height));for(let gt=0;gt<6;gt++)if(q){Dt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,0,0,j[gt].width,j[gt].height,St,vt,j[gt].data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,Rt,j[gt].width,j[gt].height,0,St,vt,j[gt].data);for(let Et=0;Et<Ct.length;Et++){const Ft=Ct[Et].image[gt].image;Dt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et+1,0,0,Ft.width,Ft.height,St,vt,Ft.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et+1,Rt,Ft.width,Ft.height,0,St,vt,Ft.data)}}else{Dt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,0,0,St,vt,j[gt]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,Rt,St,vt,j[gt]);for(let Et=0;Et<Ct.length;Et++){const At=Ct[Et];Dt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et+1,0,0,St,vt,At.image[gt]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Et+1,Rt,St,vt,At.image[gt])}}}b(f,at)&&E(r.TEXTURE_CUBE_MAP),R.__version=z.version,f.onUpdate&&f.onUpdate(f)}F.__version=f.version}function Mt(F,f,S,A,z,R){const I=s.convert(S.format,S.colorSpace),q=s.convert(S.type),j=L(S.internalFormat,I,q,S.colorSpace);if(!n.get(f).__hasExternalTextures){const at=Math.max(1,f.width>>R),St=Math.max(1,f.height>>R);z===r.TEXTURE_3D||z===r.TEXTURE_2D_ARRAY?e.texImage3D(z,R,j,at,St,f.depth,0,I,q,null):e.texImage2D(z,R,j,at,St,0,I,q,null)}e.bindFramebuffer(r.FRAMEBUFFER,F),st(f)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,A,z,n.get(S).__webglTexture,0,K(f)):(z===r.TEXTURE_2D||z>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&z<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,A,z,n.get(S).__webglTexture,R),e.bindFramebuffer(r.FRAMEBUFFER,null)}function V(F,f,S){if(r.bindRenderbuffer(r.RENDERBUFFER,F),f.depthBuffer&&!f.stencilBuffer){let A=r.DEPTH_COMPONENT16;if(S||st(f)){const z=f.depthTexture;z&&z.isDepthTexture&&(z.type===cn?A=r.DEPTH_COMPONENT32F:z.type===En&&(A=r.DEPTH_COMPONENT24));const R=K(f);st(f)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,R,A,f.width,f.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,R,A,f.width,f.height)}else r.renderbufferStorage(r.RENDERBUFFER,A,f.width,f.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(f.depthBuffer&&f.stencilBuffer){const A=K(f);S&&st(f)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,A,r.DEPTH24_STENCIL8,f.width,f.height):st(f)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,A,r.DEPTH24_STENCIL8,f.width,f.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,f.width,f.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const A=f.isWebGLMultipleRenderTargets===!0?f.texture:[f.texture];for(let z=0;z<A.length;z++){const R=A[z],I=s.convert(R.format,R.colorSpace),q=s.convert(R.type),j=L(R.internalFormat,I,q,R.colorSpace),k=K(f);S&&st(f)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,k,j,f.width,f.height):st(f)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,k,j,f.width,f.height):r.renderbufferStorage(r.RENDERBUFFER,j,f.width,f.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function _t(F,f){if(f&&f.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(r.FRAMEBUFFER,F),!(f.depthTexture&&f.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(f.depthTexture).__webglTexture||f.depthTexture.image.width!==f.width||f.depthTexture.image.height!==f.height)&&(f.depthTexture.image.width=f.width,f.depthTexture.image.height=f.height,f.depthTexture.needsUpdate=!0),rt(f.depthTexture,0);const A=n.get(f.depthTexture).__webglTexture,z=K(f);if(f.depthTexture.format===Bn)st(f)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,A,0,z):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,A,0);else if(f.depthTexture.format===vi)st(f)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,A,0,z):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,A,0);else throw new Error("Unknown depthTexture format")}function ht(F){const f=n.get(F),S=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!f.__autoAllocateDepthBuffer){if(S)throw new Error("target.depthTexture not supported in Cube render targets");_t(f.__webglFramebuffer,F)}else if(S){f.__webglDepthbuffer=[];for(let A=0;A<6;A++)e.bindFramebuffer(r.FRAMEBUFFER,f.__webglFramebuffer[A]),f.__webglDepthbuffer[A]=r.createRenderbuffer(),V(f.__webglDepthbuffer[A],F,!1)}else e.bindFramebuffer(r.FRAMEBUFFER,f.__webglFramebuffer),f.__webglDepthbuffer=r.createRenderbuffer(),V(f.__webglDepthbuffer,F,!1);e.bindFramebuffer(r.FRAMEBUFFER,null)}function Q(F,f,S){const A=n.get(F);f!==void 0&&Mt(A.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),S!==void 0&&ht(F)}function nt(F){const f=F.texture,S=n.get(F),A=n.get(f);F.addEventListener("dispose",X),F.isWebGLMultipleRenderTargets!==!0&&(A.__webglTexture===void 0&&(A.__webglTexture=r.createTexture()),A.__version=f.version,o.memory.textures++);const z=F.isWebGLCubeRenderTarget===!0,R=F.isWebGLMultipleRenderTargets===!0,I=x(F)||a;if(z){S.__webglFramebuffer=[];for(let q=0;q<6;q++)if(a&&f.mipmaps&&f.mipmaps.length>0){S.__webglFramebuffer[q]=[];for(let j=0;j<f.mipmaps.length;j++)S.__webglFramebuffer[q][j]=r.createFramebuffer()}else S.__webglFramebuffer[q]=r.createFramebuffer()}else{if(a&&f.mipmaps&&f.mipmaps.length>0){S.__webglFramebuffer=[];for(let q=0;q<f.mipmaps.length;q++)S.__webglFramebuffer[q]=r.createFramebuffer()}else S.__webglFramebuffer=r.createFramebuffer();if(R)if(i.drawBuffers){const q=F.texture;for(let j=0,k=q.length;j<k;j++){const at=n.get(q[j]);at.__webglTexture===void 0&&(at.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&F.samples>0&&st(F)===!1){const q=R?f:[f];S.__webglMultisampledFramebuffer=r.createFramebuffer(),S.__webglColorRenderbuffer=[],e.bindFramebuffer(r.FRAMEBUFFER,S.__webglMultisampledFramebuffer);for(let j=0;j<q.length;j++){const k=q[j];S.__webglColorRenderbuffer[j]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,S.__webglColorRenderbuffer[j]);const at=s.convert(k.format,k.colorSpace),St=s.convert(k.type),vt=L(k.internalFormat,at,St,k.colorSpace,F.isXRRenderTarget===!0),Rt=K(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,Rt,vt,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+j,r.RENDERBUFFER,S.__webglColorRenderbuffer[j])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(S.__webglDepthRenderbuffer=r.createRenderbuffer(),V(S.__webglDepthRenderbuffer,F,!0)),e.bindFramebuffer(r.FRAMEBUFFER,null)}}if(z){e.bindTexture(r.TEXTURE_CUBE_MAP,A.__webglTexture),ct(r.TEXTURE_CUBE_MAP,f,I);for(let q=0;q<6;q++)if(a&&f.mipmaps&&f.mipmaps.length>0)for(let j=0;j<f.mipmaps.length;j++)Mt(S.__webglFramebuffer[q][j],F,f,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+q,j);else Mt(S.__webglFramebuffer[q],F,f,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+q,0);b(f,I)&&E(r.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(R){const q=F.texture;for(let j=0,k=q.length;j<k;j++){const at=q[j],St=n.get(at);e.bindTexture(r.TEXTURE_2D,St.__webglTexture),ct(r.TEXTURE_2D,at,I),Mt(S.__webglFramebuffer,F,at,r.COLOR_ATTACHMENT0+j,r.TEXTURE_2D,0),b(at,I)&&E(r.TEXTURE_2D)}e.unbindTexture()}else{let q=r.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(a?q=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(q,A.__webglTexture),ct(q,f,I),a&&f.mipmaps&&f.mipmaps.length>0)for(let j=0;j<f.mipmaps.length;j++)Mt(S.__webglFramebuffer[j],F,f,r.COLOR_ATTACHMENT0,q,j);else Mt(S.__webglFramebuffer,F,f,r.COLOR_ATTACHMENT0,q,0);b(f,I)&&E(q),e.unbindTexture()}F.depthBuffer&&ht(F)}function yt(F){const f=x(F)||a,S=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let A=0,z=S.length;A<z;A++){const R=S[A];if(b(R,f)){const I=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,q=n.get(R).__webglTexture;e.bindTexture(I,q),E(I),e.unbindTexture()}}}function lt(F){if(a&&F.samples>0&&st(F)===!1){const f=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],S=F.width,A=F.height;let z=r.COLOR_BUFFER_BIT;const R=[],I=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,q=n.get(F),j=F.isWebGLMultipleRenderTargets===!0;if(j)for(let k=0;k<f.length;k++)e.bindFramebuffer(r.FRAMEBUFFER,q.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+k,r.RENDERBUFFER,null),e.bindFramebuffer(r.FRAMEBUFFER,q.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+k,r.TEXTURE_2D,null,0);e.bindFramebuffer(r.READ_FRAMEBUFFER,q.__webglMultisampledFramebuffer),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,q.__webglFramebuffer);for(let k=0;k<f.length;k++){R.push(r.COLOR_ATTACHMENT0+k),F.depthBuffer&&R.push(I);const at=q.__ignoreDepthValues!==void 0?q.__ignoreDepthValues:!1;if(at===!1&&(F.depthBuffer&&(z|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(z|=r.STENCIL_BUFFER_BIT)),j&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,q.__webglColorRenderbuffer[k]),at===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[I]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[I])),j){const St=n.get(f[k]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,St,0)}r.blitFramebuffer(0,0,S,A,0,0,S,A,z,r.NEAREST),m&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,R)}if(e.bindFramebuffer(r.READ_FRAMEBUFFER,null),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),j)for(let k=0;k<f.length;k++){e.bindFramebuffer(r.FRAMEBUFFER,q.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+k,r.RENDERBUFFER,q.__webglColorRenderbuffer[k]);const at=n.get(f[k]).__webglTexture;e.bindFramebuffer(r.FRAMEBUFFER,q.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+k,r.TEXTURE_2D,at,0)}e.bindFramebuffer(r.DRAW_FRAMEBUFFER,q.__webglMultisampledFramebuffer)}}function K(F){return Math.min(d,F.samples)}function st(F){const f=n.get(F);return a&&F.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&f.__useRenderToTexture!==!1}function mt(F){const f=o.render.frame;h.get(F)!==f&&(h.set(F,f),F.update())}function Tt(F,f){const S=F.colorSpace,A=F.format,z=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===io||S!==Qe&&S!==kn&&(S===ne||S===Yr?a===!1?t.has("EXT_sRGB")===!0&&A===Fe?(F.format=io,F.minFilter=re,F.generateMipmaps=!1):f=Rl.sRGBToLinear(f):(A!==Fe||z!==Rn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",S)),f}this.allocateTextureUnit=D,this.resetTextureUnits=Z,this.setTexture2D=rt,this.setTexture2DArray=U,this.setTexture3D=N,this.setTextureCube=H,this.rebindTextures=Q,this.setupRenderTarget=nt,this.updateRenderTargetMipmap=yt,this.updateMultisampleRenderTarget=lt,this.setupDepthRenderbuffer=ht,this.setupFrameBufferTexture=Mt,this.useMultisampledRTT=st}const my=0,ge=1;function sf(r,t,e){const n=e.isWebGL2;function i(s,o=kn){let a;const l=o===ne||o===Yr?ge:my;if(s===Rn)return r.UNSIGNED_BYTE;if(s===vl)return r.UNSIGNED_SHORT_4_4_4_4;if(s===xl)return r.UNSIGNED_SHORT_5_5_5_1;if(s===xu)return r.BYTE;if(s===bu)return r.SHORT;if(s===ao)return r.UNSIGNED_SHORT;if(s===yl)return r.INT;if(s===En)return r.UNSIGNED_INT;if(s===cn)return r.FLOAT;if(s===Vn)return n?r.HALF_FLOAT:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===Su)return r.ALPHA;if(s===Fe)return r.RGBA;if(s===Mu)return r.LUMINANCE;if(s===wu)return r.LUMINANCE_ALPHA;if(s===Bn)return r.DEPTH_COMPONENT;if(s===vi)return r.DEPTH_STENCIL;if(s===io)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===bl)return r.RED;if(s===Sl)return r.RED_INTEGER;if(s===Eu)return r.RG;if(s===Ml)return r.RG_INTEGER;if(s===wl)return r.RGBA_INTEGER;if(s===Ys||s===js||s===$s||s===Zs)if(l===ge)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Ys)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===js)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===$s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Zs)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Ys)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===js)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===$s)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Zs)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Pa||s===Ua||s===Na||s===Da)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Pa)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Ua)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Na)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Da)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Tu)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Oa||s===Fa)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(s===Oa)return l===ge?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Fa)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Ba||s===za||s===ka||s===Ga||s===Ha||s===Va||s===Wa||s===Xa||s===qa||s===Ya||s===ja||s===$a||s===Za||s===Ja)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Ba)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===za)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===ka)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Ga)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Ha)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Va)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Wa)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Xa)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===qa)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Ya)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===ja)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===$a)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Za)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Ja)return l===ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Js||s===Ka||s===Qa)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(s===Js)return l===ge?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Ka)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Qa)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Au||s===tl||s===el||s===nl)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(s===Js)return a.COMPRESSED_RED_RGTC1_EXT;if(s===tl)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===el)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===nl)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Fn?n?r.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class of extends xe{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Zi extends Jt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const gy={type:"move"};class la{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Zi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Zi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new W,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new W),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Zi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new W,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new W),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const y=e.getJointPose(g,n),_=this._getHandJoint(c,g);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const u=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],p=u.position.distanceTo(d.position),m=.02,h=.005;c.inputState.pinching&&p>m+h?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&p<=m-h&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(gy)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Zi;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class af extends fe{constructor(t,e,n,i,s,o,a,l,c,u){if(u=u!==void 0?u:Bn,u!==Bn&&u!==vi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Bn&&(n=En),n===void 0&&u===vi&&(n=Fn),super(null,i,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ue,this.minFilter=l!==void 0?l:ue,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class _y extends fn{constructor(t,e){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,d=null,p=null,m=null,h=null;const g=e.getContextAttributes();let y=null,_=null;const M=[],v=[],x=new xe;x.layers.enable(1),x.viewport=new Qt;const w=new xe;w.layers.enable(2),w.viewport=new Qt;const b=[x,w],E=new of;E.layers.enable(1),E.layers.enable(2);let L=null,T=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let N=M[U];return N===void 0&&(N=new la,M[U]=N),N.getTargetRaySpace()},this.getControllerGrip=function(U){let N=M[U];return N===void 0&&(N=new la,M[U]=N),N.getGripSpace()},this.getHand=function(U){let N=M[U];return N===void 0&&(N=new la,M[U]=N),N.getHandSpace()};function P(U){const N=v.indexOf(U.inputSource);if(N===-1)return;const H=M[N];H!==void 0&&(H.update(U.inputSource,U.frame,c||o),H.dispatchEvent({type:U.type,data:U.inputSource}))}function G(){i.removeEventListener("select",P),i.removeEventListener("selectstart",P),i.removeEventListener("selectend",P),i.removeEventListener("squeeze",P),i.removeEventListener("squeezestart",P),i.removeEventListener("squeezeend",P),i.removeEventListener("end",G),i.removeEventListener("inputsourceschange",X);for(let U=0;U<M.length;U++){const N=v[U];N!==null&&(v[U]=null,M[U].disconnect(N))}L=null,T=null,t.setRenderTarget(y),m=null,p=null,d=null,i=null,_=null,rt.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){s=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){a=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(U){c=U},this.getBaseLayer=function(){return p!==null?p:m},this.getBinding=function(){return d},this.getFrame=function(){return h},this.getSession=function(){return i},this.setSession=async function(U){if(i=U,i!==null){if(y=t.getRenderTarget(),i.addEventListener("select",P),i.addEventListener("selectstart",P),i.addEventListener("selectend",P),i.addEventListener("squeeze",P),i.addEventListener("squeezestart",P),i.addEventListener("squeezeend",P),i.addEventListener("end",G),i.addEventListener("inputsourceschange",X),g.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const N={antialias:i.renderState.layers===void 0?g.antialias:!0,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(i,e,N),i.updateRenderState({baseLayer:m}),_=new tn(m.framebufferWidth,m.framebufferHeight,{format:Fe,type:Rn,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil})}else{let N=null,H=null,Y=null;g.depth&&(Y=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,N=g.stencil?vi:Bn,H=g.stencil?Fn:En);const et={colorFormat:e.RGBA8,depthFormat:Y,scaleFactor:s};d=new XRWebGLBinding(i,e),p=d.createProjectionLayer(et),i.updateRenderState({layers:[p]}),_=new tn(p.textureWidth,p.textureHeight,{format:Fe,type:Rn,depthTexture:new af(p.textureWidth,p.textureHeight,H,void 0,void 0,void 0,void 0,void 0,void 0,N),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0});const ut=t.properties.get(_);ut.__ignoreDepthValues=p.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),rt.setContext(i),rt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function X(U){for(let N=0;N<U.removed.length;N++){const H=U.removed[N],Y=v.indexOf(H);Y>=0&&(v[Y]=null,M[Y].disconnect(H))}for(let N=0;N<U.added.length;N++){const H=U.added[N];let Y=v.indexOf(H);if(Y===-1){for(let ut=0;ut<M.length;ut++)if(ut>=v.length){v.push(H),Y=ut;break}else if(v[ut]===null){v[ut]=H,Y=ut;break}if(Y===-1)break}const et=M[Y];et&&et.connect(H)}}const $=new W,O=new W;function B(U,N,H){$.setFromMatrixPosition(N.matrixWorld),O.setFromMatrixPosition(H.matrixWorld);const Y=$.distanceTo(O),et=N.projectionMatrix.elements,ut=H.projectionMatrix.elements,ct=et[14]/(et[10]-1),ot=et[14]/(et[10]+1),dt=(et[9]+1)/et[5],It=(et[9]-1)/et[5],Mt=(et[8]-1)/et[0],V=(ut[8]+1)/ut[0],_t=ct*Mt,ht=ct*V,Q=Y/(-Mt+V),nt=Q*-Mt;N.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(nt),U.translateZ(Q),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();const yt=ct+Q,lt=ot+Q,K=_t-nt,st=ht+(Y-nt),mt=dt*ot/lt*yt,Tt=It*ot/lt*yt;U.projectionMatrix.makePerspective(K,st,mt,Tt,yt,lt),U.projectionMatrixInverse.copy(U.projectionMatrix).invert()}function C(U,N){N===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(N.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(i===null)return;E.near=w.near=x.near=U.near,E.far=w.far=x.far=U.far,(L!==E.near||T!==E.far)&&(i.updateRenderState({depthNear:E.near,depthFar:E.far}),L=E.near,T=E.far);const N=U.parent,H=E.cameras;C(E,N);for(let Y=0;Y<H.length;Y++)C(H[Y],N);H.length===2?B(E,x,w):E.projectionMatrix.copy(x.projectionMatrix),Z(U,E,N)};function Z(U,N,H){H===null?U.matrix.copy(N.matrixWorld):(U.matrix.copy(H.matrixWorld),U.matrix.invert(),U.matrix.multiply(N.matrixWorld)),U.matrix.decompose(U.position,U.quaternion,U.scale),U.updateMatrixWorld(!0),U.projectionMatrix.copy(N.projectionMatrix),U.projectionMatrixInverse.copy(N.projectionMatrixInverse),U.isPerspectiveCamera&&(U.fov=tr*2*Math.atan(1/U.projectionMatrix.elements[5]),U.zoom=1)}this.getCamera=function(){return E},this.getFoveation=function(){if(!(p===null&&m===null))return l},this.setFoveation=function(U){l=U,p!==null&&(p.fixedFoveation=U),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=U)};let D=null;function tt(U,N){if(u=N.getViewerPose(c||o),h=N,u!==null){const H=u.views;m!==null&&(t.setRenderTargetFramebuffer(_,m.framebuffer),t.setRenderTarget(_));let Y=!1;H.length!==E.cameras.length&&(E.cameras.length=0,Y=!0);for(let et=0;et<H.length;et++){const ut=H[et];let ct=null;if(m!==null)ct=m.getViewport(ut);else{const dt=d.getViewSubImage(p,ut);ct=dt.viewport,et===0&&(t.setRenderTargetTextures(_,dt.colorTexture,p.ignoreDepthValues?void 0:dt.depthStencilTexture),t.setRenderTarget(_))}let ot=b[et];ot===void 0&&(ot=new xe,ot.layers.enable(et),ot.viewport=new Qt,b[et]=ot),ot.matrix.fromArray(ut.transform.matrix),ot.matrix.decompose(ot.position,ot.quaternion,ot.scale),ot.projectionMatrix.fromArray(ut.projectionMatrix),ot.projectionMatrixInverse.copy(ot.projectionMatrix).invert(),ot.viewport.set(ct.x,ct.y,ct.width,ct.height),et===0&&(E.matrix.copy(ot.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),Y===!0&&E.cameras.push(ot)}}for(let H=0;H<M.length;H++){const Y=v[H],et=M[H];Y!==null&&et!==void 0&&et.update(Y,N,c||o)}D&&D(U,N),N.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:N}),h=null}const rt=new Qu;rt.setAnimationLoop(tt),this.setAnimationLoop=function(U){D=U},this.dispose=function(){}}}function yy(r,t){function e(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,$u(r)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,M,v,x){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(y,_):_.isMeshToonMaterial?(s(y,_),d(y,_)):_.isMeshPhongMaterial?(s(y,_),u(y,_)):_.isMeshStandardMaterial?(s(y,_),p(y,_),_.isMeshPhysicalMaterial&&m(y,_,x)):_.isMeshMatcapMaterial?(s(y,_),h(y,_)):_.isMeshDepthMaterial?s(y,_):_.isMeshDistanceMaterial?(s(y,_),g(y,_)):_.isMeshNormalMaterial?s(y,_):_.isLineBasicMaterial?(o(y,_),_.isLineDashedMaterial&&a(y,_)):_.isPointsMaterial?l(y,_,M,v):_.isSpriteMaterial?c(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,e(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,e(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,e(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===Ae&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,e(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===Ae&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,e(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,e(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const M=t.get(_).envMap;if(M&&(y.envMap.value=M,y.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const v=r._useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*v,e(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,y.aoMapTransform))}function o(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,e(_.map,y.mapTransform))}function a(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function l(y,_,M,v){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*M,y.scale.value=v*.5,_.map&&(y.map.value=_.map,e(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,e(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function c(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,e(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,e(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function u(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function d(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function p(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,y.roughnessMapTransform)),t.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function m(y,_,M){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Ae&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=M.texture,y.transmissionSamplerSize.value.set(M.width,M.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,y.specularIntensityMapTransform))}function h(y,_){_.matcap&&(y.matcap.value=_.matcap)}function g(y,_){const M=t.get(_).light;y.referencePosition.value.setFromMatrixPosition(M.matrixWorld),y.nearDistance.value=M.shadow.camera.near,y.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function vy(r,t,e,n){let i={},s={},o=[];const a=e.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(M,v){const x=v.program;n.uniformBlockBinding(M,x)}function c(M,v){let x=i[M.id];x===void 0&&(h(M),x=u(M),i[M.id]=x,M.addEventListener("dispose",y));const w=v.program;n.updateUBOMapping(M,w);const b=t.render.frame;s[M.id]!==b&&(p(M),s[M.id]=b)}function u(M){const v=d();M.__bindingPointIndex=v;const x=r.createBuffer(),w=M.__size,b=M.usage;return r.bindBuffer(r.UNIFORM_BUFFER,x),r.bufferData(r.UNIFORM_BUFFER,w,b),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,v,x),x}function d(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(M){const v=i[M.id],x=M.uniforms,w=M.__cache;r.bindBuffer(r.UNIFORM_BUFFER,v);for(let b=0,E=x.length;b<E;b++){const L=x[b];if(m(L,b,w)===!0){const T=L.__offset,P=Array.isArray(L.value)?L.value:[L.value];let G=0;for(let X=0;X<P.length;X++){const $=P[X],O=g($);typeof $=="number"?(L.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,T+G,L.__data)):$.isMatrix3?(L.__data[0]=$.elements[0],L.__data[1]=$.elements[1],L.__data[2]=$.elements[2],L.__data[3]=$.elements[0],L.__data[4]=$.elements[3],L.__data[5]=$.elements[4],L.__data[6]=$.elements[5],L.__data[7]=$.elements[0],L.__data[8]=$.elements[6],L.__data[9]=$.elements[7],L.__data[10]=$.elements[8],L.__data[11]=$.elements[0]):($.toArray(L.__data,G),G+=O.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,T,L.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function m(M,v,x){const w=M.value;if(x[v]===void 0){if(typeof w=="number")x[v]=w;else{const b=Array.isArray(w)?w:[w],E=[];for(let L=0;L<b.length;L++)E.push(b[L].clone());x[v]=E}return!0}else if(typeof w=="number"){if(x[v]!==w)return x[v]=w,!0}else{const b=Array.isArray(x[v])?x[v]:[x[v]],E=Array.isArray(w)?w:[w];for(let L=0;L<b.length;L++){const T=b[L];if(T.equals(E[L])===!1)return T.copy(E[L]),!0}}return!1}function h(M){const v=M.uniforms;let x=0;const w=16;let b=0;for(let E=0,L=v.length;E<L;E++){const T=v[E],P={boundary:0,storage:0},G=Array.isArray(T.value)?T.value:[T.value];for(let X=0,$=G.length;X<$;X++){const O=G[X],B=g(O);P.boundary+=B.boundary,P.storage+=B.storage}if(T.__data=new Float32Array(P.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=x,E>0){b=x%w;const X=w-b;b!==0&&X-P.boundary<0&&(x+=w-b,T.__offset=x)}x+=P.storage}return b=x%w,b>0&&(x+=w-b),M.__size=x,M.__cache={},this}function g(M){const v={boundary:0,storage:0};return typeof M=="number"?(v.boundary=4,v.storage=4):M.isVector2?(v.boundary=8,v.storage=8):M.isVector3||M.isColor?(v.boundary=16,v.storage=12):M.isVector4?(v.boundary=16,v.storage=16):M.isMatrix3?(v.boundary=48,v.storage=48):M.isMatrix4?(v.boundary=64,v.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),v}function y(M){const v=M.target;v.removeEventListener("dispose",y);const x=o.indexOf(v.__bindingPointIndex);o.splice(x,1),r.deleteBuffer(i[v.id]),delete i[v.id],delete s[v.id]}function _(){for(const M in i)r.deleteBuffer(i[M]);o=[],i={},s={}}return{bind:l,update:c,dispose:_}}class Nl{constructor(t={}){const{canvas:e=qu(),context:n=null,depth:i=!0,stencil:s=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:d=!1}=t;this.isWebGLRenderer=!0;let p;n!==null?p=n.getContextAttributes().alpha:p=o;const m=new Uint32Array(4),h=new Int32Array(4);let g=null,y=null;const _=[],M=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ne,this._useLegacyLights=!1,this.toneMapping=An,this.toneMappingExposure=1;const v=this;let x=!1,w=0,b=0,E=null,L=-1,T=null;const P=new Qt,G=new Qt;let X=null;const $=new Pt(0);let O=0,B=e.width,C=e.height,Z=1,D=null,tt=null;const rt=new Qt(0,0,B,C),U=new Qt(0,0,B,C);let N=!1;const H=new fo;let Y=!1,et=!1,ut=null;const ct=new zt,ot=new wt,dt=new W,It={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Mt(){return E===null?Z:1}let V=n;function _t(J,ft){for(let xt=0;xt<J.length;xt++){const pt=J[xt],bt=e.getContext(pt,ft);if(bt!==null)return bt}return null}try{const J={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:d};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${so}`),e.addEventListener("webglcontextlost",Ct,!1),e.addEventListener("webglcontextrestored",gt,!1),e.addEventListener("webglcontextcreationerror",Et,!1),V===null){const ft=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&ft.shift(),V=_t(ft,J),V===null)throw _t(ft)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&V instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(J){throw console.error("THREE.WebGLRenderer: "+J.message),J}let ht,Q,nt,yt,lt,K,st,mt,Tt,F,f,S,A,z,R,I,q,j,k,at,St,vt,Rt,Dt;function qt(){ht=new N_(V),Q=new R_(V,ht,t),ht.init(Q),vt=new sf(V,ht,Q),nt=new dy(V,ht,Q),yt=new F_(V),lt=new ey,K=new py(V,ht,nt,lt,Q,vt,yt),st=new C_(v),mt=new U_(v),Tt=new Yp(V,Q),Rt=new T_(V,ht,Tt,Q),F=new D_(V,Tt,yt,Rt),f=new G_(V,F,Tt,yt),k=new k_(V,Q,K),I=new I_(lt),S=new ty(v,st,mt,ht,Q,Rt,I),A=new yy(v,lt),z=new iy,R=new cy(ht,Q),j=new E_(v,st,mt,nt,f,p,l),q=new fy(v,f,Q),Dt=new vy(V,yt,Q,nt),at=new A_(V,ht,yt,Q),St=new O_(V,ht,yt,Q),yt.programs=S.programs,v.capabilities=Q,v.extensions=ht,v.properties=lt,v.renderLists=z,v.shadowMap=q,v.state=nt,v.info=yt}qt();const it=new _y(v,V);this.xr=it,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const J=ht.get("WEBGL_lose_context");J&&J.loseContext()},this.forceContextRestore=function(){const J=ht.get("WEBGL_lose_context");J&&J.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(J){J!==void 0&&(Z=J,this.setSize(B,C,!1))},this.getSize=function(J){return J.set(B,C)},this.setSize=function(J,ft,xt=!0){if(it.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=J,C=ft,e.width=Math.floor(J*Z),e.height=Math.floor(ft*Z),xt===!0&&(e.style.width=J+"px",e.style.height=ft+"px"),this.setViewport(0,0,J,ft)},this.getDrawingBufferSize=function(J){return J.set(B*Z,C*Z).floor()},this.setDrawingBufferSize=function(J,ft,xt){B=J,C=ft,Z=xt,e.width=Math.floor(J*xt),e.height=Math.floor(ft*xt),this.setViewport(0,0,J,ft)},this.getCurrentViewport=function(J){return J.copy(P)},this.getViewport=function(J){return J.copy(rt)},this.setViewport=function(J,ft,xt,pt){J.isVector4?rt.set(J.x,J.y,J.z,J.w):rt.set(J,ft,xt,pt),nt.viewport(P.copy(rt).multiplyScalar(Z).floor())},this.getScissor=function(J){return J.copy(U)},this.setScissor=function(J,ft,xt,pt){J.isVector4?U.set(J.x,J.y,J.z,J.w):U.set(J,ft,xt,pt),nt.scissor(G.copy(U).multiplyScalar(Z).floor())},this.getScissorTest=function(){return N},this.setScissorTest=function(J){nt.setScissorTest(N=J)},this.setOpaqueSort=function(J){D=J},this.setTransparentSort=function(J){tt=J},this.getClearColor=function(J){return J.copy(j.getClearColor())},this.setClearColor=function(){j.setClearColor.apply(j,arguments)},this.getClearAlpha=function(){return j.getClearAlpha()},this.setClearAlpha=function(){j.setClearAlpha.apply(j,arguments)},this.clear=function(J=!0,ft=!0,xt=!0){let pt=0;if(J){let bt=!1;if(E!==null){const Ut=E.texture.format;bt=Ut===wl||Ut===Ml||Ut===Sl}if(bt){const Ut=E.texture.type,Ot=Ut===Rn||Ut===En||Ut===ao||Ut===Fn||Ut===vl||Ut===xl,kt=j.getClearColor(),Gt=j.getClearAlpha(),jt=kt.r,Bt=kt.g,Wt=kt.b;Ot?(m[0]=jt,m[1]=Bt,m[2]=Wt,m[3]=Gt,V.clearBufferuiv(V.COLOR,0,m)):(h[0]=jt,h[1]=Bt,h[2]=Wt,h[3]=Gt,V.clearBufferiv(V.COLOR,0,h))}else pt|=V.COLOR_BUFFER_BIT}ft&&(pt|=V.DEPTH_BUFFER_BIT),xt&&(pt|=V.STENCIL_BUFFER_BIT),V.clear(pt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ct,!1),e.removeEventListener("webglcontextrestored",gt,!1),e.removeEventListener("webglcontextcreationerror",Et,!1),z.dispose(),R.dispose(),lt.dispose(),st.dispose(),mt.dispose(),f.dispose(),Rt.dispose(),Dt.dispose(),S.dispose(),it.dispose(),it.removeEventListener("sessionstart",ie),it.removeEventListener("sessionend",on),ut&&(ut.dispose(),ut=null),Ie.stop()};function Ct(J){J.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function gt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const J=yt.autoReset,ft=q.enabled,xt=q.autoUpdate,pt=q.needsUpdate,bt=q.type;qt(),yt.autoReset=J,q.enabled=ft,q.autoUpdate=xt,q.needsUpdate=pt,q.type=bt}function Et(J){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",J.statusMessage)}function At(J){const ft=J.target;ft.removeEventListener("dispose",At),Ft(ft)}function Ft(J){Kt(J),lt.remove(J)}function Kt(J){const ft=lt.get(J).programs;ft!==void 0&&(ft.forEach(function(xt){S.releaseProgram(xt)}),J.isShaderMaterial&&S.releaseShaderCache(J))}this.renderBufferDirect=function(J,ft,xt,pt,bt,Ut){ft===null&&(ft=It);const Ot=bt.isMesh&&bt.matrixWorld.determinant()<0,kt=dd(J,ft,xt,pt,bt);nt.setMaterial(pt,Ot);let Gt=xt.index,jt=1;if(pt.wireframe===!0){if(Gt=F.getWireframeAttribute(xt),Gt===void 0)return;jt=2}const Bt=xt.drawRange,Wt=xt.attributes.position;let oe=Bt.start*jt,ce=(Bt.start+Bt.count)*jt;Ut!==null&&(oe=Math.max(oe,Ut.start*jt),ce=Math.min(ce,(Ut.start+Ut.count)*jt)),Gt!==null?(oe=Math.max(oe,0),ce=Math.min(ce,Gt.count)):Wt!=null&&(oe=Math.max(oe,0),ce=Math.min(ce,Wt.count));const Xe=ce-oe;if(Xe<0||Xe===1/0)return;Rt.setup(bt,pt,kt,xt,Gt);let mn,de=at;if(Gt!==null&&(mn=Tt.get(Gt),de=St,de.setIndex(mn)),bt.isMesh)pt.wireframe===!0?(nt.setLineWidth(pt.wireframeLinewidth*Mt()),de.setMode(V.LINES)):de.setMode(V.TRIANGLES);else if(bt.isLine){let $t=pt.linewidth;$t===void 0&&($t=1),nt.setLineWidth($t*Mt()),bt.isLineSegments?de.setMode(V.LINES):bt.isLineLoop?de.setMode(V.LINE_LOOP):de.setMode(V.LINE_STRIP)}else bt.isPoints?de.setMode(V.POINTS):bt.isSprite&&de.setMode(V.TRIANGLES);if(bt.isInstancedMesh)de.renderInstances(oe,Xe,bt.count);else if(xt.isInstancedBufferGeometry){const $t=xt._maxInstanceCount!==void 0?xt._maxInstanceCount:1/0,Bo=Math.min(xt.instanceCount,$t);de.renderInstances(oe,Xe,Bo)}else de.render(oe,Xe)},this.compile=function(J,ft){function xt(pt,bt,Ut){pt.transparent===!0&&pt.side===ln&&pt.forceSinglePass===!1?(pt.side=Ae,pt.needsUpdate=!0,rs(pt,bt,Ut),pt.side=In,pt.needsUpdate=!0,rs(pt,bt,Ut),pt.side=ln):rs(pt,bt,Ut)}y=R.get(J),y.init(),M.push(y),J.traverseVisible(function(pt){pt.isLight&&pt.layers.test(ft.layers)&&(y.pushLight(pt),pt.castShadow&&y.pushShadow(pt))}),y.setupLights(v._useLegacyLights),J.traverse(function(pt){const bt=pt.material;if(bt)if(Array.isArray(bt))for(let Ut=0;Ut<bt.length;Ut++){const Ot=bt[Ut];xt(Ot,J,pt)}else xt(bt,J,pt)}),M.pop(),y=null};let ee=null;function ke(J){ee&&ee(J)}function ie(){Ie.stop()}function on(){Ie.start()}const Ie=new Qu;Ie.setAnimationLoop(ke),typeof self<"u"&&Ie.setContext(self),this.setAnimationLoop=function(J){ee=J,it.setAnimationLoop(J),J===null?Ie.stop():Ie.start()},it.addEventListener("sessionstart",ie),it.addEventListener("sessionend",on),this.render=function(J,ft){if(ft!==void 0&&ft.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),ft.parent===null&&ft.matrixWorldAutoUpdate===!0&&ft.updateMatrixWorld(),it.enabled===!0&&it.isPresenting===!0&&(it.cameraAutoUpdate===!0&&it.updateCamera(ft),ft=it.getCamera()),J.isScene===!0&&J.onBeforeRender(v,J,ft,E),y=R.get(J,M.length),y.init(),M.push(y),ct.multiplyMatrices(ft.projectionMatrix,ft.matrixWorldInverse),H.setFromProjectionMatrix(ct),et=this.localClippingEnabled,Y=I.init(this.clippingPlanes,et),g=z.get(J,_.length),g.init(),_.push(g),sc(J,ft,0,v.sortObjects),g.finish(),v.sortObjects===!0&&g.sort(D,tt),this.info.render.frame++,Y===!0&&I.beginShadows();const xt=y.state.shadowsArray;if(q.render(xt,J,ft),Y===!0&&I.endShadows(),this.info.autoReset===!0&&this.info.reset(),j.render(g,J),y.setupLights(v._useLegacyLights),ft.isArrayCamera){const pt=ft.cameras;for(let bt=0,Ut=pt.length;bt<Ut;bt++){const Ot=pt[bt];oc(g,J,Ot,Ot.viewport)}}else oc(g,J,ft);E!==null&&(K.updateMultisampleRenderTarget(E),K.updateRenderTargetMipmap(E)),J.isScene===!0&&J.onAfterRender(v,J,ft),Rt.resetDefaultState(),L=-1,T=null,M.pop(),M.length>0?y=M[M.length-1]:y=null,_.pop(),_.length>0?g=_[_.length-1]:g=null};function sc(J,ft,xt,pt){if(J.visible===!1)return;if(J.layers.test(ft.layers)){if(J.isGroup)xt=J.renderOrder;else if(J.isLOD)J.autoUpdate===!0&&J.update(ft);else if(J.isLight)y.pushLight(J),J.castShadow&&y.pushShadow(J);else if(J.isSprite){if(!J.frustumCulled||H.intersectsSprite(J)){pt&&dt.setFromMatrixPosition(J.matrixWorld).applyMatrix4(ct);const Ot=f.update(J),kt=J.material;kt.visible&&g.push(J,Ot,kt,xt,dt.z,null)}}else if((J.isMesh||J.isLine||J.isPoints)&&(!J.frustumCulled||H.intersectsObject(J))){const Ot=f.update(J),kt=J.material;if(pt&&(J.boundingSphere!==void 0?(J.boundingSphere===null&&J.computeBoundingSphere(),dt.copy(J.boundingSphere.center)):(Ot.boundingSphere===null&&Ot.computeBoundingSphere(),dt.copy(Ot.boundingSphere.center)),dt.applyMatrix4(J.matrixWorld).applyMatrix4(ct)),Array.isArray(kt)){const Gt=Ot.groups;for(let jt=0,Bt=Gt.length;jt<Bt;jt++){const Wt=Gt[jt],oe=kt[Wt.materialIndex];oe&&oe.visible&&g.push(J,Ot,oe,xt,dt.z,Wt)}}else kt.visible&&g.push(J,Ot,kt,xt,dt.z,null)}}const Ut=J.children;for(let Ot=0,kt=Ut.length;Ot<kt;Ot++)sc(Ut[Ot],ft,xt,pt)}function oc(J,ft,xt,pt){const bt=J.opaque,Ut=J.transmissive,Ot=J.transparent;y.setupLightsView(xt),Y===!0&&I.setGlobalState(v.clippingPlanes,xt),Ut.length>0&&fd(bt,Ut,ft,xt),pt&&nt.viewport(P.copy(pt)),bt.length>0&&is(bt,ft,xt),Ut.length>0&&is(Ut,ft,xt),Ot.length>0&&is(Ot,ft,xt),nt.buffers.depth.setTest(!0),nt.buffers.depth.setMask(!0),nt.buffers.color.setMask(!0),nt.setPolygonOffset(!1)}function fd(J,ft,xt,pt){const bt=Q.isWebGL2;ut===null&&(ut=new tn(1,1,{generateMipmaps:!0,type:ht.has("EXT_color_buffer_half_float")?Vn:Rn,minFilter:Hn,samples:bt?4:0})),v.getDrawingBufferSize(ot),bt?ut.setSize(ot.x,ot.y):ut.setSize(ro(ot.x),ro(ot.y));const Ut=v.getRenderTarget();v.setRenderTarget(ut),v.getClearColor($),O=v.getClearAlpha(),O<1&&v.setClearColor(16777215,.5),v.clear();const Ot=v.toneMapping;v.toneMapping=An,is(J,xt,pt),K.updateMultisampleRenderTarget(ut),K.updateRenderTargetMipmap(ut);let kt=!1;for(let Gt=0,jt=ft.length;Gt<jt;Gt++){const Bt=ft[Gt],Wt=Bt.object,oe=Bt.geometry,ce=Bt.material,Xe=Bt.group;if(ce.side===ln&&Wt.layers.test(pt.layers)){const mn=ce.side;ce.side=Ae,ce.needsUpdate=!0,ac(Wt,xt,pt,oe,ce,Xe),ce.side=mn,ce.needsUpdate=!0,kt=!0}}kt===!0&&(K.updateMultisampleRenderTarget(ut),K.updateRenderTargetMipmap(ut)),v.setRenderTarget(Ut),v.setClearColor($,O),v.toneMapping=Ot}function is(J,ft,xt){const pt=ft.isScene===!0?ft.overrideMaterial:null;for(let bt=0,Ut=J.length;bt<Ut;bt++){const Ot=J[bt],kt=Ot.object,Gt=Ot.geometry,jt=pt===null?Ot.material:pt,Bt=Ot.group;kt.layers.test(xt.layers)&&ac(kt,ft,xt,Gt,jt,Bt)}}function ac(J,ft,xt,pt,bt,Ut){J.onBeforeRender(v,ft,xt,pt,bt,Ut),J.modelViewMatrix.multiplyMatrices(xt.matrixWorldInverse,J.matrixWorld),J.normalMatrix.getNormalMatrix(J.modelViewMatrix),bt.onBeforeRender(v,ft,xt,pt,J,Ut),bt.transparent===!0&&bt.side===ln&&bt.forceSinglePass===!1?(bt.side=Ae,bt.needsUpdate=!0,v.renderBufferDirect(xt,ft,pt,bt,J,Ut),bt.side=In,bt.needsUpdate=!0,v.renderBufferDirect(xt,ft,pt,bt,J,Ut),bt.side=ln):v.renderBufferDirect(xt,ft,pt,bt,J,Ut),J.onAfterRender(v,ft,xt,pt,bt,Ut)}function rs(J,ft,xt){ft.isScene!==!0&&(ft=It);const pt=lt.get(J),bt=y.state.lights,Ut=y.state.shadowsArray,Ot=bt.state.version,kt=S.getParameters(J,bt.state,Ut,ft,xt),Gt=S.getProgramCacheKey(kt);let jt=pt.programs;pt.environment=J.isMeshStandardMaterial?ft.environment:null,pt.fog=ft.fog,pt.envMap=(J.isMeshStandardMaterial?mt:st).get(J.envMap||pt.environment),jt===void 0&&(J.addEventListener("dispose",At),jt=new Map,pt.programs=jt);let Bt=jt.get(Gt);if(Bt!==void 0){if(pt.currentProgram===Bt&&pt.lightsStateVersion===Ot)return lc(J,kt),Bt}else kt.uniforms=S.getUniforms(J),J.onBuild(xt,kt,v),J.onBeforeCompile(kt,v),Bt=S.acquireProgram(kt,Gt),jt.set(Gt,Bt),pt.uniforms=kt.uniforms;const Wt=pt.uniforms;(!J.isShaderMaterial&&!J.isRawShaderMaterial||J.clipping===!0)&&(Wt.clippingPlanes=I.uniform),lc(J,kt),pt.needsLights=md(J),pt.lightsStateVersion=Ot,pt.needsLights&&(Wt.ambientLightColor.value=bt.state.ambient,Wt.lightProbe.value=bt.state.probe,Wt.directionalLights.value=bt.state.directional,Wt.directionalLightShadows.value=bt.state.directionalShadow,Wt.spotLights.value=bt.state.spot,Wt.spotLightShadows.value=bt.state.spotShadow,Wt.rectAreaLights.value=bt.state.rectArea,Wt.ltc_1.value=bt.state.rectAreaLTC1,Wt.ltc_2.value=bt.state.rectAreaLTC2,Wt.pointLights.value=bt.state.point,Wt.pointLightShadows.value=bt.state.pointShadow,Wt.hemisphereLights.value=bt.state.hemi,Wt.directionalShadowMap.value=bt.state.directionalShadowMap,Wt.directionalShadowMatrix.value=bt.state.directionalShadowMatrix,Wt.spotShadowMap.value=bt.state.spotShadowMap,Wt.spotLightMatrix.value=bt.state.spotLightMatrix,Wt.spotLightMap.value=bt.state.spotLightMap,Wt.pointShadowMap.value=bt.state.pointShadowMap,Wt.pointShadowMatrix.value=bt.state.pointShadowMatrix);const oe=Bt.getUniforms(),ce=to.seqWithValue(oe.seq,Wt);return pt.currentProgram=Bt,pt.uniformsList=ce,Bt}function lc(J,ft){const xt=lt.get(J);xt.outputColorSpace=ft.outputColorSpace,xt.instancing=ft.instancing,xt.instancingColor=ft.instancingColor,xt.skinning=ft.skinning,xt.morphTargets=ft.morphTargets,xt.morphNormals=ft.morphNormals,xt.morphColors=ft.morphColors,xt.morphTargetsCount=ft.morphTargetsCount,xt.numClippingPlanes=ft.numClippingPlanes,xt.numIntersection=ft.numClipIntersection,xt.vertexAlphas=ft.vertexAlphas,xt.vertexTangents=ft.vertexTangents,xt.toneMapping=ft.toneMapping}function dd(J,ft,xt,pt,bt){ft.isScene!==!0&&(ft=It),K.resetTextureUnits();const Ut=ft.fog,Ot=pt.isMeshStandardMaterial?ft.environment:null,kt=E===null?v.outputColorSpace:E.isXRRenderTarget===!0?E.texture.colorSpace:Qe,Gt=(pt.isMeshStandardMaterial?mt:st).get(pt.envMap||Ot),jt=pt.vertexColors===!0&&!!xt.attributes.color&&xt.attributes.color.itemSize===4,Bt=!!xt.attributes.tangent&&(!!pt.normalMap||pt.anisotropy>0),Wt=!!xt.morphAttributes.position,oe=!!xt.morphAttributes.normal,ce=!!xt.morphAttributes.color;let Xe=An;pt.toneMapped&&(E===null||E.isXRRenderTarget===!0)&&(Xe=v.toneMapping);const mn=xt.morphAttributes.position||xt.morphAttributes.normal||xt.morphAttributes.color,de=mn!==void 0?mn.length:0,$t=lt.get(pt),Bo=y.state.lights;if(Y===!0&&(et===!0||J!==T)){const Ge=J===T&&pt.id===L;I.setState(pt,J,Ge)}let pe=!1;pt.version===$t.__version?($t.needsLights&&$t.lightsStateVersion!==Bo.state.version||$t.outputColorSpace!==kt||bt.isInstancedMesh&&$t.instancing===!1||!bt.isInstancedMesh&&$t.instancing===!0||bt.isSkinnedMesh&&$t.skinning===!1||!bt.isSkinnedMesh&&$t.skinning===!0||bt.isInstancedMesh&&$t.instancingColor===!0&&bt.instanceColor===null||bt.isInstancedMesh&&$t.instancingColor===!1&&bt.instanceColor!==null||$t.envMap!==Gt||pt.fog===!0&&$t.fog!==Ut||$t.numClippingPlanes!==void 0&&($t.numClippingPlanes!==I.numPlanes||$t.numIntersection!==I.numIntersection)||$t.vertexAlphas!==jt||$t.vertexTangents!==Bt||$t.morphTargets!==Wt||$t.morphNormals!==oe||$t.morphColors!==ce||$t.toneMapping!==Xe||Q.isWebGL2===!0&&$t.morphTargetsCount!==de)&&(pe=!0):(pe=!0,$t.__version=pt.version);let Zn=$t.currentProgram;pe===!0&&(Zn=rs(pt,ft,bt));let cc=!1,lr=!1,zo=!1;const Ce=Zn.getUniforms(),Jn=$t.uniforms;if(nt.useProgram(Zn.program)&&(cc=!0,lr=!0,zo=!0),pt.id!==L&&(L=pt.id,lr=!0),cc||T!==J){Ce.setValue(V,"projectionMatrix",J.projectionMatrix),Ce.setValue(V,"viewMatrix",J.matrixWorldInverse);const Ge=Ce.map.cameraPosition;Ge!==void 0&&Ge.setValue(V,dt.setFromMatrixPosition(J.matrixWorld)),Q.logarithmicDepthBuffer&&Ce.setValue(V,"logDepthBufFC",2/(Math.log(J.far+1)/Math.LN2)),(pt.isMeshPhongMaterial||pt.isMeshToonMaterial||pt.isMeshLambertMaterial||pt.isMeshBasicMaterial||pt.isMeshStandardMaterial||pt.isShaderMaterial)&&Ce.setValue(V,"isOrthographic",J.isOrthographicCamera===!0),T!==J&&(T=J,lr=!0,zo=!0)}if(bt.isSkinnedMesh){Ce.setOptional(V,bt,"bindMatrix"),Ce.setOptional(V,bt,"bindMatrixInverse");const Ge=bt.skeleton;Ge&&(Q.floatVertexTextures?(Ge.boneTexture===null&&Ge.computeBoneTexture(),Ce.setValue(V,"boneTexture",Ge.boneTexture,K),Ce.setValue(V,"boneTextureSize",Ge.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const ko=xt.morphAttributes;if((ko.position!==void 0||ko.normal!==void 0||ko.color!==void 0&&Q.isWebGL2===!0)&&k.update(bt,xt,Zn),(lr||$t.receiveShadow!==bt.receiveShadow)&&($t.receiveShadow=bt.receiveShadow,Ce.setValue(V,"receiveShadow",bt.receiveShadow)),pt.isMeshGouraudMaterial&&pt.envMap!==null&&(Jn.envMap.value=Gt,Jn.flipEnvMap.value=Gt.isCubeTexture&&Gt.isRenderTargetTexture===!1?-1:1),lr&&(Ce.setValue(V,"toneMappingExposure",v.toneMappingExposure),$t.needsLights&&pd(Jn,zo),Ut&&pt.fog===!0&&A.refreshFogUniforms(Jn,Ut),A.refreshMaterialUniforms(Jn,pt,Z,C,ut),to.upload(V,$t.uniformsList,Jn,K)),pt.isShaderMaterial&&pt.uniformsNeedUpdate===!0&&(to.upload(V,$t.uniformsList,Jn,K),pt.uniformsNeedUpdate=!1),pt.isSpriteMaterial&&Ce.setValue(V,"center",bt.center),Ce.setValue(V,"modelViewMatrix",bt.modelViewMatrix),Ce.setValue(V,"normalMatrix",bt.normalMatrix),Ce.setValue(V,"modelMatrix",bt.matrixWorld),pt.isShaderMaterial||pt.isRawShaderMaterial){const Ge=pt.uniformsGroups;for(let Go=0,gd=Ge.length;Go<gd;Go++)if(Q.isWebGL2){const hc=Ge[Go];Dt.update(hc,Zn),Dt.bind(hc,Zn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Zn}function pd(J,ft){J.ambientLightColor.needsUpdate=ft,J.lightProbe.needsUpdate=ft,J.directionalLights.needsUpdate=ft,J.directionalLightShadows.needsUpdate=ft,J.pointLights.needsUpdate=ft,J.pointLightShadows.needsUpdate=ft,J.spotLights.needsUpdate=ft,J.spotLightShadows.needsUpdate=ft,J.rectAreaLights.needsUpdate=ft,J.hemisphereLights.needsUpdate=ft}function md(J){return J.isMeshLambertMaterial||J.isMeshToonMaterial||J.isMeshPhongMaterial||J.isMeshStandardMaterial||J.isShadowMaterial||J.isShaderMaterial&&J.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return E},this.setRenderTargetTextures=function(J,ft,xt){lt.get(J.texture).__webglTexture=ft,lt.get(J.depthTexture).__webglTexture=xt;const pt=lt.get(J);pt.__hasExternalTextures=!0,pt.__hasExternalTextures&&(pt.__autoAllocateDepthBuffer=xt===void 0,pt.__autoAllocateDepthBuffer||ht.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),pt.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(J,ft){const xt=lt.get(J);xt.__webglFramebuffer=ft,xt.__useDefaultFramebuffer=ft===void 0},this.setRenderTarget=function(J,ft=0,xt=0){E=J,w=ft,b=xt;let pt=!0,bt=null,Ut=!1,Ot=!1;if(J){const Gt=lt.get(J);Gt.__useDefaultFramebuffer!==void 0?(nt.bindFramebuffer(V.FRAMEBUFFER,null),pt=!1):Gt.__webglFramebuffer===void 0?K.setupRenderTarget(J):Gt.__hasExternalTextures&&K.rebindTextures(J,lt.get(J.texture).__webglTexture,lt.get(J.depthTexture).__webglTexture);const jt=J.texture;(jt.isData3DTexture||jt.isDataArrayTexture||jt.isCompressedArrayTexture)&&(Ot=!0);const Bt=lt.get(J).__webglFramebuffer;J.isWebGLCubeRenderTarget?(Array.isArray(Bt[ft])?bt=Bt[ft][xt]:bt=Bt[ft],Ut=!0):Q.isWebGL2&&J.samples>0&&K.useMultisampledRTT(J)===!1?bt=lt.get(J).__webglMultisampledFramebuffer:Array.isArray(Bt)?bt=Bt[xt]:bt=Bt,P.copy(J.viewport),G.copy(J.scissor),X=J.scissorTest}else P.copy(rt).multiplyScalar(Z).floor(),G.copy(U).multiplyScalar(Z).floor(),X=N;if(nt.bindFramebuffer(V.FRAMEBUFFER,bt)&&Q.drawBuffers&&pt&&nt.drawBuffers(J,bt),nt.viewport(P),nt.scissor(G),nt.setScissorTest(X),Ut){const Gt=lt.get(J.texture);V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Gt.__webglTexture,xt)}else if(Ot){const Gt=lt.get(J.texture),jt=ft||0;V.framebufferTextureLayer(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,Gt.__webglTexture,xt||0,jt)}L=-1},this.readRenderTargetPixels=function(J,ft,xt,pt,bt,Ut,Ot){if(!(J&&J.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let kt=lt.get(J).__webglFramebuffer;if(J.isWebGLCubeRenderTarget&&Ot!==void 0&&(kt=kt[Ot]),kt){nt.bindFramebuffer(V.FRAMEBUFFER,kt);try{const Gt=J.texture,jt=Gt.format,Bt=Gt.type;if(jt!==Fe&&vt.convert(jt)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Wt=Bt===Vn&&(ht.has("EXT_color_buffer_half_float")||Q.isWebGL2&&ht.has("EXT_color_buffer_float"));if(Bt!==Rn&&vt.convert(Bt)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Bt===cn&&(Q.isWebGL2||ht.has("OES_texture_float")||ht.has("WEBGL_color_buffer_float")))&&!Wt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ft>=0&&ft<=J.width-pt&&xt>=0&&xt<=J.height-bt&&V.readPixels(ft,xt,pt,bt,vt.convert(jt),vt.convert(Bt),Ut)}finally{const Gt=E!==null?lt.get(E).__webglFramebuffer:null;nt.bindFramebuffer(V.FRAMEBUFFER,Gt)}}},this.copyFramebufferToTexture=function(J,ft,xt=0){const pt=Math.pow(2,-xt),bt=Math.floor(ft.image.width*pt),Ut=Math.floor(ft.image.height*pt);K.setTexture2D(ft,0),V.copyTexSubImage2D(V.TEXTURE_2D,xt,0,0,J.x,J.y,bt,Ut),nt.unbindTexture()},this.copyTextureToTexture=function(J,ft,xt,pt=0){const bt=ft.image.width,Ut=ft.image.height,Ot=vt.convert(xt.format),kt=vt.convert(xt.type);K.setTexture2D(xt,0),V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,xt.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,xt.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,xt.unpackAlignment),ft.isDataTexture?V.texSubImage2D(V.TEXTURE_2D,pt,J.x,J.y,bt,Ut,Ot,kt,ft.image.data):ft.isCompressedTexture?V.compressedTexSubImage2D(V.TEXTURE_2D,pt,J.x,J.y,ft.mipmaps[0].width,ft.mipmaps[0].height,Ot,ft.mipmaps[0].data):V.texSubImage2D(V.TEXTURE_2D,pt,J.x,J.y,Ot,kt,ft.image),pt===0&&xt.generateMipmaps&&V.generateMipmap(V.TEXTURE_2D),nt.unbindTexture()},this.copyTextureToTexture3D=function(J,ft,xt,pt,bt=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ut=J.max.x-J.min.x+1,Ot=J.max.y-J.min.y+1,kt=J.max.z-J.min.z+1,Gt=vt.convert(pt.format),jt=vt.convert(pt.type);let Bt;if(pt.isData3DTexture)K.setTexture3D(pt,0),Bt=V.TEXTURE_3D;else if(pt.isDataArrayTexture)K.setTexture2DArray(pt,0),Bt=V.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,pt.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,pt.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,pt.unpackAlignment);const Wt=V.getParameter(V.UNPACK_ROW_LENGTH),oe=V.getParameter(V.UNPACK_IMAGE_HEIGHT),ce=V.getParameter(V.UNPACK_SKIP_PIXELS),Xe=V.getParameter(V.UNPACK_SKIP_ROWS),mn=V.getParameter(V.UNPACK_SKIP_IMAGES),de=xt.isCompressedTexture?xt.mipmaps[0]:xt.image;V.pixelStorei(V.UNPACK_ROW_LENGTH,de.width),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,de.height),V.pixelStorei(V.UNPACK_SKIP_PIXELS,J.min.x),V.pixelStorei(V.UNPACK_SKIP_ROWS,J.min.y),V.pixelStorei(V.UNPACK_SKIP_IMAGES,J.min.z),xt.isDataTexture||xt.isData3DTexture?V.texSubImage3D(Bt,bt,ft.x,ft.y,ft.z,Ut,Ot,kt,Gt,jt,de.data):xt.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D(Bt,bt,ft.x,ft.y,ft.z,Ut,Ot,kt,Gt,de.data)):V.texSubImage3D(Bt,bt,ft.x,ft.y,ft.z,Ut,Ot,kt,Gt,jt,de),V.pixelStorei(V.UNPACK_ROW_LENGTH,Wt),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,oe),V.pixelStorei(V.UNPACK_SKIP_PIXELS,ce),V.pixelStorei(V.UNPACK_SKIP_ROWS,Xe),V.pixelStorei(V.UNPACK_SKIP_IMAGES,mn),bt===0&&pt.generateMipmaps&&V.generateMipmap(Bt),nt.unbindTexture()},this.initTexture=function(J){J.isCubeTexture?K.setTextureCube(J,0):J.isData3DTexture?K.setTexture3D(J,0):J.isDataArrayTexture||J.isCompressedArrayTexture?K.setTexture2DArray(J,0):K.setTexture2D(J,0),nt.unbindTexture()},this.resetState=function(){w=0,b=0,E=null,nt.reset(),Rt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return hn}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(t){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!t}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ne?zn:Tl}set outputEncoding(t){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=t===zn?ne:Qe}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}}class lf extends Nl{}lf.prototype.isWebGL1Renderer=!0;class go{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Pt(t),this.density=e}clone(){return new go(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class _o{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Pt(t),this.near=e,this.far=n}clone(){return new _o(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Dl extends Jt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}}class yo{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Ur,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=We()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=We()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=We()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Le=new W;class xi{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Le.fromBufferAttribute(this,e),Le.applyMatrix4(t),this.setXYZ(e,Le.x,Le.y,Le.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Le.fromBufferAttribute(this,e),Le.applyNormalMatrix(t),this.setXYZ(e,Le.x,Le.y,Le.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Le.fromBufferAttribute(this,e),Le.transformDirection(t),this.setXYZ(e,Le.x,Le.y,Le.z);return this}setX(t,e){return this.normalized&&(e=Vt(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Vt(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Vt(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Vt(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Be(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Be(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Be(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Be(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=Vt(e,this.array),n=Vt(n,this.array),i=Vt(i,this.array),s=Vt(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new te(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new xi(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ol extends Re{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Pt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Hi;const dr=new W,Vi=new W,Wi=new W,Xi=new wt,pr=new wt,cf=new zt,Es=new W,mr=new W,Ts=new W,Yc=new wt,ca=new wt,jc=new wt;class hf extends Jt{constructor(t){if(super(),this.isSprite=!0,this.type="Sprite",Hi===void 0){Hi=new Yt;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new yo(e,5);Hi.setIndex([0,1,2,0,2,3]),Hi.setAttribute("position",new xi(n,3,0,!1)),Hi.setAttribute("uv",new xi(n,2,3,!1))}this.geometry=Hi,this.material=t!==void 0?t:new Ol,this.center=new wt(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Vi.setFromMatrixScale(this.matrixWorld),cf.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Wi.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Vi.multiplyScalar(-Wi.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;As(Es.set(-.5,-.5,0),Wi,o,Vi,i,s),As(mr.set(.5,-.5,0),Wi,o,Vi,i,s),As(Ts.set(.5,.5,0),Wi,o,Vi,i,s),Yc.set(0,0),ca.set(1,0),jc.set(1,1);let a=t.ray.intersectTriangle(Es,mr,Ts,!1,dr);if(a===null&&(As(mr.set(-.5,.5,0),Wi,o,Vi,i,s),ca.set(0,1),a=t.ray.intersectTriangle(Es,Ts,mr,!1,dr),a===null))return;const l=t.ray.origin.distanceTo(dr);l<t.near||l>t.far||e.push({distance:l,point:dr.clone(),uv:Oe.getInterpolation(dr,Es,mr,Ts,Yc,ca,jc,new wt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function As(r,t,e,n,i,s){Xi.subVectors(r,e).addScalar(.5).multiply(n),i!==void 0?(pr.x=s*Xi.x-i*Xi.y,pr.y=i*Xi.x+s*Xi.y):pr.copy(Xi),r.copy(t),r.x+=pr.x,r.y+=pr.y,r.applyMatrix4(cf)}const Rs=new W,$c=new W;class uf extends Jt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const s=e[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let s;for(s=0;s<i.length&&!(e<i[s].distance);s++);return i.splice(s,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let s=e[n].distance;if(e[n].object.visible&&(s-=s*e[n].hysteresis),t<s)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Rs.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Rs);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Rs.setFromMatrixPosition(t.matrixWorld),$c.setFromMatrixPosition(this.matrixWorld);const n=Rs.distanceTo($c)/t.zoom;e[0].object.visible=!0;let i,s;for(i=1,s=e.length;i<s;i++){let o=e[i].distance;if(e[i].object.visible&&(o-=o*e[i].hysteresis),n>=o)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];e.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return e}}const Zc=new W,Jc=new Qt,Kc=new Qt,xy=new W,Qc=new zt,qi=new W,ha=new nn,th=new zt,ua=new Mi;class ff extends be{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new zt,this.bindMatrixInverse=new zt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new dn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)qi.fromBufferAttribute(e,n),this.applyBoneTransform(n,qi),this.boundingBox.expandByPoint(qi)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new nn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)qi.fromBufferAttribute(e,n),this.applyBoneTransform(n,qi),this.boundingSphere.expandByPoint(qi)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ha.copy(this.boundingSphere),ha.applyMatrix4(i),t.ray.intersectsSphere(ha)!==!1&&(th.copy(i).invert(),ua.copy(t.ray).applyMatrix4(th),!(this.boundingBox!==null&&ua.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,ua)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Qt,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Jc.fromBufferAttribute(i.attributes.skinIndex,t),Kc.fromBufferAttribute(i.attributes.skinWeight,t),Zc.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const o=Kc.getComponent(s);if(o!==0){const a=Jc.getComponent(s);Qc.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(xy.copy(Zc).applyMatrix4(Qc),o)}}return e.applyMatrix4(this.bindMatrixInverse)}boneTransform(t,e){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(t,e)}}class Fl extends Jt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Qi extends fe{constructor(t=null,e=1,n=1,i,s,o,a,l,c=ue,u=ue,d,p){super(null,o,a,l,c,u,i,s,d,p),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const eh=new zt,by=new zt;class vo{constructor(t=[],e=[]){this.uuid=We(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new zt)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new zt;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=t.length;s<o;s++){const a=t[s]?t[s].matrixWorld:by;eh.multiplyMatrices(a,e[s]),eh.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new vo(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Vu(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Qi(e,t,t,Fe,cn);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const s=t.bones[n];let o=e[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Fl),this.bones.push(o),this.boneInverses.push(new zt().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const o=e[i];t.bones.push(o.uuid);const a=n[i];t.boneInverses.push(a.toArray())}return t}}class nr extends te{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Yi=new zt,nh=new zt,Is=[],ih=new dn,Sy=new zt,gr=new be,_r=new nn;class df extends be{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new nr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Sy)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new dn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Yi),ih.copy(t.boundingBox).applyMatrix4(Yi),this.boundingBox.union(ih)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new nn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Yi),_r.copy(t.boundingSphere).applyMatrix4(Yi),this.boundingSphere.union(_r)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(gr.geometry=this.geometry,gr.material=this.material,gr.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),_r.copy(this.boundingSphere),_r.applyMatrix4(n),t.ray.intersectsSphere(_r)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Yi),nh.multiplyMatrices(n,Yi),gr.matrixWorld=nh,gr.raycast(t,Is);for(let o=0,a=Is.length;o<a;o++){const l=Is[o];l.instanceId=s,l.object=this,e.push(l)}Is.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new nr(new Float32Array(this.instanceMatrix.count*3),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Ue extends Re{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Pt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const rh=new W,sh=new W,oh=new zt,fa=new Mi,Cs=new nn;class Wn extends Jt{constructor(t=new Yt,e=new Ue){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)rh.fromBufferAttribute(e,i-1),sh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=rh.distanceTo(sh);t.setAttribute("lineDistance",new Nt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Cs.copy(n.boundingSphere),Cs.applyMatrix4(i),Cs.radius+=s,t.ray.intersectsSphere(Cs)===!1)return;oh.copy(i).invert(),fa.copy(t.ray).applyMatrix4(oh);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new W,u=new W,d=new W,p=new W,m=this.isLineSegments?2:1,h=n.index,y=n.attributes.position;if(h!==null){const _=Math.max(0,o.start),M=Math.min(h.count,o.start+o.count);for(let v=_,x=M-1;v<x;v+=m){const w=h.getX(v),b=h.getX(v+1);if(c.fromBufferAttribute(y,w),u.fromBufferAttribute(y,b),fa.distanceSqToSegment(c,u,p,d)>l)continue;p.applyMatrix4(this.matrixWorld);const L=t.ray.origin.distanceTo(p);L<t.near||L>t.far||e.push({distance:L,point:d.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),M=Math.min(y.count,o.start+o.count);for(let v=_,x=M-1;v<x;v+=m){if(c.fromBufferAttribute(y,v),u.fromBufferAttribute(y,v+1),fa.distanceSqToSegment(c,u,p,d)>l)continue;p.applyMatrix4(this.matrixWorld);const b=t.ray.origin.distanceTo(p);b<t.near||b>t.far||e.push({distance:b,point:d.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const ah=new W,lh=new W;class pn extends Wn{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)ah.fromBufferAttribute(e,i),lh.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ah.distanceTo(lh);t.setAttribute("lineDistance",new Nt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class pf extends Wn{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Bl extends Re{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Pt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const ch=new zt,al=new Mi,Ls=new nn,Ps=new W;class mf extends Jt{constructor(t=new Yt,e=new Bl){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ls.copy(n.boundingSphere),Ls.applyMatrix4(i),Ls.radius+=s,t.ray.intersectsSphere(Ls)===!1)return;ch.copy(i).invert(),al.copy(t.ray).applyMatrix4(ch);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,d=n.attributes.position;if(c!==null){const p=Math.max(0,o.start),m=Math.min(c.count,o.start+o.count);for(let h=p,g=m;h<g;h++){const y=c.getX(h);Ps.fromBufferAttribute(d,y),hh(Ps,y,l,i,t,e,this)}}else{const p=Math.max(0,o.start),m=Math.min(d.count,o.start+o.count);for(let h=p,g=m;h<g;h++)Ps.fromBufferAttribute(d,h),hh(Ps,h,l,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function hh(r,t,e,n,i,s,o){const a=al.distanceSqToPoint(r);if(a<e){const l=new W;al.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,object:o})}}class My extends fe{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:re,this.magFilter=s!==void 0?s:re,this.generateMipmaps=!1;const u=this;function d(){u.needsUpdate=!0,t.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class wy extends fe{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=ue,this.minFilter=ue,this.generateMipmaps=!1,this.needsUpdate=!0}}class xo extends fe{constructor(t,e,n,i,s,o,a,l,c,u,d,p){super(null,o,a,l,c,u,i,s,d,p),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class Ey extends xo{constructor(t,e,n,i,s,o){super(t,e,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Te}}class Ty extends xo{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Cn),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class Ay extends fe{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class rn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],p=n[i+1]-u,m=(o-u)/p;return(i+m)/(s-1)}getTangent(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new wt:new W);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new W,i=[],s=[],o=[],a=new W,l=new zt;for(let m=0;m<=t;m++){const h=m/t;i[m]=this.getTangentAt(h,new W)}s[0]=new W,o[0]=new W;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),d<=c&&(c=d,n.set(0,1,0)),p<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let m=1;m<=t;m++){if(s[m]=s[m-1].clone(),o[m]=o[m-1].clone(),a.crossVectors(i[m-1],i[m]),a.length()>Number.EPSILON){a.normalize();const h=Math.acos(le(i[m-1].dot(i[m]),-1,1));s[m].applyMatrix4(l.makeRotationAxis(a,h))}o[m].crossVectors(i[m],s[m])}if(e===!0){let m=Math.acos(le(s[0].dot(s[t]),-1,1));m/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(m=-m);for(let h=1;h<=t;h++)s[h].applyMatrix4(l.makeRotationAxis(i[h],m*h)),o[h].crossVectors(i[h],s[h])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class bo extends rn{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new wt,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),d=Math.sin(this.aRotation),p=l-this.aX,m=c-this.aY;l=p*u-m*d+this.aX,c=p*d+m*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class gf extends bo{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function zl(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,d){let p=(o-s)/c-(a-s)/(c+u)+(a-o)/u,m=(a-o)/u-(l-o)/(u+d)+(l-a)/d;p*=u,m*=u,i(o,a,p,m)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const Us=new W,da=new zl,pa=new zl,ma=new zl;class _f extends rn{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new W){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(Us.subVectors(i[0],i[1]).add(i[0]),c=Us);const d=i[a%s],p=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Us.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Us),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let h=Math.pow(c.distanceToSquared(d),m),g=Math.pow(d.distanceToSquared(p),m),y=Math.pow(p.distanceToSquared(u),m);g<1e-4&&(g=1),h<1e-4&&(h=g),y<1e-4&&(y=g),da.initNonuniformCatmullRom(c.x,d.x,p.x,u.x,h,g,y),pa.initNonuniformCatmullRom(c.y,d.y,p.y,u.y,h,g,y),ma.initNonuniformCatmullRom(c.z,d.z,p.z,u.z,h,g,y)}else this.curveType==="catmullrom"&&(da.initCatmullRom(c.x,d.x,p.x,u.x,this.tension),pa.initCatmullRom(c.y,d.y,p.y,u.y,this.tension),ma.initCatmullRom(c.z,d.z,p.z,u.z,this.tension));return n.set(da.calc(l),pa.calc(l),ma.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new W().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function uh(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function Ry(r,t){const e=1-r;return e*e*t}function Iy(r,t){return 2*(1-r)*r*t}function Cy(r,t){return r*r*t}function wr(r,t,e,n){return Ry(r,t)+Iy(r,e)+Cy(r,n)}function Ly(r,t){const e=1-r;return e*e*e*t}function Py(r,t){const e=1-r;return 3*e*e*r*t}function Uy(r,t){return 3*(1-r)*r*r*t}function Ny(r,t){return r*r*r*t}function Er(r,t,e,n,i){return Ly(r,t)+Py(r,e)+Uy(r,n)+Ny(r,i)}class kl extends rn{constructor(t=new wt,e=new wt,n=new wt,i=new wt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new wt){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Er(t,i.x,s.x,o.x,a.x),Er(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class yf extends rn{constructor(t=new W,e=new W,n=new W,i=new W){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new W){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Er(t,i.x,s.x,o.x,a.x),Er(t,i.y,s.y,o.y,a.y),Er(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class So extends rn{constructor(t=new wt,e=new wt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new wt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new wt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class vf extends rn{constructor(t=new W,e=new W){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new W){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new W){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Gl extends rn{constructor(t=new wt,e=new wt,n=new wt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new wt){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(wr(t,i.x,s.x,o.x),wr(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Hl extends rn{constructor(t=new W,e=new W,n=new W){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new W){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(wr(t,i.x,s.x,o.x),wr(t,i.y,s.y,o.y),wr(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vl extends rn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new wt){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],d=i[o>i.length-3?i.length-1:o+2];return n.set(uh(a,l.x,c.x,u.x,d.x),uh(a,l.y,c.y,u.y,d.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new wt().fromArray(i))}return this}}var Wl=Object.freeze({__proto__:null,ArcCurve:gf,CatmullRomCurve3:_f,CubicBezierCurve:kl,CubicBezierCurve3:yf,EllipseCurve:bo,LineCurve:So,LineCurve3:vf,QuadraticBezierCurve:Gl,QuadraticBezierCurve3:Hl,SplineCurve:Vl});class xf extends rn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new So(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Wl[i.type]().fromJSON(i))}return this}}class Fr extends xf{constructor(t){super(),this.type="Path",this.currentPoint=new wt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new So(this.currentPoint.clone(),new wt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new Gl(this.currentPoint.clone(),new wt(t,e),new wt(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new kl(this.currentPoint.clone(),new wt(t,e),new wt(n,i),new wt(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Vl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const c=new bo(t,e,n,i,s,o,a,l);if(this.curves.length>0){const d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Jr extends Yt{constructor(t=[new wt(0,-.5),new wt(.5,0),new wt(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=le(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/e,d=new W,p=new wt,m=new W,h=new W,g=new W;let y=0,_=0;for(let M=0;M<=t.length-1;M++)switch(M){case 0:y=t[M+1].x-t[M].x,_=t[M+1].y-t[M].y,m.x=_*1,m.y=-y,m.z=_*0,g.copy(m),m.normalize(),l.push(m.x,m.y,m.z);break;case t.length-1:l.push(g.x,g.y,g.z);break;default:y=t[M+1].x-t[M].x,_=t[M+1].y-t[M].y,m.x=_*1,m.y=-y,m.z=_*0,h.copy(m),m.x+=g.x,m.y+=g.y,m.z+=g.z,m.normalize(),l.push(m.x,m.y,m.z),g.copy(h)}for(let M=0;M<=e;M++){const v=n+M*u*i,x=Math.sin(v),w=Math.cos(v);for(let b=0;b<=t.length-1;b++){d.x=t[b].x*x,d.y=t[b].y,d.z=t[b].x*w,o.push(d.x,d.y,d.z),p.x=M/e,p.y=b/(t.length-1),a.push(p.x,p.y);const E=l[3*b+0]*x,L=l[3*b+1],T=l[3*b+0]*w;c.push(E,L,T)}}for(let M=0;M<e;M++)for(let v=0;v<t.length-1;v++){const x=v+M*t.length,w=x,b=x+t.length,E=x+t.length+1,L=x+1;s.push(w,b,L),s.push(E,L,b)}this.setIndex(s),this.setAttribute("position",new Nt(o,3)),this.setAttribute("uv",new Nt(a,2)),this.setAttribute("normal",new Nt(c,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Jr(t.points,t.segments,t.phiStart,t.phiLength)}}class Mo extends Jr{constructor(t=1,e=1,n=4,i=8){const s=new Fr;s.absarc(0,-e/2,t,Math.PI*1.5,0),s.absarc(0,e/2,t,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:n,radialSegments:i}}static fromJSON(t){return new Mo(t.radius,t.length,t.capSegments,t.radialSegments)}}class wo extends Yt{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],o=[],a=[],l=[],c=new W,u=new wt;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let d=0,p=3;d<=e;d++,p+=3){const m=n+d/e*i;c.x=t*Math.cos(m),c.y=t*Math.sin(m),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[p]/t+1)/2,u.y=(o[p+1]/t+1)/2,l.push(u.x,u.y)}for(let d=1;d<=e;d++)s.push(d,d+1,0);this.setIndex(s),this.setAttribute("position",new Nt(o,3)),this.setAttribute("normal",new Nt(a,3)),this.setAttribute("uv",new Nt(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wo(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class sr extends Yt{constructor(t=1,e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],d=[],p=[],m=[];let h=0;const g=[],y=n/2;let _=0;M(),o===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new Nt(d,3)),this.setAttribute("normal",new Nt(p,3)),this.setAttribute("uv",new Nt(m,2));function M(){const x=new W,w=new W;let b=0;const E=(e-t)/n;for(let L=0;L<=s;L++){const T=[],P=L/s,G=P*(e-t)+t;for(let X=0;X<=i;X++){const $=X/i,O=$*l+a,B=Math.sin(O),C=Math.cos(O);w.x=G*B,w.y=-P*n+y,w.z=G*C,d.push(w.x,w.y,w.z),x.set(B,E,C).normalize(),p.push(x.x,x.y,x.z),m.push($,1-P),T.push(h++)}g.push(T)}for(let L=0;L<i;L++)for(let T=0;T<s;T++){const P=g[T][L],G=g[T+1][L],X=g[T+1][L+1],$=g[T][L+1];u.push(P,G,$),u.push(G,X,$),b+=6}c.addGroup(_,b,0),_+=b}function v(x){const w=h,b=new wt,E=new W;let L=0;const T=x===!0?t:e,P=x===!0?1:-1;for(let X=1;X<=i;X++)d.push(0,y*P,0),p.push(0,P,0),m.push(.5,.5),h++;const G=h;for(let X=0;X<=i;X++){const O=X/i*l+a,B=Math.cos(O),C=Math.sin(O);E.x=T*C,E.y=y*P,E.z=T*B,d.push(E.x,E.y,E.z),p.push(0,P,0),b.x=B*.5+.5,b.y=C*.5*P+.5,m.push(b.x,b.y),h++}for(let X=0;X<i;X++){const $=w+X,O=G+X;x===!0?u.push(O,O+1,$):u.push(O+1,O,$),L+=3}c.addGroup(_,L,x===!0?1:2),_+=L}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new sr(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Eo extends sr{constructor(t=1,e=1,n=32,i=1,s=!1,o=0,a=Math.PI*2){super(0,t,e,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Eo(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class jn extends Yt{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],o=[];a(i),c(n),u(),this.setAttribute("position",new Nt(s,3)),this.setAttribute("normal",new Nt(s.slice(),3)),this.setAttribute("uv",new Nt(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(M){const v=new W,x=new W,w=new W;for(let b=0;b<e.length;b+=3)m(e[b+0],v),m(e[b+1],x),m(e[b+2],w),l(v,x,w,M)}function l(M,v,x,w){const b=w+1,E=[];for(let L=0;L<=b;L++){E[L]=[];const T=M.clone().lerp(x,L/b),P=v.clone().lerp(x,L/b),G=b-L;for(let X=0;X<=G;X++)X===0&&L===b?E[L][X]=T:E[L][X]=T.clone().lerp(P,X/G)}for(let L=0;L<b;L++)for(let T=0;T<2*(b-L)-1;T++){const P=Math.floor(T/2);T%2===0?(p(E[L][P+1]),p(E[L+1][P]),p(E[L][P])):(p(E[L][P+1]),p(E[L+1][P+1]),p(E[L+1][P]))}}function c(M){const v=new W;for(let x=0;x<s.length;x+=3)v.x=s[x+0],v.y=s[x+1],v.z=s[x+2],v.normalize().multiplyScalar(M),s[x+0]=v.x,s[x+1]=v.y,s[x+2]=v.z}function u(){const M=new W;for(let v=0;v<s.length;v+=3){M.x=s[v+0],M.y=s[v+1],M.z=s[v+2];const x=y(M)/2/Math.PI+.5,w=_(M)/Math.PI+.5;o.push(x,1-w)}h(),d()}function d(){for(let M=0;M<o.length;M+=6){const v=o[M+0],x=o[M+2],w=o[M+4],b=Math.max(v,x,w),E=Math.min(v,x,w);b>.9&&E<.1&&(v<.2&&(o[M+0]+=1),x<.2&&(o[M+2]+=1),w<.2&&(o[M+4]+=1))}}function p(M){s.push(M.x,M.y,M.z)}function m(M,v){const x=M*3;v.x=t[x+0],v.y=t[x+1],v.z=t[x+2]}function h(){const M=new W,v=new W,x=new W,w=new W,b=new wt,E=new wt,L=new wt;for(let T=0,P=0;T<s.length;T+=9,P+=6){M.set(s[T+0],s[T+1],s[T+2]),v.set(s[T+3],s[T+4],s[T+5]),x.set(s[T+6],s[T+7],s[T+8]),b.set(o[P+0],o[P+1]),E.set(o[P+2],o[P+3]),L.set(o[P+4],o[P+5]),w.copy(M).add(v).add(x).divideScalar(3);const G=y(w);g(b,P+0,M,G),g(E,P+2,v,G),g(L,P+4,x,G)}}function g(M,v,x,w){w<0&&M.x===1&&(o[v]=M.x-1),x.x===0&&x.z===0&&(o[v]=w/2/Math.PI+.5)}function y(M){return Math.atan2(M.z,-M.x)}function _(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new jn(t.vertices,t.indices,t.radius,t.details)}}class To extends jn{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new To(t.radius,t.detail)}}const Ns=new W,Ds=new W,ga=new W,Os=new Oe;class bf extends Yt{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),s=Math.cos(_i*e),o=t.getIndex(),a=t.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],d=new Array(3),p={},m=[];for(let h=0;h<l;h+=3){o?(c[0]=o.getX(h),c[1]=o.getX(h+1),c[2]=o.getX(h+2)):(c[0]=h,c[1]=h+1,c[2]=h+2);const{a:g,b:y,c:_}=Os;if(g.fromBufferAttribute(a,c[0]),y.fromBufferAttribute(a,c[1]),_.fromBufferAttribute(a,c[2]),Os.getNormal(ga),d[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,d[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,d[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let M=0;M<3;M++){const v=(M+1)%3,x=d[M],w=d[v],b=Os[u[M]],E=Os[u[v]],L=`${x}_${w}`,T=`${w}_${x}`;T in p&&p[T]?(ga.dot(p[T].normal)<=s&&(m.push(b.x,b.y,b.z),m.push(E.x,E.y,E.z)),p[T]=null):L in p||(p[L]={index0:c[M],index1:c[v],normal:ga.clone()})}}for(const h in p)if(p[h]){const{index0:g,index1:y}=p[h];Ns.fromBufferAttribute(a,g),Ds.fromBufferAttribute(a,y),m.push(Ns.x,Ns.y,Ns.z),m.push(Ds.x,Ds.y,Ds.z)}this.setAttribute("position",new Nt(m,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class yi extends Fr{constructor(t){super(t),this.uuid=We(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Fr().fromJSON(i))}return this}}const Dy={triangulate:function(r,t,e=2){const n=t&&t.length,i=n?t[0]*e:r.length;let s=Sf(r,0,i,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,d,p,m;if(n&&(s=ky(r,t,s,e)),r.length>80*e){a=c=r[0],l=u=r[1];for(let h=e;h<i;h+=e)d=r[h],p=r[h+1],d<a&&(a=d),p<l&&(l=p),d>c&&(c=d),p>u&&(u=p);m=Math.max(c-a,u-l),m=m!==0?32767/m:0}return Br(s,o,e,a,l,m,0),o}};function Sf(r,t,e,n,i){let s,o;if(i===Jy(r,t,e,n)>0)for(s=t;s<e;s+=n)o=fh(s,r[s],r[s+1],o);else for(s=e-n;s>=t;s-=n)o=fh(s,r[s],r[s+1],o);return o&&Ao(o,o.next)&&(kr(o),o=o.next),o}function bi(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(Ao(e,e.next)||se(e.prev,e,e.next)===0)){if(kr(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Br(r,t,e,n,i,s,o){if(!r)return;!o&&s&&Xy(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?Fy(r,n,i,s):Oy(r)){t.push(l.i/e|0),t.push(r.i/e|0),t.push(c.i/e|0),kr(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=By(bi(r),t,e),Br(r,t,e,n,i,s,2)):o===2&&zy(r,t,e,n,i,s):Br(bi(r),t,e,n,i,s,1);break}}}function Oy(r){const t=r.prev,e=r,n=r.next;if(se(t,e,n)>=0)return!1;const i=t.x,s=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<s?i<o?i:o:s<o?s:o,d=a<l?a<c?a:c:l<c?l:c,p=i>s?i>o?i:o:s>o?s:o,m=a>l?a>c?a:c:l>c?l:c;let h=n.next;for(;h!==t;){if(h.x>=u&&h.x<=p&&h.y>=d&&h.y<=m&&Ji(i,a,s,l,o,c,h.x,h.y)&&se(h.prev,h,h.next)>=0)return!1;h=h.next}return!0}function Fy(r,t,e,n){const i=r.prev,s=r,o=r.next;if(se(i,s,o)>=0)return!1;const a=i.x,l=s.x,c=o.x,u=i.y,d=s.y,p=o.y,m=a<l?a<c?a:c:l<c?l:c,h=u<d?u<p?u:p:d<p?d:p,g=a>l?a>c?a:c:l>c?l:c,y=u>d?u>p?u:p:d>p?d:p,_=ll(m,h,t,e,n),M=ll(g,y,t,e,n);let v=r.prevZ,x=r.nextZ;for(;v&&v.z>=_&&x&&x.z<=M;){if(v.x>=m&&v.x<=g&&v.y>=h&&v.y<=y&&v!==i&&v!==o&&Ji(a,u,l,d,c,p,v.x,v.y)&&se(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=m&&x.x<=g&&x.y>=h&&x.y<=y&&x!==i&&x!==o&&Ji(a,u,l,d,c,p,x.x,x.y)&&se(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=_;){if(v.x>=m&&v.x<=g&&v.y>=h&&v.y<=y&&v!==i&&v!==o&&Ji(a,u,l,d,c,p,v.x,v.y)&&se(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=M;){if(x.x>=m&&x.x<=g&&x.y>=h&&x.y<=y&&x!==i&&x!==o&&Ji(a,u,l,d,c,p,x.x,x.y)&&se(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function By(r,t,e){let n=r;do{const i=n.prev,s=n.next.next;!Ao(i,s)&&Mf(i,n,n.next,s)&&zr(i,s)&&zr(s,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(s.i/e|0),kr(n),kr(n.next),n=r=s),n=n.next}while(n!==r);return bi(n)}function zy(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&jy(o,a)){let l=wf(o,a);o=bi(o,o.next),l=bi(l,l.next),Br(o,t,e,n,i,s,0),Br(l,t,e,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function ky(r,t,e,n){const i=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,c=Sf(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(Yy(c));for(i.sort(Gy),s=0;s<i.length;s++)e=Hy(i[s],e);return e}function Gy(r,t){return r.x-t.x}function Hy(r,t){const e=Vy(r,t);if(!e)return t;const n=wf(e,r);return bi(n,n.next),bi(e,e.next)}function Vy(r,t){let e=t,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const p=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(p<=s&&p>n&&(n=p,i=e.x<e.next.x?e:e.next,p===s))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,d;e=i;do s>=e.x&&e.x>=l&&s!==e.x&&Ji(o<c?s:n,o,l,c,o<c?n:s,o,e.x,e.y)&&(d=Math.abs(o-e.y)/(s-e.x),zr(e,r)&&(d<u||d===u&&(e.x>i.x||e.x===i.x&&Wy(i,e)))&&(i=e,u=d)),e=e.next;while(e!==a);return i}function Wy(r,t){return se(r.prev,r,t.prev)<0&&se(t.next,r,r.next)<0}function Xy(r,t,e,n){let i=r;do i.z===0&&(i.z=ll(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,qy(i)}function qy(r){let t,e,n,i,s,o,a,l,c=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;e=n}s.nextZ=null,c*=2}while(o>1);return r}function ll(r,t,e,n,i){return r=(r-e)*i|0,t=(t-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function Yy(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Ji(r,t,e,n,i,s,o,a){return(i-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(i-o)*(n-a)}function jy(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!$y(r,t)&&(zr(r,t)&&zr(t,r)&&Zy(r,t)&&(se(r.prev,r,t.prev)||se(r,t.prev,t))||Ao(r,t)&&se(r.prev,r,r.next)>0&&se(t.prev,t,t.next)>0)}function se(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Ao(r,t){return r.x===t.x&&r.y===t.y}function Mf(r,t,e,n){const i=Bs(se(r,t,e)),s=Bs(se(r,t,n)),o=Bs(se(e,n,r)),a=Bs(se(e,n,t));return!!(i!==s&&o!==a||i===0&&Fs(r,e,t)||s===0&&Fs(r,n,t)||o===0&&Fs(e,r,n)||a===0&&Fs(e,t,n))}function Fs(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function Bs(r){return r>0?1:r<0?-1:0}function $y(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&Mf(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function zr(r,t){return se(r.prev,r,r.next)<0?se(r,t,r.next)>=0&&se(r,r.prev,t)>=0:se(r,t,r.prev)<0||se(r,r.next,t)<0}function Zy(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function wf(r,t){const e=new cl(r.i,r.x,r.y),n=new cl(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function fh(r,t,e,n){const i=new cl(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function kr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function cl(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Jy(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class un{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return un.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];dh(t),ph(n,t);let o=t.length;e.forEach(dh);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,ph(n,e[l]);const a=Dy.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function dh(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function ph(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class Ro extends Yt{constructor(t=new yi([new wt(.5,.5),new wt(-.5,.5),new wt(-.5,-.5),new wt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new Nt(i,3)),this.setAttribute("uv",new Nt(s,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,d=e.depth!==void 0?e.depth:1;let p=e.bevelEnabled!==void 0?e.bevelEnabled:!0,m=e.bevelThickness!==void 0?e.bevelThickness:.2,h=e.bevelSize!==void 0?e.bevelSize:m-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,y=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,M=e.UVGenerator!==void 0?e.UVGenerator:Ky;let v,x=!1,w,b,E,L;_&&(v=_.getSpacedPoints(u),x=!0,p=!1,w=_.computeFrenetFrames(u,!1),b=new W,E=new W,L=new W),p||(y=0,m=0,h=0,g=0);const T=a.extractPoints(c);let P=T.shape;const G=T.holes;if(!un.isClockWise(P)){P=P.reverse();for(let V=0,_t=G.length;V<_t;V++){const ht=G[V];un.isClockWise(ht)&&(G[V]=ht.reverse())}}const $=un.triangulateShape(P,G),O=P;for(let V=0,_t=G.length;V<_t;V++){const ht=G[V];P=P.concat(ht)}function B(V,_t,ht){return _t||console.error("THREE.ExtrudeGeometry: vec does not exist"),V.clone().addScaledVector(_t,ht)}const C=P.length,Z=$.length;function D(V,_t,ht){let Q,nt,yt;const lt=V.x-_t.x,K=V.y-_t.y,st=ht.x-V.x,mt=ht.y-V.y,Tt=lt*lt+K*K,F=lt*mt-K*st;if(Math.abs(F)>Number.EPSILON){const f=Math.sqrt(Tt),S=Math.sqrt(st*st+mt*mt),A=_t.x-K/f,z=_t.y+lt/f,R=ht.x-mt/S,I=ht.y+st/S,q=((R-A)*mt-(I-z)*st)/(lt*mt-K*st);Q=A+lt*q-V.x,nt=z+K*q-V.y;const j=Q*Q+nt*nt;if(j<=2)return new wt(Q,nt);yt=Math.sqrt(j/2)}else{let f=!1;lt>Number.EPSILON?st>Number.EPSILON&&(f=!0):lt<-Number.EPSILON?st<-Number.EPSILON&&(f=!0):Math.sign(K)===Math.sign(mt)&&(f=!0),f?(Q=-K,nt=lt,yt=Math.sqrt(Tt)):(Q=lt,nt=K,yt=Math.sqrt(Tt/2))}return new wt(Q/yt,nt/yt)}const tt=[];for(let V=0,_t=O.length,ht=_t-1,Q=V+1;V<_t;V++,ht++,Q++)ht===_t&&(ht=0),Q===_t&&(Q=0),tt[V]=D(O[V],O[ht],O[Q]);const rt=[];let U,N=tt.concat();for(let V=0,_t=G.length;V<_t;V++){const ht=G[V];U=[];for(let Q=0,nt=ht.length,yt=nt-1,lt=Q+1;Q<nt;Q++,yt++,lt++)yt===nt&&(yt=0),lt===nt&&(lt=0),U[Q]=D(ht[Q],ht[yt],ht[lt]);rt.push(U),N=N.concat(U)}for(let V=0;V<y;V++){const _t=V/y,ht=m*Math.cos(_t*Math.PI/2),Q=h*Math.sin(_t*Math.PI/2)+g;for(let nt=0,yt=O.length;nt<yt;nt++){const lt=B(O[nt],tt[nt],Q);ct(lt.x,lt.y,-ht)}for(let nt=0,yt=G.length;nt<yt;nt++){const lt=G[nt];U=rt[nt];for(let K=0,st=lt.length;K<st;K++){const mt=B(lt[K],U[K],Q);ct(mt.x,mt.y,-ht)}}}const H=h+g;for(let V=0;V<C;V++){const _t=p?B(P[V],N[V],H):P[V];x?(E.copy(w.normals[0]).multiplyScalar(_t.x),b.copy(w.binormals[0]).multiplyScalar(_t.y),L.copy(v[0]).add(E).add(b),ct(L.x,L.y,L.z)):ct(_t.x,_t.y,0)}for(let V=1;V<=u;V++)for(let _t=0;_t<C;_t++){const ht=p?B(P[_t],N[_t],H):P[_t];x?(E.copy(w.normals[V]).multiplyScalar(ht.x),b.copy(w.binormals[V]).multiplyScalar(ht.y),L.copy(v[V]).add(E).add(b),ct(L.x,L.y,L.z)):ct(ht.x,ht.y,d/u*V)}for(let V=y-1;V>=0;V--){const _t=V/y,ht=m*Math.cos(_t*Math.PI/2),Q=h*Math.sin(_t*Math.PI/2)+g;for(let nt=0,yt=O.length;nt<yt;nt++){const lt=B(O[nt],tt[nt],Q);ct(lt.x,lt.y,d+ht)}for(let nt=0,yt=G.length;nt<yt;nt++){const lt=G[nt];U=rt[nt];for(let K=0,st=lt.length;K<st;K++){const mt=B(lt[K],U[K],Q);x?ct(mt.x,mt.y+v[u-1].y,v[u-1].x+ht):ct(mt.x,mt.y,d+ht)}}}Y(),et();function Y(){const V=i.length/3;if(p){let _t=0,ht=C*_t;for(let Q=0;Q<Z;Q++){const nt=$[Q];ot(nt[2]+ht,nt[1]+ht,nt[0]+ht)}_t=u+y*2,ht=C*_t;for(let Q=0;Q<Z;Q++){const nt=$[Q];ot(nt[0]+ht,nt[1]+ht,nt[2]+ht)}}else{for(let _t=0;_t<Z;_t++){const ht=$[_t];ot(ht[2],ht[1],ht[0])}for(let _t=0;_t<Z;_t++){const ht=$[_t];ot(ht[0]+C*u,ht[1]+C*u,ht[2]+C*u)}}n.addGroup(V,i.length/3-V,0)}function et(){const V=i.length/3;let _t=0;ut(O,_t),_t+=O.length;for(let ht=0,Q=G.length;ht<Q;ht++){const nt=G[ht];ut(nt,_t),_t+=nt.length}n.addGroup(V,i.length/3-V,1)}function ut(V,_t){let ht=V.length;for(;--ht>=0;){const Q=ht;let nt=ht-1;nt<0&&(nt=V.length-1);for(let yt=0,lt=u+y*2;yt<lt;yt++){const K=C*yt,st=C*(yt+1),mt=_t+Q+K,Tt=_t+nt+K,F=_t+nt+st,f=_t+Q+st;dt(mt,Tt,F,f)}}}function ct(V,_t,ht){l.push(V),l.push(_t),l.push(ht)}function ot(V,_t,ht){It(V),It(_t),It(ht);const Q=i.length/3,nt=M.generateTopUV(n,i,Q-3,Q-2,Q-1);Mt(nt[0]),Mt(nt[1]),Mt(nt[2])}function dt(V,_t,ht,Q){It(V),It(_t),It(Q),It(_t),It(ht),It(Q);const nt=i.length/3,yt=M.generateSideWallUV(n,i,nt-6,nt-3,nt-2,nt-1);Mt(yt[0]),Mt(yt[1]),Mt(yt[3]),Mt(yt[1]),Mt(yt[2]),Mt(yt[3])}function It(V){i.push(l[V*3+0]),i.push(l[V*3+1]),i.push(l[V*3+2])}function Mt(V){s.push(V.x),s.push(V.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return Qy(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Wl[i.type]().fromJSON(i)),new Ro(n,t.options)}}const Ky={generateTopUV:function(r,t,e,n,i){const s=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new wt(s,o),new wt(a,l),new wt(c,u)]},generateSideWallUV:function(r,t,e,n,i,s){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],d=t[n*3+2],p=t[i*3],m=t[i*3+1],h=t[i*3+2],g=t[s*3],y=t[s*3+1],_=t[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new wt(o,1-l),new wt(c,1-d),new wt(p,1-h),new wt(g,1-_)]:[new wt(a,1-l),new wt(u,1-d),new wt(m,1-h),new wt(y,1-_)]}};function Qy(r,t,e){if(e.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Io extends jn{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Io(t.radius,t.detail)}}class Kr extends jn{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Kr(t.radius,t.detail)}}class Co extends Yt{constructor(t=.5,e=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let d=t;const p=(e-t)/i,m=new W,h=new wt;for(let g=0;g<=i;g++){for(let y=0;y<=n;y++){const _=s+y/n*o;m.x=d*Math.cos(_),m.y=d*Math.sin(_),l.push(m.x,m.y,m.z),c.push(0,0,1),h.x=(m.x/e+1)/2,h.y=(m.y/e+1)/2,u.push(h.x,h.y)}d+=p}for(let g=0;g<i;g++){const y=g*(n+1);for(let _=0;_<n;_++){const M=_+y,v=M,x=M+n+1,w=M+n+2,b=M+1;a.push(v,x,b),a.push(x,w,b)}}this.setIndex(a),this.setAttribute("position",new Nt(l,3)),this.setAttribute("normal",new Nt(c,3)),this.setAttribute("uv",new Nt(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Co(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Lo extends Yt{constructor(t=new yi([new wt(0,.5),new wt(-.5,-.5),new wt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Nt(i,3)),this.setAttribute("normal",new Nt(s,3)),this.setAttribute("uv",new Nt(o,2));function c(u){const d=i.length/3,p=u.extractPoints(e);let m=p.shape;const h=p.holes;un.isClockWise(m)===!1&&(m=m.reverse());for(let y=0,_=h.length;y<_;y++){const M=h[y];un.isClockWise(M)===!0&&(h[y]=M.reverse())}const g=un.triangulateShape(m,h);for(let y=0,_=h.length;y<_;y++){const M=h[y];m=m.concat(M)}for(let y=0,_=m.length;y<_;y++){const M=m[y];i.push(M.x,M.y,0),s.push(0,0,1),o.push(M.x,M.y)}for(let y=0,_=g.length;y<_;y++){const M=g[y],v=M[0]+d,x=M[1]+d,w=M[2]+d;n.push(v,x,w),l+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return tv(e,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const o=e[t.shapes[i]];n.push(o)}return new Lo(n,t.curveSegments)}}function tv(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,n=r.length;e<n;e++){const i=r[e];t.shapes.push(i.uuid)}else t.shapes.push(r.uuid);return t}class Qr extends Yt{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],d=new W,p=new W,m=[],h=[],g=[],y=[];for(let _=0;_<=n;_++){const M=[],v=_/n;let x=0;_===0&&o===0?x=.5/e:_===n&&l===Math.PI&&(x=-.5/e);for(let w=0;w<=e;w++){const b=w/e;d.x=-t*Math.cos(i+b*s)*Math.sin(o+v*a),d.y=t*Math.cos(o+v*a),d.z=t*Math.sin(i+b*s)*Math.sin(o+v*a),h.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),y.push(b+x,1-v),M.push(c++)}u.push(M)}for(let _=0;_<n;_++)for(let M=0;M<e;M++){const v=u[_][M+1],x=u[_][M],w=u[_+1][M],b=u[_+1][M+1];(_!==0||o>0)&&m.push(v,x,b),(_!==n-1||l<Math.PI)&&m.push(x,w,b)}this.setIndex(m),this.setAttribute("position",new Nt(h,3)),this.setAttribute("normal",new Nt(g,3)),this.setAttribute("uv",new Nt(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Qr(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Po extends jn{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Po(t.radius,t.detail)}}class Uo extends Yt{constructor(t=1,e=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],u=new W,d=new W,p=new W;for(let m=0;m<=n;m++)for(let h=0;h<=i;h++){const g=h/i*s,y=m/n*Math.PI*2;d.x=(t+e*Math.cos(y))*Math.cos(g),d.y=(t+e*Math.cos(y))*Math.sin(g),d.z=e*Math.sin(y),a.push(d.x,d.y,d.z),u.x=t*Math.cos(g),u.y=t*Math.sin(g),p.subVectors(d,u).normalize(),l.push(p.x,p.y,p.z),c.push(h/i),c.push(m/n)}for(let m=1;m<=n;m++)for(let h=1;h<=i;h++){const g=(i+1)*m+h-1,y=(i+1)*(m-1)+h-1,_=(i+1)*(m-1)+h,M=(i+1)*m+h;o.push(g,y,M),o.push(y,_,M)}this.setIndex(o),this.setAttribute("position",new Nt(a,3)),this.setAttribute("normal",new Nt(l,3)),this.setAttribute("uv",new Nt(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Uo(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class No extends Yt{constructor(t=1,e=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],u=[],d=new W,p=new W,m=new W,h=new W,g=new W,y=new W,_=new W;for(let v=0;v<=n;++v){const x=v/n*s*Math.PI*2;M(x,s,o,t,m),M(x+.01,s,o,t,h),y.subVectors(h,m),_.addVectors(h,m),g.crossVectors(y,_),_.crossVectors(g,y),g.normalize(),_.normalize();for(let w=0;w<=i;++w){const b=w/i*Math.PI*2,E=-e*Math.cos(b),L=e*Math.sin(b);d.x=m.x+(E*_.x+L*g.x),d.y=m.y+(E*_.y+L*g.y),d.z=m.z+(E*_.z+L*g.z),l.push(d.x,d.y,d.z),p.subVectors(d,m).normalize(),c.push(p.x,p.y,p.z),u.push(v/n),u.push(w/i)}}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const w=(i+1)*(v-1)+(x-1),b=(i+1)*v+(x-1),E=(i+1)*v+x,L=(i+1)*(v-1)+x;a.push(w,b,L),a.push(b,E,L)}this.setIndex(a),this.setAttribute("position",new Nt(l,3)),this.setAttribute("normal",new Nt(c,3)),this.setAttribute("uv",new Nt(u,2));function M(v,x,w,b,E){const L=Math.cos(v),T=Math.sin(v),P=w/x*v,G=Math.cos(P);E.x=b*(2+G)*.5*L,E.y=b*(2+G)*T*.5,E.z=b*Math.sin(P)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new No(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Do extends Yt{constructor(t=new Hl(new W(-1,-1,0),new W(-1,1,0),new W(1,1,0)),e=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s};const o=t.computeFrenetFrames(e,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new W,l=new W,c=new wt;let u=new W;const d=[],p=[],m=[],h=[];g(),this.setIndex(h),this.setAttribute("position",new Nt(d,3)),this.setAttribute("normal",new Nt(p,3)),this.setAttribute("uv",new Nt(m,2));function g(){for(let v=0;v<e;v++)y(v);y(s===!1?e:0),M(),_()}function y(v){u=t.getPointAt(v/e,u);const x=o.normals[v],w=o.binormals[v];for(let b=0;b<=i;b++){const E=b/i*Math.PI*2,L=Math.sin(E),T=-Math.cos(E);l.x=T*x.x+L*w.x,l.y=T*x.y+L*w.y,l.z=T*x.z+L*w.z,l.normalize(),p.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,d.push(a.x,a.y,a.z)}}function _(){for(let v=1;v<=e;v++)for(let x=1;x<=i;x++){const w=(i+1)*(v-1)+(x-1),b=(i+1)*v+(x-1),E=(i+1)*v+x,L=(i+1)*(v-1)+x;h.push(w,b,L),h.push(b,E,L)}}function M(){for(let v=0;v<=e;v++)for(let x=0;x<=i;x++)c.x=v/e,c.y=x/i,m.push(c.x,c.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Do(new Wl[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Ef extends Yt{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new W,s=new W;if(t.index!==null){const o=t.attributes.position,a=t.index;let l=t.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const d=l[c],p=d.start,m=d.count;for(let h=p,g=p+m;h<g;h+=3)for(let y=0;y<3;y++){const _=a.getX(h+y),M=a.getX(h+(y+1)%3);i.fromBufferAttribute(o,_),s.fromBufferAttribute(o,M),mh(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}}else{const o=t.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,d=3*a+(c+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,d),mh(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new Nt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function mh(r,t,e){const n=`${r.x},${r.y},${r.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${r.x},${r.y},${r.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var gh=Object.freeze({__proto__:null,BoxGeometry:Yn,CapsuleGeometry:Mo,CircleGeometry:wo,ConeGeometry:Eo,CylinderGeometry:sr,DodecahedronGeometry:To,EdgesGeometry:bf,ExtrudeGeometry:Ro,IcosahedronGeometry:Io,LatheGeometry:Jr,OctahedronGeometry:Kr,PlaneGeometry:Zr,PolyhedronGeometry:jn,RingGeometry:Co,ShapeGeometry:Lo,SphereGeometry:Qr,TetrahedronGeometry:Po,TorusGeometry:Uo,TorusKnotGeometry:No,TubeGeometry:Do,WireframeGeometry:Ef});class Tf extends Re{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Pt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Af extends en{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Xl extends Re{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Pt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Rf extends Xl{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new wt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return le(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Pt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Pt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Pt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class If extends Re{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Pt(16777215),this.specular=new Pt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Cf extends Re{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Pt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Lf extends Re{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Pf extends Re{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Pt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Uf extends Re{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Pt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xn,this.normalScale=new wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Nf extends Ue{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function je(r,t,e){return ql(r)?new r.constructor(r.subarray(t,e!==void 0?e:r.length)):r.slice(t,e)}function mi(r,t,e){return!r||!e&&r.constructor===t?r:typeof t.BYTES_PER_ELEMENT=="number"?new t(r):Array.prototype.slice.call(r)}function ql(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Df(r){function t(i,s){return r[i]-r[s]}const e=r.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function hl(r,t,e){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=e[s]*t;for(let l=0;l!==t;++l)i[o++]=r[a+l]}return i}function Yl(r,t,e,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(t.push(s.time),e.push.apply(e,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(t.push(s.time),o.toArray(e,e.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(t.push(s.time),e.push(o)),s=r[i++];while(s!==void 0)}function ev(r,t,e,n,i=30){const s=r.clone();s.name=t;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),d=[],p=[];for(let m=0;m<c.times.length;++m){const h=c.times[m]*i;if(!(h<e||h>=n)){d.push(c.times[m]);for(let g=0;g<u;++g)p.push(c.values[m*u+g])}}d.length!==0&&(c.times=mi(d,c.times.constructor),c.values=mi(p,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function nv(r,t=0,e=r,n=30){n<=0&&(n=30);const i=e.tracks.length,s=t/n;for(let o=0;o<i;++o){const a=e.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(_){return _.name===a.name&&_.ValueTypeName===l});if(c===void 0)continue;let u=0;const d=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=d/3);let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);const h=a.times.length-1;let g;if(s<=a.times[0]){const _=u,M=d-u;g=je(a.values,_,M)}else if(s>=a.times[h]){const _=h*d+u,M=_+d-u;g=je(a.values,_,M)}else{const _=a.createInterpolant(),M=u,v=d-u;_.evaluate(s),g=je(_.resultBuffer,M,v)}l==="quaternion"&&new Se().fromArray(g).normalize().conjugate().toArray(g);const y=c.times.length;for(let _=0;_<y;++_){const M=_*m+p;if(l==="quaternion")Se.multiplyQuaternionsFlat(c.values,M,g,0,c.values,M);else{const v=m-p*2;for(let x=0;x<v;++x)c.values[M+x]-=g[x]}}}return r.blendMode=El,r}const iv={arraySlice:je,convertArray:mi,isTypedArray:ql,getKeyframeOrder:Df,sortedArray:hl,flattenJSON:Yl,subclip:ev,makeClipAdditive:nv};class ts{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let a=n+2;;){if(i===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=e[++n],t<i)break e}o=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=e[--n-1],t>=s)break e}o=n,n=0;break n}break t}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(i=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let o=0;o!==i;++o)e[o]=n[s+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Of extends ts{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:fi,endingEnd:fi}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,o=t+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case di:s=t,a=2*e-n;break;case Pr:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case di:o=t,l=2*n-e;break;case Pr:o=1,l=n+i[1]-i[0];break;default:o=t-1,l=e}const c=(n-e)*.5,u=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=this._offsetPrev,d=this._offsetNext,p=this._weightPrev,m=this._weightNext,h=(n-e)/(i-e),g=h*h,y=g*h,_=-p*y+2*p*g-p*h,M=(1+p)*y+(-1.5-2*p)*g+(-.5+p)*h+1,v=(-1-m)*y+(1.5+m)*g+.5*h,x=m*y-m*g;for(let w=0;w!==a;++w)s[w]=_*o[u+w]+M*o[c+w]+v*o[l+w]+x*o[d+w];return s}}class jl extends ts{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=(n-e)/(i-e),d=1-u;for(let p=0;p!==a;++p)s[p]=o[c+p]*d+o[l+p]*u;return s}}class Ff extends ts{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class sn{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=mi(e,this.TimeBufferType),this.values=mi(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:mi(t.times,Array),values:mi(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Ff(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new jl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Of(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Cr:e=this.InterpolantFactoryMethodDiscrete;break;case Lr:e=this.InterpolantFactoryMethodLinear;break;case Ks:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Cr;case this.InterpolantFactoryMethodLinear:return Lr;case this.InterpolantFactoryMethodSmooth:return Ks}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<t;)++s;for(;o!==-1&&n[o]>e;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=je(n,s,o),this.values=je(this.values,s*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(i!==void 0&&ql(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=je(this.times),e=je(this.values),n=this.getValueSize(),i=this.getInterpolation()===Ks,s=t.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=t[a],u=t[a+1];if(c!==u&&(a!==1||c!==t[0]))if(i)l=!0;else{const d=a*n,p=d-n,m=d+n;for(let h=0;h!==n;++h){const g=e[d+h];if(g!==e[p+h]||g!==e[m+h]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const d=a*n,p=o*n;for(let m=0;m!==n;++m)e[p+m]=e[d+m]}++o}}if(s>0){t[o]=t[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=je(t,0,o),this.values=je(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=je(this.times,0),e=je(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}sn.prototype.TimeBufferType=Float32Array;sn.prototype.ValueBufferType=Float32Array;sn.prototype.DefaultInterpolation=Lr;class wi extends sn{}wi.prototype.ValueTypeName="bool";wi.prototype.ValueBufferType=Array;wi.prototype.DefaultInterpolation=Cr;wi.prototype.InterpolantFactoryMethodLinear=void 0;wi.prototype.InterpolantFactoryMethodSmooth=void 0;class $l extends sn{}$l.prototype.ValueTypeName="color";class Gr extends sn{}Gr.prototype.ValueTypeName="number";class Bf extends ts{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(i-e);let c=t*a;for(let u=c+a;c!==u;c+=4)Se.slerpFlat(s,0,o,c-a,o,c,l);return s}}class or extends sn{InterpolantFactoryMethodLinear(t){return new Bf(this.times,this.values,this.getValueSize(),t)}}or.prototype.ValueTypeName="quaternion";or.prototype.DefaultInterpolation=Lr;or.prototype.InterpolantFactoryMethodSmooth=void 0;class Ei extends sn{}Ei.prototype.ValueTypeName="string";Ei.prototype.ValueBufferType=Array;Ei.prototype.DefaultInterpolation=Cr;Ei.prototype.InterpolantFactoryMethodLinear=void 0;Ei.prototype.InterpolantFactoryMethodSmooth=void 0;class Hr extends sn{}Hr.prototype.ValueTypeName="vector";class Vr{constructor(t,e=-1,n,i=lo){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=We(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(sv(n[o]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,o=n.length;s!==o;++s)e.push(sn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=Df(l);l=hl(l,1,u),c=hl(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Gr(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],u=c.name.match(s);if(u&&u.length>1){const d=u[1];let p=i[d];p||(i[d]=p=[]),p.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(d,p,m,h,g){if(m.length!==0){const y=[],_=[];Yl(m,y,_,h),y.length!==0&&g.push(new d(p,y,_))}},i=[],s=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let d=0;d<c.length;d++){const p=c[d].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const m={};let h;for(h=0;h<p.length;h++)if(p[h].morphTargets)for(let g=0;g<p[h].morphTargets.length;g++)m[p[h].morphTargets[g]]=-1;for(const g in m){const y=[],_=[];for(let M=0;M!==p[h].morphTargets.length;++M){const v=p[h];y.push(v.time),_.push(v.morphTarget===g?1:0)}i.push(new Gr(".morphTargetInfluence["+g+"]",y,_))}l=m.length*o}else{const m=".bones["+e[d].name+"]";n(Hr,m+".position",p,"pos",i),n(or,m+".quaternion",p,"rot",i),n(Hr,m+".scale",p,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function rv(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Gr;case"vector":case"vector2":case"vector3":case"vector4":return Hr;case"color":return $l;case"quaternion":return or;case"bool":case"boolean":return wi;case"string":return Ei}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function sv(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=rv(r.type);if(r.times===void 0){const e=[],n=[];Yl(r.keys,e,n,"value"),r.times=e,r.values=n}return t.parse!==void 0?t.parse(r):new t(r.name,r.times,r.values,r.interpolation)}const Si={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Zl{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,d){return c.push(u,d),this},this.removeHandler=function(u){const d=c.indexOf(u);return d!==-1&&c.splice(d,2),this},this.getHandler=function(u){for(let d=0,p=c.length;d<p;d+=2){const m=c[d],h=c[d+1];if(m.global&&(m.lastIndex=0),m.test(u))return h}return null}}}const zf=new Zl;class ze{constructor(t){this.manager=t!==void 0?t:zf,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ze.DEFAULT_MATERIAL_NAME="__DEFAULT";const Sn={};class ov extends Error{constructor(t,e){super(t),this.response=e}}class Ln extends ze{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Si.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(Sn[t]!==void 0){Sn[t].push({onLoad:e,onProgress:n,onError:i});return}Sn[t]=[],Sn[t].push({onLoad:e,onProgress:n,onError:i});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Sn[t],d=c.body.getReader(),p=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),m=p?parseInt(p):0,h=m!==0;let g=0;const y=new ReadableStream({start(_){M();function M(){d.read().then(({done:v,value:x})=>{if(v)_.close();else{g+=x.byteLength;const w=new ProgressEvent("progress",{lengthComputable:h,loaded:g,total:m});for(let b=0,E=u.length;b<E;b++){const L=u[b];L.onProgress&&L.onProgress(w)}_.enqueue(x),M()}})}}});return new Response(y)}else throw new ov(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const d=/charset="?([^;"\s]*)"?/i.exec(a),p=d&&d[1]?d[1].toLowerCase():void 0,m=new TextDecoder(p);return c.arrayBuffer().then(h=>m.decode(h))}}}).then(c=>{Si.add(t,c);const u=Sn[t];delete Sn[t];for(let d=0,p=u.length;d<p;d++){const m=u[d];m.onLoad&&m.onLoad(c)}}).catch(c=>{const u=Sn[t];if(u===void 0)throw this.manager.itemError(t),c;delete Sn[t];for(let d=0,p=u.length;d<p;d++){const m=u[d];m.onError&&m.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class av extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Ln(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Vr.parse(t[n]);e.push(i)}return e}}class lv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=[],a=new xo,l=new Ln(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(d){l.load(t[d],function(p){const m=s.parse(p,!0);o[d]={width:m.width,height:m.height,format:m.format,mipmaps:m.mipmaps},c+=1,c===6&&(m.mipmapCount===1&&(a.minFilter=re),a.image=o,a.format=m.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let d=0,p=t.length;d<p;++d)u(d);else l.load(t,function(d){const p=s.parse(d,!0);if(p.isCubemap){const m=p.mipmaps.length/p.mipmapCount;for(let h=0;h<m;h++){o[h]={mipmaps:[]};for(let g=0;g<p.mipmapCount;g++)o[h].mipmaps.push(p.mipmaps[h*p.mipmapCount+g]),o[h].format=p.format,o[h].width=p.width,o[h].height=p.height}a.image=o}else a.image.width=p.width,a.image.height=p.height,a.mipmaps=p.mipmaps;p.mipmapCount===1&&(a.minFilter=re),a.format=p.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}}class Wr extends ze{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=Si.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a=Dr("img");function l(){u(),Si.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(d){u(),i&&i(d),s.manager.itemError(t),s.manager.itemEnd(t)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class cv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=new $r;s.colorSpace=ne;const o=new Wr(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(t[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let c=0;c<t.length;++c)l(c);return s}}class hv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Qi,a=new Ln(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(l){let c;try{c=s.parse(l)}catch(u){if(i!==void 0)i(u);else{console.error(u);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Te,o.wrapT=c.wrapT!==void 0?c.wrapT:Te,o.magFilter=c.magFilter!==void 0?c.magFilter:re,o.minFilter=c.minFilter!==void 0?c.minFilter:re,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0?o.colorSpace=c.colorSpace:c.encoding!==void 0&&(o.encoding=c.encoding),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Hn),c.mipmapCount===1&&(o.minFilter=re),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,e&&e(o,c)},n,i),o}}class uv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=new fe,o=new Wr(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}}class $n extends Jt{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Pt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}class kf extends $n{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Jt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Pt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const _a=new zt,_h=new W,yh=new W;class Jl{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new wt(512,512),this.map=null,this.mapPass=null,this.matrix=new zt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fo,this._frameExtents=new wt(1,1),this._viewportCount=1,this._viewports=[new Qt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;_h.setFromMatrixPosition(t.matrixWorld),e.position.copy(_h),yh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(yh),e.updateMatrixWorld(),_a.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_a),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(_a)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class fv extends Jl{constructor(){super(new xe(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=tr*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(n!==e.fov||i!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Gf extends $n{constructor(t,e,n=0,i=Math.PI/3,s=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Jt.DEFAULT_UP),this.updateMatrix(),this.target=new Jt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new fv}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const vh=new zt,yr=new W,ya=new W;class dv extends Jl{constructor(){super(new xe(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new wt(4,2),this._viewportCount=6,this._viewports=[new Qt(2,1,1,1),new Qt(0,1,1,1),new Qt(3,1,1,1),new Qt(1,1,1,1),new Qt(3,0,1,1),new Qt(1,0,1,1)],this._cubeDirections=[new W(1,0,0),new W(-1,0,0),new W(0,0,1),new W(0,0,-1),new W(0,1,0),new W(0,-1,0)],this._cubeUps=[new W(0,1,0),new W(0,1,0),new W(0,1,0),new W(0,1,0),new W(0,0,1),new W(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),yr.setFromMatrixPosition(t.matrixWorld),n.position.copy(yr),ya.copy(n.position),ya.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(ya),n.updateMatrixWorld(),i.makeTranslation(-yr.x,-yr.y,-yr.z),vh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vh)}}class Hf extends $n{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new dv}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class pv extends Jl{constructor(){super(new po(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Vf extends $n{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Jt.DEFAULT_UP),this.updateMatrix(),this.target=new Jt,this.shadow=new pv}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Wf extends $n{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Xf extends $n{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class qf{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new W)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],1.092548*(n*i)),e.addScaledVector(o[5],1.092548*(i*s)),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],1.092548*(n*s)),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*i),e.addScaledVector(o[2],2*.511664*s),e.addScaledVector(o[3],2*.511664*n),e.addScaledVector(o[4],2*.429043*n*i),e.addScaledVector(o[5],2*.429043*i*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],2*.429043*n*s),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}class Oo extends $n{constructor(t=new qf,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Fo extends ze{constructor(t){super(t),this.textures={}}load(t,e,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}const i=Fo.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Pt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const s in t.uniforms){const o=t.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Pt().setHex(o.value);break;case"v2":i.uniforms[s].value=new wt().fromArray(o.value);break;case"v3":i.uniforms[s].value=new W().fromArray(o.value);break;case"v4":i.uniforms[s].value=new Qt().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Xt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new zt().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let s=t.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new wt().fromArray(s)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new wt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){const e={ShadowMaterial:Tf,SpriteMaterial:Ol,RawShaderMaterial:Af,ShaderMaterial:en,PointsMaterial:Bl,MeshPhysicalMaterial:Rf,MeshStandardMaterial:Xl,MeshPhongMaterial:If,MeshToonMaterial:Cf,MeshNormalMaterial:Lf,MeshLambertMaterial:Pf,MeshDepthMaterial:Pl,MeshDistanceMaterial:Ul,MeshBasicMaterial:qn,MeshMatcapMaterial:Uf,LineDashedMaterial:Nf,LineBasicMaterial:Ue,Material:Re};return new e[t]}}class ul{static decodeText(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Yf extends Yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class jf extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(m,h){if(e[h]!==void 0)return e[h];const y=m.interleavedBuffers[h],_=s(m,y.buffer),M=ji(y.type,_),v=new yo(M,y.stride);return v.uuid=y.uuid,e[h]=v,v}function s(m,h){if(n[h]!==void 0)return n[h];const y=m.arrayBuffers[h],_=new Uint32Array(y).buffer;return n[h]=_,_}const o=t.isInstancedBufferGeometry?new Yf:new Yt,a=t.data.index;if(a!==void 0){const m=ji(a.type,a.array);o.setIndex(new te(m,1))}const l=t.data.attributes;for(const m in l){const h=l[m];let g;if(h.isInterleavedBufferAttribute){const y=i(t.data,h.data);g=new xi(y,h.itemSize,h.offset,h.normalized)}else{const y=ji(h.type,h.array),_=h.isInstancedBufferAttribute?nr:te;g=new _(y,h.itemSize,h.normalized)}h.name!==void 0&&(g.name=h.name),h.usage!==void 0&&g.setUsage(h.usage),h.updateRange!==void 0&&(g.updateRange.offset=h.updateRange.offset,g.updateRange.count=h.updateRange.count),o.setAttribute(m,g)}const c=t.data.morphAttributes;if(c)for(const m in c){const h=c[m],g=[];for(let y=0,_=h.length;y<_;y++){const M=h[y];let v;if(M.isInterleavedBufferAttribute){const x=i(t.data,M.data);v=new xi(x,M.itemSize,M.offset,M.normalized)}else{const x=ji(M.type,M.array);v=new te(x,M.itemSize,M.normalized)}M.name!==void 0&&(v.name=M.name),g.push(v)}o.morphAttributes[m]=g}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=t.data.groups||t.data.drawcalls||t.data.offsets;if(d!==void 0)for(let m=0,h=d.length;m!==h;++m){const g=d[m];o.addGroup(g.start,g.count,g.materialIndex)}const p=t.data.boundingSphere;if(p!==void 0){const m=new W;p.center!==void 0&&m.fromArray(p.center),o.boundingSphere=new nn(m,p.radius)}return t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}}class mv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=this.path===""?ul.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const a=new Ln(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(l){let c=null;try{c=JSON.parse(l)}catch(d){i!==void 0&&i(d),console.error("THREE:ObjectLoader: Can't parse "+t+".",d.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}s.parse(c,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?ul.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const s=new Ln(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(t,e),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(a)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,i),o=this.parseImages(t.images,function(){e!==void 0&&e(c)}),a=this.parseTextures(t.textures,o),l=this.parseMaterials(t.materials,a),c=this.parseObject(t.object,s,l,a,n),u=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,u),e!==void 0){let d=!1;for(const p in o)if(o[p].data instanceof HTMLImageElement){d=!0;break}d===!1&&e(c)}return c}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),s=await this.parseImagesAsync(t.images),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,i,a,o,e),c=this.parseSkeletons(t.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const s=new yi().fromJSON(t[n]);e[s.uuid]=s}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=new vo().fromJSON(t[s],i);n[a.uuid]=a}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new jf;for(let s=0,o=t.length;s<o;s++){let a;const l=t[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in gh?a=gh[l.type].fromJSON(l,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const s=new Fo;s.setTextures(e);for(let o=0,a=t.length;o<a;o++){const l=t[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],s=Vr.parse(i);e[s.uuid]=s}return e}parseImages(t,e){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:ji(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){const l=new Zl(e);s=new Wr(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=t.length;c<u;c++){const d=t[c],p=d.url;if(Array.isArray(p)){const m=[];for(let h=0,g=p.length;h<g;h++){const y=p[h],_=a(y);_!==null&&(_ instanceof HTMLImageElement?m.push(_):m.push(new Qi(_.data,_.width,_.height)))}i[d.uuid]=new pi(m)}else{const m=a(d.url);i[d.uuid]=new pi(m)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:e.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:ji(o.type,o.data),width:o.width,height:o.height}:null}if(t!==void 0&&t.length>0){i=new Wr(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=t.length;o<a;o++){const l=t[o],c=l.url;if(Array.isArray(c)){const u=[];for(let d=0,p=c.length;d<p;d++){const m=c[d],h=await s(m);h!==null&&(h instanceof HTMLImageElement?u.push(h):u.push(new Qi(h.data,h.width,h.height)))}n[l.uuid]=new pi(u)}else{const u=await s(l.url);n[l.uuid]=new pi(u)}}}return n}parseTextures(t,e){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=t[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=e[a.image],c=l.data;let u;Array.isArray(c)?(u=new $r,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new Qi:u=new fe,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,gv)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],xh),u.wrapT=n(a.wrap[1],xh)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,bh)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,bh)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(t,e,n,i,s){let o;function a(p){return e[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),e[p]}function l(p){if(p!==void 0){if(Array.isArray(p)){const m=[];for(let h=0,g=p.length;h<g;h++){const y=p[h];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),m.push(n[y])}return m}return n[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),n[p]}}function c(p){return i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",p),i[p]}let u,d;switch(t.type){case"Scene":o=new Dl,t.background!==void 0&&(Number.isInteger(t.background)?o.background=new Pt(t.background):o.background=c(t.background)),t.environment!==void 0&&(o.environment=c(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?o.fog=new _o(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(o.fog=new go(t.fog.color,t.fog.density))),t.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(o.backgroundIntensity=t.backgroundIntensity);break;case"PerspectiveCamera":o=new xe(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(o.focus=t.focus),t.zoom!==void 0&&(o.zoom=t.zoom),t.filmGauge!==void 0&&(o.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(o.filmOffset=t.filmOffset),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"OrthographicCamera":o=new po(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(o.zoom=t.zoom),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"AmbientLight":o=new Wf(t.color,t.intensity);break;case"DirectionalLight":o=new Vf(t.color,t.intensity);break;case"PointLight":o=new Hf(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":o=new Xf(t.color,t.intensity,t.width,t.height);break;case"SpotLight":o=new Gf(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":o=new kf(t.color,t.groundColor,t.intensity);break;case"LightProbe":o=new Oo().fromJSON(t);break;case"SkinnedMesh":u=a(t.geometry),d=l(t.material),o=new ff(u,d),t.bindMode!==void 0&&(o.bindMode=t.bindMode),t.bindMatrix!==void 0&&o.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(o.skeleton=t.skeleton);break;case"Mesh":u=a(t.geometry),d=l(t.material),o=new be(u,d);break;case"InstancedMesh":u=a(t.geometry),d=l(t.material);const p=t.count,m=t.instanceMatrix,h=t.instanceColor;o=new df(u,d,p),o.instanceMatrix=new nr(new Float32Array(m.array),16),h!==void 0&&(o.instanceColor=new nr(new Float32Array(h.array),h.itemSize));break;case"LOD":o=new uf;break;case"Line":o=new Wn(a(t.geometry),l(t.material));break;case"LineLoop":o=new pf(a(t.geometry),l(t.material));break;case"LineSegments":o=new pn(a(t.geometry),l(t.material));break;case"PointCloud":case"Points":o=new mf(a(t.geometry),l(t.material));break;case"Sprite":o=new hf(l(t.material));break;case"Group":o=new Zi;break;case"Bone":o=new Fl;break;default:o=new Jt}if(o.uuid=t.uuid,t.name!==void 0&&(o.name=t.name),t.matrix!==void 0?(o.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=t.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(t.position!==void 0&&o.position.fromArray(t.position),t.rotation!==void 0&&o.rotation.fromArray(t.rotation),t.quaternion!==void 0&&o.quaternion.fromArray(t.quaternion),t.scale!==void 0&&o.scale.fromArray(t.scale)),t.up!==void 0&&o.up.fromArray(t.up),t.castShadow!==void 0&&(o.castShadow=t.castShadow),t.receiveShadow!==void 0&&(o.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(o.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(o.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(o.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(o.visible=t.visible),t.frustumCulled!==void 0&&(o.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(o.renderOrder=t.renderOrder),t.userData!==void 0&&(o.userData=t.userData),t.layers!==void 0&&(o.layers.mask=t.layers),t.children!==void 0){const p=t.children;for(let m=0;m<p.length;m++)o.add(this.parseObject(p[m],e,n,i,s))}if(t.animations!==void 0){const p=t.animations;for(let m=0;m<p.length;m++){const h=p[m];o.animations.push(s[h])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(o.autoUpdate=t.autoUpdate);const p=t.levels;for(let m=0;m<p.length;m++){const h=p[m],g=o.getObjectByProperty("uuid",h.object);g!==void 0&&o.addLevel(g,h.distance,h.hysteresis)}}return o}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const gv={UVMapping:oo,CubeReflectionMapping:Cn,CubeRefractionMapping:Gn,EquirectangularReflectionMapping:Tr,EquirectangularRefractionMapping:Ar,CubeUVReflectionMapping:ir},xh={RepeatWrapping:Rr,ClampToEdgeWrapping:Te,MirroredRepeatWrapping:Ir},bh={NearestFilter:ue,NearestMipmapNearestFilter:no,NearestMipmapLinearFilter:br,LinearFilter:re,LinearMipmapNearestFilter:_l,LinearMipmapLinearFilter:Hn};class _v extends ze{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=Si.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Si.add(t,l),e&&e(l),s.manager.itemEnd(t)}).catch(function(l){i&&i(l),s.manager.itemError(t),s.manager.itemEnd(t)}),s.manager.itemStart(t)}}let zs;class Kl{static getContext(){return zs===void 0&&(zs=new(window.AudioContext||window.webkitAudioContext)),zs}static setContext(t){zs=t}}class yv extends ze{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Ln(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(l){try{const c=l.slice(0);Kl.getContext().decodeAudioData(c,function(d){e(d)},a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),s.manager.itemError(t)}}}class vv extends Oo{constructor(t,e,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Pt().set(t),s=new Pt().set(e),o=new W(i.r,i.g,i.b),a=new W(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}class xv extends Oo{constructor(t,e=1){super(void 0,e),this.isAmbientLightProbe=!0;const n=new Pt().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const Sh=new zt,Mh=new zt,ni=new zt;class bv{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xe,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xe,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ni.copy(t.projectionMatrix);const i=e.eyeSep/2,s=i*e.near/e.focus,o=e.near*Math.tan(_i*e.fov*.5)/e.zoom;let a,l;Mh.elements[12]=-i,Sh.elements[12]=i,a=-o*e.aspect+s,l=o*e.aspect+s,ni.elements[0]=2*e.near/(l-a),ni.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(ni),a=-o*e.aspect-s,l=o*e.aspect-s,ni.elements[0]=2*e.near/(l-a),ni.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(ni)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Mh),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Sh)}}class $f{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=wh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=wh();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function wh(){return(typeof performance>"u"?Date:performance).now()}const ii=new W,Eh=new Se,Sv=new W,ri=new W;class Mv extends Jt{constructor(){super(),this.type="AudioListener",this.context=Kl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new $f}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ii,Eh,Sv),ri.set(0,0,-1).applyQuaternion(Eh),e.positionX){const i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ii.x,i),e.positionY.linearRampToValueAtTime(ii.y,i),e.positionZ.linearRampToValueAtTime(ii.z,i),e.forwardX.linearRampToValueAtTime(ri.x,i),e.forwardY.linearRampToValueAtTime(ri.y,i),e.forwardZ.linearRampToValueAtTime(ri.z,i),e.upX.linearRampToValueAtTime(n.x,i),e.upY.linearRampToValueAtTime(n.y,i),e.upZ.linearRampToValueAtTime(n.z,i)}else e.setPosition(ii.x,ii.y,ii.z),e.setOrientation(ri.x,ri.y,ri.z,n.x,n.y,n.z)}}class Zf extends Jt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const si=new W,Th=new Se,wv=new W,oi=new W;class Ev extends Zf{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(si,Th,wv),oi.set(0,0,1).applyQuaternion(Th);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(si.x,n),e.positionY.linearRampToValueAtTime(si.y,n),e.positionZ.linearRampToValueAtTime(si.z,n),e.orientationX.linearRampToValueAtTime(oi.x,n),e.orientationY.linearRampToValueAtTime(oi.y,n),e.orientationZ.linearRampToValueAtTime(oi.z,n)}else e.setPosition(si.x,si.y,si.z),e.setOrientation(oi.x,oi.y,oi.z)}}class Tv{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Jf{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,s,o;switch(e){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=e}else{o+=e;const a=e/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=e*this._origIndex;this._mixBufferRegion(n,i,l,1-s,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let s=n,o=i;s!==o;++s)e[s]=e[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)t[e+o]=t[n+o]}_slerp(t,e,n,i){Se.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const o=this._workIndex*s;Se.multiplyQuaternionsFlat(t,o,t,e,t,n),Se.slerpFlat(t,e,t,e,t,o,i)}_lerp(t,e,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=e+a;t[l]=t[l]*o+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let o=0;o!==s;++o){const a=e+o;t[a]=t[a]+t[n+o]*i}}}const Ql="\\[\\]\\.:\\/",Av=new RegExp("["+Ql+"]","g"),tc="[^"+Ql+"]",Rv="[^"+Ql.replace("\\.","")+"]",Iv=/((?:WC+[\/:])*)/.source.replace("WC",tc),Cv=/(WCOD+)?/.source.replace("WCOD",Rv),Lv=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",tc),Pv=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",tc),Uv=new RegExp("^"+Iv+Cv+Lv+Pv+"$"),Nv=["material","materials","bones","map"];class Dv{constructor(t,e,n){const i=n||Zt.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Zt{constructor(t,e,n){this.path=e,this.parsedPath=n||Zt.parseTrackName(e),this.node=Zt.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Zt.Composite(t,e,n):new Zt(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Av,"")}static parseTrackName(t){const e=Uv.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);Nv.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=Zt.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let u=0;u<t.length;u++)if(t[u].name===c){c=u;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[i];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Zt.Composite=Dv;Zt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Zt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Zt.prototype.GetterByBindingType=[Zt.prototype._getValue_direct,Zt.prototype._getValue_array,Zt.prototype._getValue_arrayElement,Zt.prototype._getValue_toArray];Zt.prototype.SetterByBindingTypeAndVersioning=[[Zt.prototype._setValue_direct,Zt.prototype._setValue_direct_setNeedsUpdate,Zt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Zt.prototype._setValue_array,Zt.prototype._setValue_array_setNeedsUpdate,Zt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Zt.prototype._setValue_arrayElement,Zt.prototype._setValue_arrayElement_setNeedsUpdate,Zt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Zt.prototype._setValue_fromArray,Zt.prototype._setValue_fromArray_setNeedsUpdate,Zt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Ov{constructor(){this.isAnimationObjectGroup=!0,this.uuid=We(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=t.length,c=this.nCachedObjects_;for(let u=0,d=arguments.length;u!==d;++u){const p=arguments[u],m=p.uuid;let h=e[m];if(h===void 0){h=l++,e[m]=h,t.push(p);for(let g=0,y=o;g!==y;++g)s[g].push(new Zt(p,n[g],i[g]))}else if(h<c){a=t[h];const g=--c,y=t[g];e[y.uuid]=h,t[h]=y,e[m]=g,t[g]=p;for(let _=0,M=o;_!==M;++_){const v=s[_],x=v[g];let w=v[h];v[h]=x,w===void 0&&(w=new Zt(p,n[_],i[_])),v[g]=w}}else t[h]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=e[c];if(u!==void 0&&u>=s){const d=s++,p=t[d];e[p.uuid]=u,t[u]=p,e[c]=d,t[d]=l;for(let m=0,h=i;m!==h;++m){const g=n[m],y=g[d],_=g[u];g[u]=y,g[d]=_}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=t.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,d=e[u];if(d!==void 0)if(delete e[u],d<s){const p=--s,m=t[p],h=--o,g=t[h];e[m.uuid]=d,t[d]=m,e[g.uuid]=p,t[p]=g,t.pop();for(let y=0,_=i;y!==_;++y){const M=n[y],v=M[p],x=M[h];M[d]=v,M[p]=x,M.pop()}}else{const p=--o,m=t[p];p>0&&(e[m.uuid]=d),t[d]=m,t.pop();for(let h=0,g=i;h!==g;++h){const y=n[h];y[d]=y[p],y.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,d=new Array(c);i=s.length,n[t]=i,o.push(t),a.push(e),s.push(d);for(let p=u,m=l.length;p!==m;++p){const h=l[p];d[p]=new Zt(h,t,e)}return d}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=t[a];e[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class Kf{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,o=s.length,a=new Array(o),l={endingStart:fi,endingEnd:fi};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Iu,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const i=this._clip.duration,s=t._clip.duration,o=s/i,a=i/s;t.warp(1,o,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*n;l<0||n===0?e=0:(this._startTime=null,e=n*l)}e*=this._updateTimeScale(t);const o=this._updateTime(e),a=this._updateWeight(t);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case El:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case lo:default:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const o=n===Cu;if(t===0)return s===-1?i:o&&(s&1)===1?e-i:i;if(n===Ru){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=e||i<0){const a=Math.floor(i/e);i-=e*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=di,i.endingEnd=di):(t?i.endingStart=this.zeroSlopeAtStart?di:fi:i.endingStart=Pr,e?i.endingEnd=this.zeroSlopeAtEnd?di:fi:i.endingEnd=Pr)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=e,a[1]=s+t,l[1]=n,this}}const Fv=new Float32Array(1);class Bv extends fn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,o=t._propertyBindings,a=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let d=0;d!==s;++d){const p=i[d],m=p.name;let h=u[m];if(h!==void 0)++h.referenceCount,o[d]=h;else{if(h=o[d],h!==void 0){h._cacheIndex===null&&(++h.referenceCount,this._addInactiveBinding(h,l,m));continue}const g=e&&e._propertyBindings[d].binding.parsedPath;h=new Jf(Zt.create(n,m,g),p.ValueTypeName,p.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,l,m),o[d]=h}a[d].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,s=this._actionsByClip[i];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let o=s[e];if(o===void 0)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=o;else{const a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=t._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),t._byClipCacheIndex=null;const d=a.actionByRoot,p=(t._localRoot||this._root).uuid;delete d[p],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[e];o===void 0&&(o={},i[e]=o),o[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new jl(new Float32Array(2),new Float32Array(2),1,Fv),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let o=typeof t=="string"?Vr.findByName(i,t):t;const a=o!==null?o.uuid:t,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=lo),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===n)return d;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new Kf(this,o,e,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(t,e){const n=e||this._root,i=n.uuid,s=typeof t=="string"?Vr.findByName(n,t):t,o=s?s.uuid:t,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,d=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,d._cacheIndex=u,e[u]=d,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[e];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class ec{constructor(t){this.value=t}clone(){return new ec(this.value.clone===void 0?this.value:this.value.clone())}}let zv=0;class kv extends fn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:zv++}),this.name="",this.usage=Ur,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++)this.uniforms.push(e[n].clone());return this}clone(){return new this.constructor().copy(this)}}class Gv extends yo{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class Hv{constructor(t,e,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}class Vv{constructor(t,e,n=0,i=1/0){this.ray=new Mi(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new ho,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return fl(t,this,n,e),n.sort(Ah),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)fl(t[i],this,n,e);return n.sort(Ah),n}}function Ah(r,t){return r.distance-t.distance}function fl(r,t,e,n){if(r.layers.test(t.layers)&&r.raycast(t,e),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)fl(i[s],t,e,!0)}}class dl{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(le(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Wv{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}const Rh=new wt;class Xv{constructor(t=new wt(1/0,1/0),e=new wt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Rh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Rh).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ih=new W,ks=new W;class qv{constructor(t=new W,e=new W){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Ih.subVectors(t,this.start),ks.subVectors(this.end,this.start);const n=ks.dot(ks);let s=ks.dot(Ih)/n;return e&&(s=le(s,0,1)),s}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Ch=new W;class Yv extends Jt{constructor(t,e){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Yt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Nt(i,3));const s=new Ue({fog:!1,toneMapped:!1});this.cone=new pn(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Ch.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ch),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const On=new W,Gs=new zt,va=new zt;class jv extends pn{constructor(t){const e=Qf(t),n=new Yt,i=[],s=[],o=new Pt(0,0,1),a=new Pt(0,1,0);for(let c=0;c<e.length;c++){const u=e[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Nt(i,3)),n.setAttribute("color",new Nt(s,3));const l=new Ue({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");va.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<e.length;s++){const a=e[s];a.parent&&a.parent.isBone&&(Gs.multiplyMatrices(va,a.matrixWorld),On.setFromMatrixPosition(Gs),i.setXYZ(o,On.x,On.y,On.z),Gs.multiplyMatrices(va,a.parent.matrixWorld),On.setFromMatrixPosition(Gs),i.setXYZ(o+1,On.x,On.y,On.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Qf(r){const t=[];r.isBone===!0&&t.push(r);for(let e=0;e<r.children.length;e++)t.push.apply(t,Qf(r.children[e]));return t}class $v extends be{constructor(t,e,n){const i=new Qr(e,4,2),s=new qn({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Zv=new W,Lh=new Pt,Ph=new Pt;class Jv extends Jt{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Kr(e);i.rotateY(Math.PI*.5),this.material=new qn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new te(o,3)),this.add(new be(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Lh.copy(this.light.color),Ph.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const s=n<i/2?Lh:Ph;e.setXYZ(n,s.r,s.g,s.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(Zv.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Kv extends pn{constructor(t=10,e=10,n=4473924,i=8947848){n=new Pt(n),i=new Pt(i);const s=e/2,o=t/e,a=t/2,l=[],c=[];for(let p=0,m=0,h=-a;p<=e;p++,h+=o){l.push(-a,0,h,a,0,h),l.push(h,0,-a,h,0,a);const g=p===s?n:i;g.toArray(c,m),m+=3,g.toArray(c,m),m+=3,g.toArray(c,m),m+=3,g.toArray(c,m),m+=3}const u=new Yt;u.setAttribute("position",new Nt(l,3)),u.setAttribute("color",new Nt(c,3));const d=new Ue({vertexColors:!0,toneMapped:!1});super(u,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Qv extends pn{constructor(t=10,e=16,n=8,i=64,s=4473924,o=8947848){s=new Pt(s),o=new Pt(o);const a=[],l=[];if(e>1)for(let d=0;d<e;d++){const p=d/e*(Math.PI*2),m=Math.sin(p)*t,h=Math.cos(p)*t;a.push(0,0,0),a.push(m,0,h);const g=d&1?s:o;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let d=0;d<n;d++){const p=d&1?s:o,m=t-t/n*d;for(let h=0;h<i;h++){let g=h/i*(Math.PI*2),y=Math.sin(g)*m,_=Math.cos(g)*m;a.push(y,0,_),l.push(p.r,p.g,p.b),g=(h+1)/i*(Math.PI*2),y=Math.sin(g)*m,_=Math.cos(g)*m,a.push(y,0,_),l.push(p.r,p.g,p.b)}}const c=new Yt;c.setAttribute("position",new Nt(a,3)),c.setAttribute("color",new Nt(l,3));const u=new Ue({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Uh=new W,Hs=new W,Nh=new W;class tx extends Jt{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new Yt;i.setAttribute("position",new Nt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Ue({fog:!1,toneMapped:!1});this.lightPlane=new Wn(i,s),this.add(this.lightPlane),i=new Yt,i.setAttribute("position",new Nt([0,0,0,0,0,1],3)),this.targetLine=new Wn(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Uh.setFromMatrixPosition(this.light.matrixWorld),Hs.setFromMatrixPosition(this.light.target.matrixWorld),Nh.subVectors(Hs,Uh),this.lightPlane.lookAt(Hs),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Hs),this.targetLine.scale.z=Nh.length()}}const Vs=new W,ae=new uo;class ex extends pn{constructor(t){const e=new Yt,n=new Ue({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(h,g){l(h),l(g)}function l(h){i.push(0,0,0),s.push(0,0,0),o[h]===void 0&&(o[h]=[]),o[h].push(i.length/3-1)}e.setAttribute("position",new Nt(i,3)),e.setAttribute("color",new Nt(s,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Pt(16755200),u=new Pt(16711680),d=new Pt(43775),p=new Pt(16777215),m=new Pt(3355443);this.setColors(c,u,d,p,m)}setColors(t,e,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,t.r,t.g,t.b),a.setXYZ(1,t.r,t.g,t.b),a.setXYZ(2,t.r,t.g,t.b),a.setXYZ(3,t.r,t.g,t.b),a.setXYZ(4,t.r,t.g,t.b),a.setXYZ(5,t.r,t.g,t.b),a.setXYZ(6,t.r,t.g,t.b),a.setXYZ(7,t.r,t.g,t.b),a.setXYZ(8,t.r,t.g,t.b),a.setXYZ(9,t.r,t.g,t.b),a.setXYZ(10,t.r,t.g,t.b),a.setXYZ(11,t.r,t.g,t.b),a.setXYZ(12,t.r,t.g,t.b),a.setXYZ(13,t.r,t.g,t.b),a.setXYZ(14,t.r,t.g,t.b),a.setXYZ(15,t.r,t.g,t.b),a.setXYZ(16,t.r,t.g,t.b),a.setXYZ(17,t.r,t.g,t.b),a.setXYZ(18,t.r,t.g,t.b),a.setXYZ(19,t.r,t.g,t.b),a.setXYZ(20,t.r,t.g,t.b),a.setXYZ(21,t.r,t.g,t.b),a.setXYZ(22,t.r,t.g,t.b),a.setXYZ(23,t.r,t.g,t.b),a.setXYZ(24,e.r,e.g,e.b),a.setXYZ(25,e.r,e.g,e.b),a.setXYZ(26,e.r,e.g,e.b),a.setXYZ(27,e.r,e.g,e.b),a.setXYZ(28,e.r,e.g,e.b),a.setXYZ(29,e.r,e.g,e.b),a.setXYZ(30,e.r,e.g,e.b),a.setXYZ(31,e.r,e.g,e.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;ae.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),he("c",e,t,ae,0,0,-1),he("t",e,t,ae,0,0,1),he("n1",e,t,ae,-n,-i,-1),he("n2",e,t,ae,n,-i,-1),he("n3",e,t,ae,-n,i,-1),he("n4",e,t,ae,n,i,-1),he("f1",e,t,ae,-n,-i,1),he("f2",e,t,ae,n,-i,1),he("f3",e,t,ae,-n,i,1),he("f4",e,t,ae,n,i,1),he("u1",e,t,ae,n*.7,i*1.1,-1),he("u2",e,t,ae,-n*.7,i*1.1,-1),he("u3",e,t,ae,0,i*2,-1),he("cf1",e,t,ae,-n,0,1),he("cf2",e,t,ae,n,0,1),he("cf3",e,t,ae,0,-i,1),he("cf4",e,t,ae,0,i,1),he("cn1",e,t,ae,-n,0,-1),he("cn2",e,t,ae,n,0,-1),he("cn3",e,t,ae,0,-i,-1),he("cn4",e,t,ae,0,i,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function he(r,t,e,n,i,s,o){Vs.set(i,s,o).unproject(n);const a=t[r];if(a!==void 0){const l=e.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],Vs.x,Vs.y,Vs.z)}}const Ws=new dn;class nx extends pn{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Yt;s.setIndex(new te(n,1)),s.setAttribute("position",new te(i,3)),super(s,new Ue({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(t!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ws.setFromObject(this.object),Ws.isEmpty())return;const e=Ws.min,n=Ws.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=e.x,s[4]=n.y,s[5]=n.z,s[6]=e.x,s[7]=e.y,s[8]=n.z,s[9]=n.x,s[10]=e.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=e.z,s[15]=e.x,s[16]=n.y,s[17]=e.z,s[18]=e.x,s[19]=e.y,s[20]=e.z,s[21]=n.x,s[22]=e.y,s[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ix extends pn{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Yt;s.setIndex(new te(n,1)),s.setAttribute("position",new Nt(i,3)),super(s,new Ue({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class rx extends Wn{constructor(t,e=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Yt;o.setAttribute("position",new Nt(s,3)),o.computeBoundingSphere(),super(o,new Ue({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Yt;l.setAttribute("position",new Nt(a,3)),l.computeBoundingSphere(),this.add(new be(l,new qn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Dh=new W;let Xs,xa;class sx extends Jt{constructor(t=new W(0,0,1),e=new W(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Xs===void 0&&(Xs=new Yt,Xs.setAttribute("position",new Nt([0,0,0,0,1,0],3)),xa=new sr(0,.5,1,5,1),xa.translate(0,-.5,0)),this.position.copy(e),this.line=new Wn(Xs,new Ue({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new be(xa,new qn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Dh.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Dh,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class ox extends pn{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Yt;i.setAttribute("position",new Nt(e,3)),i.setAttribute("color",new Nt(n,3));const s=new Ue({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(t,e,n){const i=new Pt,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ax{constructor(){this.type="ShapePath",this.color=new Pt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Fr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const M=[];for(let v=0,x=_.length;v<x;v++){const w=_[v],b=new yi;b.curves=w.curves,M.push(b)}return M}function n(_,M){const v=M.length;let x=!1;for(let w=v-1,b=0;b<v;w=b++){let E=M[w],L=M[b],T=L.x-E.x,P=L.y-E.y;if(Math.abs(P)>Number.EPSILON){if(P<0&&(E=M[b],T=-T,L=M[w],P=-P),_.y<E.y||_.y>L.y)continue;if(_.y===E.y){if(_.x===E.x)return!0}else{const G=P*(_.x-E.x)-T*(_.y-E.y);if(G===0)return!0;if(G<0)continue;x=!x}}else{if(_.y!==E.y)continue;if(L.x<=_.x&&_.x<=E.x||E.x<=_.x&&_.x<=L.x)return!0}}return x}const i=un.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new yi,l.curves=a.curves,c.push(l),c;let u=!i(s[0].getPoints());u=t?!u:u;const d=[],p=[];let m=[],h=0,g;p[h]=void 0,m[h]=[];for(let _=0,M=s.length;_<M;_++)a=s[_],g=a.getPoints(),o=i(g),o=t?!o:o,o?(!u&&p[h]&&h++,p[h]={s:new yi,p:g},p[h].s.curves=a.curves,u&&h++,m[h]=[]):m[h].push({h:a,p:g[0]});if(!p[0])return e(s);if(p.length>1){let _=!1,M=0;for(let v=0,x=p.length;v<x;v++)d[v]=[];for(let v=0,x=p.length;v<x;v++){const w=m[v];for(let b=0;b<w.length;b++){const E=w[b];let L=!0;for(let T=0;T<p.length;T++)n(E.p,p[T].p)&&(v!==T&&M++,L?(L=!1,d[T].push(E)):_=!0);L&&d[v].push(E)}}M>0&&_===!1&&(m=d)}let y;for(let _=0,M=p.length;_<M;_++){l=p[_].s,c.push(l),y=m[_];for(let v=0,x=y.length;v<x;v++)l.holes.push(y[v].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:so}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=so);const lx=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:yu,AddEquation:hi,AddOperation:pu,AdditiveAnimationBlendMode:El,AdditiveBlending:Aa,AlphaFormat:Su,AlwaysCompare:Hu,AlwaysDepth:au,AlwaysStencilFunc:Nu,AmbientLight:Wf,AmbientLightProbe:xv,AnimationAction:Kf,AnimationClip:Vr,AnimationLoader:av,AnimationMixer:Bv,AnimationObjectGroup:Ov,AnimationUtils:iv,ArcCurve:gf,ArrayCamera:of,ArrowHelper:sx,Audio:Zf,AudioAnalyser:Tv,AudioContext:Kl,AudioListener:Mv,AudioLoader:yv,AxesHelper:ox,BackSide:Ae,BasicDepthPacking:Lu,BasicShadowMap:yd,Bone:Fl,BooleanKeyframeTrack:wi,Box2:Xv,Box3:dn,Box3Helper:ix,BoxGeometry:Yn,BoxHelper:nx,BufferAttribute:te,BufferGeometry:Yt,BufferGeometryLoader:jf,ByteType:xu,Cache:Si,Camera:uo,CameraHelper:ex,CanvasTexture:Ay,CapsuleGeometry:Mo,CatmullRomCurve3:_f,CineonToneMapping:_u,CircleGeometry:wo,ClampToEdgeWrapping:Te,Clock:$f,Color:Pt,ColorKeyframeTrack:$l,ColorManagement:Ye,CompressedArrayTexture:Ey,CompressedCubeTexture:Ty,CompressedTexture:xo,CompressedTextureLoader:lv,ConeGeometry:Eo,CubeCamera:Ju,CubeReflectionMapping:Cn,CubeRefractionMapping:Gn,CubeTexture:$r,CubeTextureLoader:cv,CubeUVReflectionMapping:ir,CubicBezierCurve:kl,CubicBezierCurve3:yf,CubicInterpolant:Of,CullFaceBack:Ta,CullFaceFront:qh,CullFaceFrontBack:_d,CullFaceNone:Xh,Curve:rn,CurvePath:xf,CustomBlending:jh,CustomToneMapping:vu,CylinderGeometry:sr,Cylindrical:Wv,Data3DTexture:Or,DataArrayTexture:co,DataTexture:Qi,DataTextureLoader:hv,DataUtils:Pp,DecrementStencilOp:Ld,DecrementWrapStencilOp:Ud,DefaultLoadingManager:zf,DepthFormat:Bn,DepthStencilFormat:vi,DepthTexture:af,DirectionalLight:Vf,DirectionalLightHelper:tx,DiscreteInterpolant:Ff,DisplayP3ColorSpace:Yr,DodecahedronGeometry:To,DoubleSide:ln,DstAlphaFactor:eu,DstColorFactor:iu,DynamicCopyUsage:jd,DynamicDrawUsage:Hd,DynamicReadUsage:Xd,EdgesGeometry:bf,EllipseCurve:bo,EqualCompare:Fu,EqualDepth:cu,EqualStencilFunc:Fd,EquirectangularReflectionMapping:Tr,EquirectangularRefractionMapping:Ar,Euler:jr,EventDispatcher:fn,ExtrudeGeometry:Ro,FileLoader:Ln,Float16BufferAttribute:Bp,Float32BufferAttribute:Nt,Float64BufferAttribute:zp,FloatType:cn,Fog:_o,FogExp2:go,FramebufferTexture:wy,FrontSide:In,Frustum:fo,GLBufferAttribute:Hv,GLSL1:Zd,GLSL3:il,GreaterCompare:zu,GreaterDepth:uu,GreaterEqualCompare:Gu,GreaterEqualDepth:hu,GreaterEqualStencilFunc:Gd,GreaterStencilFunc:zd,GridHelper:Kv,Group:Zi,HalfFloatType:Vn,HemisphereLight:kf,HemisphereLightHelper:Jv,HemisphereLightProbe:vv,IcosahedronGeometry:Io,ImageBitmapLoader:_v,ImageLoader:Wr,ImageUtils:Rl,IncrementStencilOp:Cd,IncrementWrapStencilOp:Pd,InstancedBufferAttribute:nr,InstancedBufferGeometry:Yf,InstancedInterleavedBuffer:Gv,InstancedMesh:df,Int16BufferAttribute:Op,Int32BufferAttribute:Fp,Int8BufferAttribute:Up,IntType:yl,InterleavedBuffer:yo,InterleavedBufferAttribute:xi,Interpolant:ts,InterpolateDiscrete:Cr,InterpolateLinear:Lr,InterpolateSmooth:Ks,InvertStencilOp:Nd,KeepStencilOp:Qs,KeyframeTrack:sn,LOD:uf,LatheGeometry:Jr,Layers:ho,LessCompare:Ou,LessDepth:lu,LessEqualCompare:Bu,LessEqualDepth:eo,LessEqualStencilFunc:Bd,LessStencilFunc:Od,Light:$n,LightProbe:Oo,Line:Wn,Line3:qv,LineBasicMaterial:Ue,LineCurve:So,LineCurve3:vf,LineDashedMaterial:Nf,LineLoop:pf,LineSegments:pn,LinearDisplayP3ColorSpace:Ad,LinearEncoding:Tl,LinearFilter:re,LinearInterpolant:jl,LinearMipMapLinearFilter:Md,LinearMipMapNearestFilter:Sd,LinearMipmapLinearFilter:Hn,LinearMipmapNearestFilter:_l,LinearSRGBColorSpace:Qe,LinearToneMapping:mu,Loader:ze,LoaderUtils:ul,LoadingManager:Zl,LoopOnce:Ru,LoopPingPong:Cu,LoopRepeat:Iu,LuminanceAlphaFormat:wu,LuminanceFormat:Mu,MOUSE:ai,Material:Re,MaterialLoader:Fo,MathUtils:Wu,Matrix3:Xt,Matrix4:zt,MaxEquation:La,Mesh:be,MeshBasicMaterial:qn,MeshDepthMaterial:Pl,MeshDistanceMaterial:Ul,MeshLambertMaterial:Pf,MeshMatcapMaterial:Uf,MeshNormalMaterial:Lf,MeshPhongMaterial:If,MeshPhysicalMaterial:Rf,MeshStandardMaterial:Xl,MeshToonMaterial:Cf,MinEquation:Ca,MirroredRepeatWrapping:Ir,MixOperation:du,MultiplyBlending:Ia,MultiplyOperation:qr,NearestFilter:ue,NearestMipMapLinearFilter:bd,NearestMipMapNearestFilter:xd,NearestMipmapLinearFilter:br,NearestMipmapNearestFilter:no,NeverCompare:Du,NeverDepth:ou,NeverStencilFunc:Dd,NoBlending:Tn,NoColorSpace:kn,NoToneMapping:An,NormalAnimationBlendMode:lo,NormalBlending:gi,NotEqualCompare:ku,NotEqualDepth:fu,NotEqualStencilFunc:kd,NumberKeyframeTrack:Gr,Object3D:Jt,ObjectLoader:mv,ObjectSpaceNormalMap:Uu,OctahedronGeometry:Kr,OneFactor:Kh,OneMinusDstAlphaFactor:nu,OneMinusDstColorFactor:ru,OneMinusSrcAlphaFactor:gl,OneMinusSrcColorFactor:tu,OrthographicCamera:po,PCFShadowMap:pl,PCFSoftShadowMap:Yh,PMREMGenerator:sl,Path:Fr,PerspectiveCamera:xe,Plane:Mn,PlaneGeometry:Zr,PlaneHelper:rx,PointLight:Hf,PointLightHelper:$v,Points:mf,PointsMaterial:Bl,PolarGridHelper:Qv,PolyhedronGeometry:jn,PositionalAudio:Ev,PropertyBinding:Zt,PropertyMixer:Jf,QuadraticBezierCurve:Gl,QuadraticBezierCurve3:Hl,Quaternion:Se,QuaternionKeyframeTrack:or,QuaternionLinearInterpolant:Bf,RED_GREEN_RGTC2_Format:el,RED_RGTC1_Format:Au,REVISION:so,RGBADepthPacking:Pu,RGBAFormat:Fe,RGBAIntegerFormat:wl,RGBA_ASTC_10x10_Format:$a,RGBA_ASTC_10x5_Format:qa,RGBA_ASTC_10x6_Format:Ya,RGBA_ASTC_10x8_Format:ja,RGBA_ASTC_12x10_Format:Za,RGBA_ASTC_12x12_Format:Ja,RGBA_ASTC_4x4_Format:Ba,RGBA_ASTC_5x4_Format:za,RGBA_ASTC_5x5_Format:ka,RGBA_ASTC_6x5_Format:Ga,RGBA_ASTC_6x6_Format:Ha,RGBA_ASTC_8x5_Format:Va,RGBA_ASTC_8x6_Format:Wa,RGBA_ASTC_8x8_Format:Xa,RGBA_BPTC_Format:Js,RGBA_ETC2_EAC_Format:Fa,RGBA_PVRTC_2BPPV1_Format:Da,RGBA_PVRTC_4BPPV1_Format:Na,RGBA_S3TC_DXT1_Format:js,RGBA_S3TC_DXT3_Format:$s,RGBA_S3TC_DXT5_Format:Zs,RGB_BPTC_SIGNED_Format:Ka,RGB_BPTC_UNSIGNED_Format:Qa,RGB_ETC1_Format:Tu,RGB_ETC2_Format:Oa,RGB_PVRTC_2BPPV1_Format:Ua,RGB_PVRTC_4BPPV1_Format:Pa,RGB_S3TC_DXT1_Format:Ys,RGFormat:Eu,RGIntegerFormat:Ml,RawShaderMaterial:Af,Ray:Mi,Raycaster:Vv,RectAreaLight:Xf,RedFormat:bl,RedIntegerFormat:Sl,ReinhardToneMapping:gu,RenderTarget:Yu,RepeatWrapping:Rr,ReplaceStencilOp:Id,ReverseSubtractEquation:Zh,RingGeometry:Co,SIGNED_RED_GREEN_RGTC2_Format:nl,SIGNED_RED_RGTC1_Format:tl,SRGBColorSpace:ne,Scene:Dl,ShaderChunk:Ht,ShaderLib:Ke,ShaderMaterial:en,ShadowMaterial:Tf,Shape:yi,ShapeGeometry:Lo,ShapePath:ax,ShapeUtils:un,ShortType:bu,Skeleton:vo,SkeletonHelper:jv,SkinnedMesh:ff,Source:pi,Sphere:nn,SphereGeometry:Qr,Spherical:dl,SphericalHarmonics3:qf,SplineCurve:Vl,SpotLight:Gf,SpotLightHelper:Yv,Sprite:hf,SpriteMaterial:Ol,SrcAlphaFactor:ml,SrcAlphaSaturateFactor:su,SrcColorFactor:Qh,StaticCopyUsage:Yd,StaticDrawUsage:Ur,StaticReadUsage:Wd,StereoCamera:bv,StreamCopyUsage:$d,StreamDrawUsage:Vd,StreamReadUsage:qd,StringKeyframeTrack:Ei,SubtractEquation:$h,SubtractiveBlending:Ra,TOUCH:li,TangentSpaceNormalMap:Xn,TetrahedronGeometry:Po,Texture:fe,TextureLoader:uv,TorusGeometry:Uo,TorusKnotGeometry:No,Triangle:Oe,TriangleFanDrawMode:Td,TriangleStripDrawMode:Ed,TrianglesDrawMode:wd,TubeGeometry:Do,TwoPassDoubleSide:vd,UVMapping:oo,Uint16BufferAttribute:Il,Uint32BufferAttribute:Cl,Uint8BufferAttribute:Np,Uint8ClampedBufferAttribute:Dp,Uniform:ec,UniformsGroup:kv,UniformsLib:Lt,UniformsUtils:Zu,UnsignedByteType:Rn,UnsignedInt248Type:Fn,UnsignedIntType:En,UnsignedShort4444Type:vl,UnsignedShort5551Type:xl,UnsignedShortType:ao,VSMShadowMap:an,Vector2:wt,Vector3:W,Vector4:Qt,VectorKeyframeTrack:Hr,VideoTexture:My,WebGL1Renderer:lf,WebGL3DRenderTarget:xp,WebGLArrayRenderTarget:vp,WebGLCoordinateSystem:hn,WebGLCubeRenderTarget:Ku,WebGLMultipleRenderTargets:bp,WebGLRenderTarget:tn,WebGLRenderer:Nl,WebGLUtils:sf,WebGPUCoordinateSystem:Nr,WireframeGeometry:Ef,WrapAroundEnding:Pr,ZeroCurvatureEnding:fi,ZeroFactor:Jh,ZeroSlopeEnding:di,ZeroStencilOp:Rd,_SRGBAFormat:io,createCanvasElement:qu,sRGBEncoding:zn},Symbol.toStringTag,{value:"Module"})),Oh={type:"change"},ba={type:"start"},Fh={type:"end"},qs=new Mi,Bh=new Mn,cx=Math.cos(70*Wu.DEG2RAD);class Sa extends fn{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new W,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ai.ROTATE,MIDDLE:ai.DOLLY,RIGHT:ai.PAN},this.touches={ONE:li.ROTATE,TWO:li.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(k){k.addEventListener("keydown",f),this._domElementKeyEvents=k},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",f),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Oh),n.update(),s=i.NONE},this.update=function(){const k=new W,at=new Se().setFromUnitVectors(t.up,new W(0,1,0)),St=at.clone().invert(),vt=new W,Rt=new Se,Dt=new W,qt=2*Math.PI;return function(Ct=null){const gt=n.object.position;k.copy(gt).sub(n.target),k.applyQuaternion(at),a.setFromVector3(k),n.autoRotate&&s===i.NONE&&G(T(Ct)),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Et=n.minAzimuthAngle,At=n.maxAzimuthAngle;isFinite(Et)&&isFinite(At)&&(Et<-Math.PI?Et+=qt:Et>Math.PI&&(Et-=qt),At<-Math.PI?At+=qt:At>Math.PI&&(At-=qt),Et<=At?a.theta=Math.max(Et,Math.min(At,a.theta)):a.theta=a.theta>(Et+At)/2?Math.max(Et,a.theta):Math.min(At,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),n.zoomToCursor&&b||n.object.isOrthographicCamera?a.radius=tt(a.radius):a.radius=tt(a.radius*c),k.setFromSpherical(a),k.applyQuaternion(St),gt.copy(n.target).add(k),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0));let Ft=!1;if(n.zoomToCursor&&b){let Kt=null;if(n.object.isPerspectiveCamera){const ee=k.length();Kt=tt(ee*c);const ke=ee-Kt;n.object.position.addScaledVector(x,ke),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const ee=new W(w.x,w.y,0);ee.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),Ft=!0;const ke=new W(w.x,w.y,0);ke.unproject(n.object),n.object.position.sub(ke).add(ee),n.object.updateMatrixWorld(),Kt=k.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Kt!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Kt).add(n.object.position):(qs.origin.copy(n.object.position),qs.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(qs.direction))<cx?t.lookAt(n.target):(Bh.setFromNormalAndCoplanarPoint(n.object.up,n.target),qs.intersectPlane(Bh,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),Ft=!0);return c=1,b=!1,Ft||vt.distanceToSquared(n.object.position)>o||8*(1-Rt.dot(n.object.quaternion))>o||Dt.distanceToSquared(n.target)>0?(n.dispatchEvent(Oh),vt.copy(n.object.position),Rt.copy(n.object.quaternion),Dt.copy(n.target),Ft=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",z),n.domElement.removeEventListener("pointerdown",lt),n.domElement.removeEventListener("pointercancel",st),n.domElement.removeEventListener("wheel",F),n.domElement.removeEventListener("pointermove",K),n.domElement.removeEventListener("pointerup",st),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",f),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,a=new dl,l=new dl;let c=1;const u=new W,d=new wt,p=new wt,m=new wt,h=new wt,g=new wt,y=new wt,_=new wt,M=new wt,v=new wt,x=new W,w=new wt;let b=!1;const E=[],L={};function T(k){return k!==null?2*Math.PI/60*n.autoRotateSpeed*k:2*Math.PI/60/60*n.autoRotateSpeed}function P(){return Math.pow(.95,n.zoomSpeed)}function G(k){l.theta-=k}function X(k){l.phi-=k}const $=function(){const k=new W;return function(St,vt){k.setFromMatrixColumn(vt,0),k.multiplyScalar(-St),u.add(k)}}(),O=function(){const k=new W;return function(St,vt){n.screenSpacePanning===!0?k.setFromMatrixColumn(vt,1):(k.setFromMatrixColumn(vt,0),k.crossVectors(n.object.up,k)),k.multiplyScalar(St),u.add(k)}}(),B=function(){const k=new W;return function(St,vt){const Rt=n.domElement;if(n.object.isPerspectiveCamera){const Dt=n.object.position;k.copy(Dt).sub(n.target);let qt=k.length();qt*=Math.tan(n.object.fov/2*Math.PI/180),$(2*St*qt/Rt.clientHeight,n.object.matrix),O(2*vt*qt/Rt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?($(St*(n.object.right-n.object.left)/n.object.zoom/Rt.clientWidth,n.object.matrix),O(vt*(n.object.top-n.object.bottom)/n.object.zoom/Rt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function C(k){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c/=k:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Z(k){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c*=k:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(k){if(!n.zoomToCursor)return;b=!0;const at=n.domElement.getBoundingClientRect(),St=k.clientX-at.left,vt=k.clientY-at.top,Rt=at.width,Dt=at.height;w.x=St/Rt*2-1,w.y=-(vt/Dt)*2+1,x.set(w.x,w.y,1).unproject(n.object).sub(n.object.position).normalize()}function tt(k){return Math.max(n.minDistance,Math.min(n.maxDistance,k))}function rt(k){d.set(k.clientX,k.clientY)}function U(k){D(k),_.set(k.clientX,k.clientY)}function N(k){h.set(k.clientX,k.clientY)}function H(k){p.set(k.clientX,k.clientY),m.subVectors(p,d).multiplyScalar(n.rotateSpeed);const at=n.domElement;G(2*Math.PI*m.x/at.clientHeight),X(2*Math.PI*m.y/at.clientHeight),d.copy(p),n.update()}function Y(k){M.set(k.clientX,k.clientY),v.subVectors(M,_),v.y>0?C(P()):v.y<0&&Z(P()),_.copy(M),n.update()}function et(k){g.set(k.clientX,k.clientY),y.subVectors(g,h).multiplyScalar(n.panSpeed),B(y.x,y.y),h.copy(g),n.update()}function ut(k){D(k),k.deltaY<0?Z(P()):k.deltaY>0&&C(P()),n.update()}function ct(k){let at=!1;switch(k.code){case n.keys.UP:k.ctrlKey||k.metaKey||k.shiftKey?X(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):B(0,n.keyPanSpeed),at=!0;break;case n.keys.BOTTOM:k.ctrlKey||k.metaKey||k.shiftKey?X(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):B(0,-n.keyPanSpeed),at=!0;break;case n.keys.LEFT:k.ctrlKey||k.metaKey||k.shiftKey?G(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):B(n.keyPanSpeed,0),at=!0;break;case n.keys.RIGHT:k.ctrlKey||k.metaKey||k.shiftKey?G(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):B(-n.keyPanSpeed,0),at=!0;break}at&&(k.preventDefault(),n.update())}function ot(){if(E.length===1)d.set(E[0].pageX,E[0].pageY);else{const k=.5*(E[0].pageX+E[1].pageX),at=.5*(E[0].pageY+E[1].pageY);d.set(k,at)}}function dt(){if(E.length===1)h.set(E[0].pageX,E[0].pageY);else{const k=.5*(E[0].pageX+E[1].pageX),at=.5*(E[0].pageY+E[1].pageY);h.set(k,at)}}function It(){const k=E[0].pageX-E[1].pageX,at=E[0].pageY-E[1].pageY,St=Math.sqrt(k*k+at*at);_.set(0,St)}function Mt(){n.enableZoom&&It(),n.enablePan&&dt()}function V(){n.enableZoom&&It(),n.enableRotate&&ot()}function _t(k){if(E.length==1)p.set(k.pageX,k.pageY);else{const St=j(k),vt=.5*(k.pageX+St.x),Rt=.5*(k.pageY+St.y);p.set(vt,Rt)}m.subVectors(p,d).multiplyScalar(n.rotateSpeed);const at=n.domElement;G(2*Math.PI*m.x/at.clientHeight),X(2*Math.PI*m.y/at.clientHeight),d.copy(p)}function ht(k){if(E.length===1)g.set(k.pageX,k.pageY);else{const at=j(k),St=.5*(k.pageX+at.x),vt=.5*(k.pageY+at.y);g.set(St,vt)}y.subVectors(g,h).multiplyScalar(n.panSpeed),B(y.x,y.y),h.copy(g)}function Q(k){const at=j(k),St=k.pageX-at.x,vt=k.pageY-at.y,Rt=Math.sqrt(St*St+vt*vt);M.set(0,Rt),v.set(0,Math.pow(M.y/_.y,n.zoomSpeed)),C(v.y),_.copy(M)}function nt(k){n.enableZoom&&Q(k),n.enablePan&&ht(k)}function yt(k){n.enableZoom&&Q(k),n.enableRotate&&_t(k)}function lt(k){n.enabled!==!1&&(E.length===0&&(n.domElement.setPointerCapture(k.pointerId),n.domElement.addEventListener("pointermove",K),n.domElement.addEventListener("pointerup",st)),R(k),k.pointerType==="touch"?S(k):mt(k))}function K(k){n.enabled!==!1&&(k.pointerType==="touch"?A(k):Tt(k))}function st(k){I(k),E.length===0&&(n.domElement.releasePointerCapture(k.pointerId),n.domElement.removeEventListener("pointermove",K),n.domElement.removeEventListener("pointerup",st)),n.dispatchEvent(Fh),s=i.NONE}function mt(k){let at;switch(k.button){case 0:at=n.mouseButtons.LEFT;break;case 1:at=n.mouseButtons.MIDDLE;break;case 2:at=n.mouseButtons.RIGHT;break;default:at=-1}switch(at){case ai.DOLLY:if(n.enableZoom===!1)return;U(k),s=i.DOLLY;break;case ai.ROTATE:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enablePan===!1)return;N(k),s=i.PAN}else{if(n.enableRotate===!1)return;rt(k),s=i.ROTATE}break;case ai.PAN:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enableRotate===!1)return;rt(k),s=i.ROTATE}else{if(n.enablePan===!1)return;N(k),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(ba)}function Tt(k){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;H(k);break;case i.DOLLY:if(n.enableZoom===!1)return;Y(k);break;case i.PAN:if(n.enablePan===!1)return;et(k);break}}function F(k){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(k.preventDefault(),n.dispatchEvent(ba),ut(k),n.dispatchEvent(Fh))}function f(k){n.enabled===!1||n.enablePan===!1||ct(k)}function S(k){switch(q(k),E.length){case 1:switch(n.touches.ONE){case li.ROTATE:if(n.enableRotate===!1)return;ot(),s=i.TOUCH_ROTATE;break;case li.PAN:if(n.enablePan===!1)return;dt(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case li.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Mt(),s=i.TOUCH_DOLLY_PAN;break;case li.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;V(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(ba)}function A(k){switch(q(k),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;_t(k),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;ht(k),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;nt(k),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;yt(k),n.update();break;default:s=i.NONE}}function z(k){n.enabled!==!1&&k.preventDefault()}function R(k){E.push(k)}function I(k){delete L[k.pointerId];for(let at=0;at<E.length;at++)if(E[at].pointerId==k.pointerId){E.splice(at,1);return}}function q(k){let at=L[k.pointerId];at===void 0&&(at=new wt,L[k.pointerId]=at),at.set(k.pageX,k.pageY)}function j(k){const at=k.pointerId===E[0].pointerId?E[1]:E[0];return L[at.pointerId]}n.domElement.addEventListener("contextmenu",z),n.domElement.addEventListener("pointerdown",lt),n.domElement.addEventListener("pointercancel",st),n.domElement.addEventListener("wheel",F,{passive:!1}),this.update()}}function Me(r){return(t,...e)=>hx(r,t,e)}function ar(r,t){return Me(td(r,t).get)}const{apply:hx,construct:ob,defineProperty:ab,get:lb,getOwnPropertyDescriptor:td,getPrototypeOf:nc,has:cb,ownKeys:ux,set:hb,setPrototypeOf:ub}=Reflect,{MAX_SAFE_INTEGER:fb,isFinite:fx,isNaN:dx}=Number,{iterator:es,species:db,toStringTag:px,for:pb}=Symbol,mx=Object,{create:ic,defineProperty:gx,freeze:mb,is:_x}=mx,yx=Array,vx=yx.prototype,ed=vx[es],xx=Me(ed),{abs:nd,floor:bx,log2:Sx,pow:Mx,sign:wx,trunc:Ex}=Math,Tx=ArrayBuffer,Ax=Tx.prototype;ar(Ax,"byteLength");const zh=typeof SharedArrayBuffer<"u"?SharedArrayBuffer:null;zh&&ar(zh.prototype,"byteLength");const id=nc(Uint8Array);id.from;const Ne=id.prototype;Ne[es];Me(Ne.keys);Me(Ne.values);Me(Ne.entries);Me(Ne.set);Me(Ne.reverse);Me(Ne.fill);Me(Ne.copyWithin);Me(Ne.sort);Me(Ne.slice);Me(Ne.subarray);ar(Ne,"buffer");ar(Ne,"byteOffset");ar(Ne,"length");ar(Ne,px);const Rx=Uint16Array,rd=Uint32Array,Xr=nc([][es]()),sd=Me(Xr.next),Ix=Me(function*(){}().next),Cx=nc(Xr),Lx=DataView.prototype,Px=Me(Lx.setUint16),rc=WeakMap,od=rc.prototype,ad=Me(od.get),Ux=Me(od.set),ld=new rc,Nx=ic(null,{next:{value:function(){const t=ad(ld,this);return sd(t)}},[es]:{value:function(){return this}}});function Dx(r){if(r[es]===ed&&Xr.next===sd)return r;const t=ic(Nx);return Ux(ld,t,xx(r)),t}const Ox=new rc,Fx=ic(Cx,{next:{value:function(){const t=ad(Ox,this);return Ix(t)},writable:!0,configurable:!0}});for(const r of ux(Xr))r!=="next"&&gx(Fx,r,td(Xr,r));const Bx=10,Ma=31,wa=15;function kh(r){const t=Ex(r),e=nd(r-t);return e>.5||e===.5&&t%2!==0?t+wx(r):t}function zx(r){const t=nd(r),e=r<0||_x(r,-0)?1:0;let n,i;if(!fx(t))n=dx(t)?512:0,i=Ma;else{let s=bx(Sx(t)),o=Mx(2,-s);t*o<1?(--s,o*=2):t*o>=2&&(++s,o/=2),s+wa>=Ma?(n=0,i=Ma):s+wa>=1?(n=kh((t*o-1)*1024),i=s+wa):(n=kh(t*16777216),i=0)}return e<<15|i<<Bx|n}const cd=new rd(2048);for(let r=1;r<1024;++r){let t=r<<13,e=0;for(;!(t&8388608);)t<<=1,e-=8388608;t&=-8388609,e+=947912704,cd[r]=t|e}for(let r=1024;r<2048;++r)cd[r]=939524096+(r-1024<<13);const ns=new rd(64);for(let r=1;r<31;++r)ns[r]=r<<23;ns[31]=1199570944;ns[32]=2147483648;for(let r=33;r<63;++r)ns[r]=2147483648+(r-32<<23);ns[63]=3347054592;const kx=new Rx(64);for(let r=1;r<64;++r)r!==32&&(kx[r]=1024);function Gh(r,t,e,...n){return Px(r,t,zx(e),...Dx(n))}const Gx=`#version 300 es
in vec4 position;
void main() {
  gl_Position = position;
}
`;function Hh(r,t,e){const n=r.createShader(e);if(r.shaderSource(n,t),r.compileShader(n),!r.getShaderParameter(n,r.COMPILE_STATUS))throw`Could not compile WebGL program. 

${r.getShaderInfoLog(n)}`;return n}function Hx(r,[t,e]){const n=r.createProgram(),i=Hh(r,t,r.VERTEX_SHADER),s=Hh(r,e,r.FRAGMENT_SHADER);return r.attachShader(n,i),r.attachShader(n,s),r.linkProgram(n),n}function Vx(r,t){return Hx(r,[Gx,t])}function Wx(r,t){const e=r.createVertexArray();r.bindVertexArray(e);const n=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,n),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),r.STATIC_DRAW);const i=r.getAttribLocation(t,"position");return r.enableVertexAttribArray(i),r.vertexAttribPointer(i,2,r.FLOAT,!1,0,0),e}function Vh(r,t,e,n){switch(e){case"int":r.uniform1i(t,n);break;case"float":r.uniform1f(t,n);break;case"vec2":r.uniform2fv(t,n);break;case"vec3":r.uniform3fv(t,n);break;case"vec4":r.uniform4fv(t,n);break;case"mat2":r.uniformMatrix2fv(t,!1,n);break;case"mat3":r.uniformMatrix3fv(t,!1,n);break;case"mat4":r.uniformMatrix4fv(t,!1,n);break;default:throw"Unsupported uniform type"}}function Wh(r,t,e,n,i){r.activeTexture(r.TEXTURE0+i);const s=Yx(r,t,e,n);switch(t){case"sampler2D":r.bindTexture(r.TEXTURE_2D,s);break;case"sampler3D":r.bindTexture(r.TEXTURE_3D,s);break;default:throw"Unsupported texture type"}}function Xx(r,t,e){let n=0;Object.entries(e).forEach(([i,s])=>{if(s.type.startsWith("sampler")){const o=r.getUniformLocation(t,i);if(s.type.endsWith("Array")){const a=[];s.value.forEach((l,c)=>{Wh(r,s.type.slice(0,-5),l,s.options,n),a.push(n),n++}),r.uniform1iv(o,a)}else{const a=r.getUniformLocation(t,i);Wh(r,s.type,s.value,s.options,n),r.uniform1i(a,n),n++}}else if(s.type.endsWith("Array"))s.value.forEach((o,a)=>{const l=r.getUniformLocation(t,`${i}[${a}]`);Vh(r,l,s.type.slice(0,-5),o)});else{const o=r.getUniformLocation(t,i);Vh(r,o,s.type,s.value)}})}function qx(r,t,e,n,i){const s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s);const o=r.createTexture(r.TEXTURE_2D);if(r.bindTexture(r.TEXTURE_2D,o),n==="float32")r.texImage2D(r.TEXTURE_2D,0,i==4?r.RGBA32F:r.R32F,t,e,0,i==4?r.RGBA:r.RED,r.FLOAT,null);else if(n==="float16")r.texImage2D(r.TEXTURE_2D,0,i==4?r.RGBA16F:r.R16F,t,e,0,i==4?r.RGBA:r.RED,r.HALF_FLOAT,null);else if(n==="uint8")r.texImage2D(r.TEXTURE_2D,0,i==4?r.RGBA:r.R8,t,e,0,i==4?r.RGBA:r.RED,r.UNSIGNED_BYTE,null);else throw"Unsupported output type";return r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0),r.drawBuffers([r.COLOR_ATTACHMENT0]),{fb:s,outTex:o}}function Yx(r,t,e,n){const i=n.width,s=n.height,o=r.createTexture();if(t==="sampler2D"){if(r.bindTexture(r.TEXTURE_2D,o),e instanceof Float32Array)r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,i,s,0,r.RGBA,r.FLOAT,e);else if(e instanceof Uint16Array)r.texImage2D(r.TEXTURE_2D,0,r.RGBA16F,i,s,0,r.RGBA,r.HALF_FLOAT,e);else if(e instanceof Uint8Array)r.texImage2D(r.TEXTURE_2D,0,r.RGBA,i,s,0,r.RGBA,r.UNSIGNED_BYTE,e);else throw"Unsupported texture type";n.sampling=="nearest"?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST)):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR)),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)}else if(t==="sampler3D"){const a=n.depth;if(r.bindTexture(r.TEXTURE_3D,o),e instanceof Float32Array)r.texImage3D(r.TEXTURE_3D,0,r.RGBA32F,i,s,a,0,r.RGBA,r.FLOAT,e);else if(e instanceof Uint16Array)r.texImage3D(r.TEXTURE_3D,0,r.RGBA16F,i,s,a,0,r.RGBA,r.HALF_FLOAT,e);else if(e instanceof Uint8Array)r.texImage3D(r.TEXTURE_3D,0,r.RGBA,i,s,a,0,r.RGBA,r.UNSIGNED_BYTE,e);else throw"Unsupported texture type";n.sampling=="nearest"?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST_MIPMAP_NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST)):(r.texParameteri(r.TEXTURE_3D,r.TEXTURE_MIN_FILTER,r.LINEAR_MIPMAP_LINEAR),r.texParameteri(r.TEXTURE_3D,r.TEXTURE_MAG_FILTER,r.LINEAR)),r.texParameteri(r.TEXTURE_3D,r.TEXTURE_BASE_LEVEL,0),r.texParameteri(r.TEXTURE_3D,r.TEXTURE_MAX_LEVEL,0),r.texParameteri(r.TEXTURE_3D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_3D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)}return o}const Ea=16384,jx=16384;function hd(r,t,e,n,i=4){if(r>Ea*jx)throw"Requested output size is too large";const o=document.createElement("canvas").getContext("webgl2");o.getExtension("EXT_color_buffer_half_float"),o.getExtension("EXT_color_buffer_float");const a=Ea,l=Math.ceil(r/Ea),c=Vx(o,n),u=Wx(o,c),{fb:d,outTex:p}=qx(o,a,l,t,i);o.viewport(0,0,a,l),o.useProgram(c),Xx(o,c,e),o.drawArrays(o.TRIANGLES,0,6),o.readBuffer(o.COLOR_ATTACHMENT0);let m=null;if(t==="float32"){const h=new Float32Array(a*l*i);o.readPixels(0,0,a,l,i==4?o.RGBA:o.RED,o.FLOAT,h),m=h.slice(0,r*i)}else if(t==="float16"){const h=new Uint16Array(a*l*i);o.readPixels(0,0,a,l,i==4?o.RGBA:o.RED,o.HALF_FLOAT,h),m=h.slice(0,r*i)}else if(t==="uint8"){const h=new Uint8Array(a*l*i);o.readPixels(0,0,a,l,i==4?o.RGBA:o.RED,o.UNSIGNED_BYTE,h),m=h.slice(0,r*i)}else throw"Unsupported output type";return o.deleteFramebuffer(d),o.deleteTexture(p),o.deleteVertexArray(u),o.deleteProgram(c),m}const $x=`#version 300 es
precision highp float;

// PPNG size parameters
uniform int Q;
uniform int R;
uniform int F;

// indexing parameters
uniform int voxelSize;

uniform sampler2D ppng1x;
uniform sampler2D ppng1y;
uniform sampler2D ppng1z;

const int canvasMaxWidth = 16384;

// output (4 channel half floats)
out vec4 outColor;

void main() {
    // indexing Fx2xQxQxQ
    int voxelFlatIndex = int(gl_FragCoord.y) * canvasMaxWidth + int(gl_FragCoord.x);
    if (voxelFlatIndex > voxelSize) {
        discard;
    }

    int xi = (voxelFlatIndex % Q);
    int yi = ((voxelFlatIndex / (Q)) % Q);
    int zi = ((voxelFlatIndex / (Q*Q)) % Q);
    int fi = ((voxelFlatIndex / (Q*Q*Q)) % (F*2));
    // Fx2*QxRxC
    outColor = vec4(0.0, 0.0, 0.0, 0.0);
    for(int r = 0; r < R; r++){
        int qxi = fi * Q*R + xi * R + r;
        int qyi = fi * Q*R + yi * R + r;
        int qzi = fi * Q*R + zi * R + r;
        vec4 qxv = texelFetch(ppng1x, ivec2(qxi, 0), 0);
        vec4 qyv = texelFetch(ppng1y, ivec2(qyi, 0), 0);
        vec4 qzv = texelFetch(ppng1z, ivec2(qzi, 0), 0);

        outColor += (qxv * qyv * qzv);
    }
}
`;function Zx(r,t,e,n){const i=r*2*t*t*t,s="float16",o={Q:{type:"int",value:t},R:{type:"int",value:e},F:{type:"int",value:r},voxelSize:{type:"int",value:i},ppng1x:{type:"sampler2D",value:n[0],options:{width:r*2*t*e,height:1,sampling:"nearest"}},ppng1y:{type:"sampler2D",value:n[1],options:{width:r*2*t*e,height:1,sampling:"nearest"}},ppng1z:{type:"sampler2D",value:n[2],options:{width:r*2*t*e,height:1,sampling:"nearest"}}};return hd(i,s,o,$x)}const Jx=`#version 300 es
precision highp float;

// PPNG size parameters
uniform int Q;
uniform int R;
uniform int F;

// indexing parameters
uniform int voxelSize;

uniform sampler2D ppng1x;
uniform sampler2D ppng1y;
uniform sampler2D ppng1z;

const int canvasMaxWidth = 16384;

// output (4 channel half floats)
out vec4 outColor;

void main() {
    // indexing Fx2xQxQxQ
    int voxelFlatIndex = int(gl_FragCoord.y) * canvasMaxWidth + int(gl_FragCoord.x);
    if (voxelFlatIndex > voxelSize) {
        discard;
    }

    int xi = (voxelFlatIndex % Q);
    int yi = ((voxelFlatIndex / (Q)) % Q);
    int zi = ((voxelFlatIndex / (Q*Q)) % Q);
    int fi = ((voxelFlatIndex / (Q*Q*Q)) % (F*2));

    // Fx2*QxQxRxC
    outColor = vec4(0.0, 0.0, 0.0, 0.0);
    for(int r = 0; r < R; r++){
        int qyz_z = fi * Q + zi;
        int qyz_y = yi * R + r;

        int qxz_z = fi * Q + zi;
        int qxz_x = xi * R + r;

        int qxy_y = fi * Q + yi;
        int qxy_x = xi * R + r;

        vec4 qxv = texelFetch(ppng1x, ivec2(qyz_y, qyz_z), 0);
        vec4 qyv = texelFetch(ppng1y, ivec2(qxz_x, qxz_z), 0);
        vec4 qzv = texelFetch(ppng1z, ivec2(qxy_x, qxy_y), 0);

        outColor += (qxv * qyv * qzv);
    }
}
`;function Kx(r,t,e,n){const i=r*2*t*t*t,s="float16",o={Q:{type:"int",value:t},R:{type:"int",value:e},F:{type:"int",value:r},voxelSize:{type:"int",value:i},ppng1x:{type:"sampler2D",value:n[0],options:{width:t*e,height:r*2*t,sampling:"nearest"}},ppng1y:{type:"sampler2D",value:n[1],options:{width:t*e,height:r*2*t,sampling:"nearest"}},ppng1z:{type:"sampler2D",value:n[2],options:{width:t*e,height:r*2*t,sampling:"nearest"}}};return hd(i,s,o,Jx)}const Qx=`
precision highp float;
varying vec3 vOrigin;
varying vec3 vDirection;

void main() {
    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
    vOrigin = cameraPosition;
    vec3 pp = vec3((modelMatrix * vec4(position, 1.0)).xyz);
    vDirection = pp - vOrigin;
    gl_Position = projectionMatrix * mvPosition;
}
`,tb=`
precision highp float;
precision highp int;
precision highp sampler3D;
precision highp sampler2D;

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;

uniform sampler3D[5] grid_textures;

uniform sampler3D[8] ppng_textures;
uniform float grid_th;
uniform int grid_mips;

uniform mat4[32] density_weight_0;
uniform mat4[32] rgb_weight_0;
uniform mat4[4] rgb_weight_1;

uniform float[4] freqs;

uniform int num_freqs;
uniform int num_quants;
uniform int grid_res;
uniform float render_step;
uniform float min_alpha;

const int MAX_ITERS = 128;
const int MAX_NUM_FREQS = 4;
const float PI = 3.14159265359;
const float TWO_PI = 6.28318530718;

const float ITSPI = 1.0 / (2.0 * 1.77245385);
const float S2 = 1.41421356;
const float S3 = 1.73205081;
const float S5 = 2.23606798;
const float S7 = 2.64575131;
const float S15 = S3*S5;
const float S42 = S2*S3*S7;
const float S70 = S2*S5*S7;
const float S105 = S15 * S7;


varying vec3 vOrigin;
varying vec3 vDirection;
vec4 z = vec4(0.0, 0.0, 0.0, 0.0);

vec2 hitBox( vec3 orig, vec3 dir ) {
    const vec3 box_min = vec3(0.0);
    const vec3 box_max = vec3( 1.0 );
    vec3 inv_dir = 1.0 / dir;
    vec3 tmin_tmp = ( box_min - orig ) * inv_dir;
    vec3 tmax_tmp = ( box_max - orig ) * inv_dir;
    vec3 tmin = min( tmin_tmp, tmax_tmp );
    vec3 tmax = max( tmin_tmp, tmax_tmp );
    float t0 = max( tmin.x, max( tmin.y, tmin.z ) );
    float t1 = min( tmax.x, min( tmax.y, tmax.z ) );
    return vec2( t0, t1 );
}

vec4[4] density_layer_0(vec4[8] ppng_values){
    vec4[4] out_vecs = vec4[4] (z, z, z, z);

    for( int fid = 0; fid < num_freqs * 2; fid++){
        for (int oid = 0; oid < 4; oid++){
            out_vecs[oid] += density_weight_0[fid * 4 + oid] * ppng_values[fid];
        }
    }
    return out_vecs;
}

vec4[4] rgb_layer_0(vec4[4] color_input){
    vec4[4] out_vecs = vec4[4] (z, z, z, z);

    for (int oid = 0; oid < 4; oid++){
        for( int iid = 0; iid < 4; iid++){
            out_vecs[oid] += rgb_weight_0[iid * 4 + oid] * color_input[iid];
        }
    }
    return out_vecs;
}

vec3 rgb_layer_1(vec4[4] color_val, vec4[4] sh_feats){
    // relu
    for (int oid = 0; oid < 4; oid++){
        color_val[oid] = max(color_val[oid] + sh_feats[oid], 0.0);
    }
    vec4 out_vec = vec4(0.0, 0.0, 0.0, 0.0);

    for (int iid = 0; iid < 4; iid++){
        out_vec += rgb_weight_1[iid] * color_val[iid];
    }
    return out_vec.rgb;
}

vec4[4] compute_sh_feats(vec3 dir){
    float xx = dir.x * dir.x;
    float yy = dir.y * dir.y;
    float zz = dir.z * dir.z;
    float xy = dir.x * dir.y;
    float yz = dir.y * dir.z;
    float zx = dir.z * dir.x;
    float dx = dir.x;
    float dy = dir.y;
    float dz = dir.z;

    vec4[4] shf = vec4[4](z, z, z, z);
    vec4[4] ret = vec4[4](z, z, z, z);
    vec4 d0v = vec4(1.0, -S3, S3, -S3) * ITSPI;
    vec4 d1v = vec4(S15, -S15, S5  / 2.0, -S15) * ITSPI;
    vec4 d2v = vec4(S15 / 2.0, S70/ 4.0, S105, S42 / 4.0) * ITSPI;
    vec4 d3v = vec4(S7 / 2.0, S42 / 4.0, S105 / 2.0, S70 / 4.0) * ITSPI;

    shf[0] = d0v * vec4(1.0, dir.yzx);
    shf[1] = d1v * vec4(xy, yz, 3.0 * zz - 1.0, zx);
    shf[2] = d2v * vec4(xx - yy, dy * (-3.0 * xx + yy), xy * dz, dy * (1.0 - 5.0 * zz));
    shf[3] = d3v * vec4(dz * (5.0 * zz - 3.0), dx * (1.0 - 5.0 * zz), dz * (xx - yy), dx * (-xx + 3.0*yy));

    // apply first MLP layer for precomputing SH features
    for (int oid = 0; oid < 4; oid++){
        for( int iid = 0; iid < 4; iid++){
            ret[oid] += rgb_weight_0[(iid + 4) * 4 + oid] * shf[iid];
        }
    }
    return ret;
}
int mip_from_pos(vec3 p){
    vec3 np = p - 0.5;
    vec3 ap = abs(np);
    int mip = int(-log2(max(max(ap.x, ap.y), ap.z)));
    return max(min(mip - 1, grid_mips - 1), 0);
}

float sample_grid( int mip, vec3 p ) {
    vec3 sp = (p - 0.5) * exp2(float(mip)) + 0.5;
    switch(mip){
        case 0:
            return texture(grid_textures[0], sp).r;
        case 1:
            return texture(grid_textures[1], sp).r;
        case 2:
            return texture(grid_textures[2], sp).r;
        case 3:
            return texture(grid_textures[3], sp).r;
        case 4:
            return texture(grid_textures[4], sp).r;
    }
}
vec3 sigmoid(vec3 v){
    return 1.0 / (1.0 + exp(-v));
}

vec4 query( vec3 p, vec3 dir, float t, vec4[4] sh_feats, float dt) {
    vec4 feats[8] = vec4[8](z, z, z, z, z, z, z, z);

    for (int fid = 0; fid < num_freqs; fid++){
        float f = freqs[fid] * PI;
        vec3 sp = (sin(mod(f * (p - 0.5), TWO_PI)) * float(num_quants - 1) / float(num_quants)) / 2.0 + 0.50;
        vec3 cp = (cos(mod(f * (p - 0.5), TWO_PI)) * float(num_quants - 1) / float(num_quants)) / 2.0 + 0.50;

        switch(fid){
            case 0:
                feats[0] = texture(ppng_textures[0], sp);
                feats[1] = texture(ppng_textures[1], cp);
                break;
            case 1:
                feats[2] = texture(ppng_textures[2], sp);
                feats[3] = texture(ppng_textures[3], cp);
                break;
            case 2:
                feats[4] = texture(ppng_textures[4], sp);
                feats[5] = texture(ppng_textures[5], cp);
                break;
            case 3:
                feats[6] = texture(ppng_textures[6], sp);
                feats[7] = texture(ppng_textures[7], cp);
                break;
        }
    }


    // obtain density features
    vec4[4] density_feats_0 = density_layer_0(feats);

    float density = min(density_feats_0[0].r,11.0);
    density = exp(density);
    float alpha = 1.0 - exp(-density * dt);

    // at this point, we have high alpha
    // if we want to just render depth, return early

    // 
    vec4[4] color_input = vec4[4](
        density_feats_0[0], 
        density_feats_0[1], 
        density_feats_0[2], 
        density_feats_0[3]
    );
    vec4[4] rgb_feats_0 = rgb_layer_0(color_input);
    vec3 rgb = rgb_layer_1(rgb_feats_0, sh_feats);

    rgb = sigmoid(rgb);

    return vec4(rgb, alpha);
}
void main(){
    vec3 rayDir = normalize( vDirection );
    vec2 bounds = hitBox( vOrigin, rayDir );

    if ( bounds.x > bounds.y ) {
        discard;
    }
    vec4 [4] sh_feats = compute_sh_feats(rayDir);
    
    bounds.x = max( bounds.x, 0.0 );
    vec3 p = vOrigin + bounds.x * rayDir;
    vec3 next_p = p;
    vec3 inc = 1.0 / abs( rayDir );

    vec3 rgb = vec3(0.0, 0.0, 0.0);
    float acc_trans = 1.0;
    float t = bounds.x;
    float iter_count = 0.0;
    float max_it = float(MAX_ITERS);

    // value calculated from iNGP paper
    float grid_step_size = S3 / 256.0;

    while(t < bounds.y && iter_count < max_it){
        p = vOrigin + rayDir * t;
        int mip = mip_from_pos(p);
        float scale = 1.0 / exp2(float(mip));
        next_p = vOrigin + rayDir * (t + grid_step_size * scale);

        float grid = sample_grid(mip, next_p);
        if (grid < grid_th){
            t = t + (grid_step_size * scale);
            continue;
        }

        // if we hit the grid, we need to do non-grid stepping
        float dt = 0.0;
        while(dt < (grid_step_size * scale)){
            p = vOrigin + rayDir * (t + dt);
            // at this point, we have hit something in grid.
            vec4 rgba = query(p, rayDir, t, sh_feats, render_step);
            float alpha = rgba.a;
            float weight = alpha * acc_trans;
            rgb += weight * rgba.rgb;
            acc_trans *= (1.0 - alpha);

            if (acc_trans < 0.01) {
                gl_FragColor = vec4(rgb, 1.0 - acc_trans);
                return;
            }
            dt = dt + render_step * scale;
            iter_count += scale;
        }
        t = t + dt;
    }
    gl_FragColor = vec4(rgb, 1.0 - acc_trans);
}
`;class eb extends Jt{constructor(t,e,n,i,s,o,a,l,c,u,d,p){super();const m=s.map(w=>{const b=new Or(w,e,e,e);return b.format=Fe,b.type=Vn,b.minFilter=b.magFilter=re,b.unpackAlignment=1,b.needsUpdate=!0,b}),h=o.map(w=>{const b=new Or(w,n,n,n);return b.format=bl,b.type=Vn,b.minFilter=b.magFilter=re,b.unpackAlignment=1,b.needsUpdate=!0,b}),g=a.map(w=>new zt().fromArray(w).transpose()),y=l.map(w=>w.map(b=>new zt().fromArray(b).transpose())),_={num_freqs:{value:t},num_quants:{value:e},ppng_textures:{value:m},grid_textures:{value:h.reverse()},grid_res:{value:n},grid_th:{value:c},grid_mips:{value:h.length},density_weight_0:{value:g},rgb_weight_0:{value:y[0]},rgb_weight_1:{value:y[1]},min_alpha:{value:d},aabb_scale:{value:u},render_step:{value:p},freqs:{value:i}},M=new Yn(1,1,1),v=new en({uniforms:_,vertexShader:Qx,fragmentShader:tb,side:Ae}),x=new be(M,v);x.position.set(.5,.5,.5),this.add(x)}}var nb=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},ud={exports:{}};/*! For license information please see cbor.js.LICENSE.txt */(function(r,t){(function(e,n){r.exports=n()})(nb,()=>(()=>{var e={8599:o=>{const{AbortController:a,AbortSignal:l}=typeof self<"u"?self:typeof window<"u"?window:void 0;o.exports=a,o.exports.AbortSignal=l,o.exports.default=a},9742:(o,a)=>{a.byteLength=function(g){var y=m(g),_=y[0],M=y[1];return 3*(_+M)/4-M},a.toByteArray=function(g){var y,_,M=m(g),v=M[0],x=M[1],w=new u(function(L,T,P){return 3*(T+P)/4-P}(0,v,x)),b=0,E=x>0?v-4:v;for(_=0;_<E;_+=4)y=c[g.charCodeAt(_)]<<18|c[g.charCodeAt(_+1)]<<12|c[g.charCodeAt(_+2)]<<6|c[g.charCodeAt(_+3)],w[b++]=y>>16&255,w[b++]=y>>8&255,w[b++]=255&y;return x===2&&(y=c[g.charCodeAt(_)]<<2|c[g.charCodeAt(_+1)]>>4,w[b++]=255&y),x===1&&(y=c[g.charCodeAt(_)]<<10|c[g.charCodeAt(_+1)]<<4|c[g.charCodeAt(_+2)]>>2,w[b++]=y>>8&255,w[b++]=255&y),w},a.fromByteArray=function(g){for(var y,_=g.length,M=_%3,v=[],x=16383,w=0,b=_-M;w<b;w+=x)v.push(h(g,w,w+x>b?b:w+x));return M===1?(y=g[_-1],v.push(l[y>>2]+l[y<<4&63]+"==")):M===2&&(y=(g[_-2]<<8)+g[_-1],v.push(l[y>>10]+l[y>>4&63]+l[y<<2&63]+"=")),v.join("")};for(var l=[],c=[],u=typeof Uint8Array<"u"?Uint8Array:Array,d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",p=0;p<64;++p)l[p]=d[p],c[d.charCodeAt(p)]=p;function m(g){var y=g.length;if(y%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var _=g.indexOf("=");return _===-1&&(_=y),[_,_===y?0:4-_%4]}function h(g,y,_){for(var M,v,x=[],w=y;w<_;w+=3)M=(g[w]<<16&16711680)+(g[w+1]<<8&65280)+(255&g[w+2]),x.push(l[(v=M)>>18&63]+l[v>>12&63]+l[v>>6&63]+l[63&v]);return x.join("")}c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63},8764:(o,a,l)=>{const c=l(9742),u=l(645),d=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;a.Buffer=h,a.SlowBuffer=function(f){return+f!=f&&(f=0),h.alloc(+f)},a.INSPECT_MAX_BYTES=50;const p=2147483647;function m(f){if(f>p)throw new RangeError('The value "'+f+'" is invalid for option "size"');const S=new Uint8Array(f);return Object.setPrototypeOf(S,h.prototype),S}function h(f,S,A){if(typeof f=="number"){if(typeof S=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return _(f)}return g(f,S,A)}function g(f,S,A){if(typeof f=="string")return function(I,q){if(typeof q=="string"&&q!==""||(q="utf8"),!h.isEncoding(q))throw new TypeError("Unknown encoding: "+q);const j=0|w(I,q);let k=m(j);const at=k.write(I,q);return at!==j&&(k=k.slice(0,at)),k}(f,S);if(ArrayBuffer.isView(f))return function(I){if(K(I,Uint8Array)){const q=new Uint8Array(I);return v(q.buffer,q.byteOffset,q.byteLength)}return M(I)}(f);if(f==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof f);if(K(f,ArrayBuffer)||f&&K(f.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(K(f,SharedArrayBuffer)||f&&K(f.buffer,SharedArrayBuffer)))return v(f,S,A);if(typeof f=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const z=f.valueOf&&f.valueOf();if(z!=null&&z!==f)return h.from(z,S,A);const R=function(I){if(h.isBuffer(I)){const q=0|x(I.length),j=m(q);return j.length===0||I.copy(j,0,0,q),j}return I.length!==void 0?typeof I.length!="number"||st(I.length)?m(0):M(I):I.type==="Buffer"&&Array.isArray(I.data)?M(I.data):void 0}(f);if(R)return R;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof f[Symbol.toPrimitive]=="function")return h.from(f[Symbol.toPrimitive]("string"),S,A);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof f)}function y(f){if(typeof f!="number")throw new TypeError('"size" argument must be of type number');if(f<0)throw new RangeError('The value "'+f+'" is invalid for option "size"')}function _(f){return y(f),m(f<0?0:0|x(f))}function M(f){const S=f.length<0?0:0|x(f.length),A=m(S);for(let z=0;z<S;z+=1)A[z]=255&f[z];return A}function v(f,S,A){if(S<0||f.byteLength<S)throw new RangeError('"offset" is outside of buffer bounds');if(f.byteLength<S+(A||0))throw new RangeError('"length" is outside of buffer bounds');let z;return z=S===void 0&&A===void 0?new Uint8Array(f):A===void 0?new Uint8Array(f,S):new Uint8Array(f,S,A),Object.setPrototypeOf(z,h.prototype),z}function x(f){if(f>=p)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+p.toString(16)+" bytes");return 0|f}function w(f,S){if(h.isBuffer(f))return f.length;if(ArrayBuffer.isView(f)||K(f,ArrayBuffer))return f.byteLength;if(typeof f!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof f);const A=f.length,z=arguments.length>2&&arguments[2]===!0;if(!z&&A===0)return 0;let R=!1;for(;;)switch(S){case"ascii":case"latin1":case"binary":return A;case"utf8":case"utf-8":return nt(f).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*A;case"hex":return A>>>1;case"base64":return yt(f).length;default:if(R)return z?-1:nt(f).length;S=(""+S).toLowerCase(),R=!0}}function b(f,S,A){let z=!1;if((S===void 0||S<0)&&(S=0),S>this.length||((A===void 0||A>this.length)&&(A=this.length),A<=0)||(A>>>=0)<=(S>>>=0))return"";for(f||(f="utf8");;)switch(f){case"hex":return rt(this,S,A);case"utf8":case"utf-8":return C(this,S,A);case"ascii":return D(this,S,A);case"latin1":case"binary":return tt(this,S,A);case"base64":return B(this,S,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return U(this,S,A);default:if(z)throw new TypeError("Unknown encoding: "+f);f=(f+"").toLowerCase(),z=!0}}function E(f,S,A){const z=f[S];f[S]=f[A],f[A]=z}function L(f,S,A,z,R){if(f.length===0)return-1;if(typeof A=="string"?(z=A,A=0):A>2147483647?A=2147483647:A<-2147483648&&(A=-2147483648),st(A=+A)&&(A=R?0:f.length-1),A<0&&(A=f.length+A),A>=f.length){if(R)return-1;A=f.length-1}else if(A<0){if(!R)return-1;A=0}if(typeof S=="string"&&(S=h.from(S,z)),h.isBuffer(S))return S.length===0?-1:T(f,S,A,z,R);if(typeof S=="number")return S&=255,typeof Uint8Array.prototype.indexOf=="function"?R?Uint8Array.prototype.indexOf.call(f,S,A):Uint8Array.prototype.lastIndexOf.call(f,S,A):T(f,[S],A,z,R);throw new TypeError("val must be string, number or Buffer")}function T(f,S,A,z,R){let I,q=1,j=f.length,k=S.length;if(z!==void 0&&((z=String(z).toLowerCase())==="ucs2"||z==="ucs-2"||z==="utf16le"||z==="utf-16le")){if(f.length<2||S.length<2)return-1;q=2,j/=2,k/=2,A/=2}function at(St,vt){return q===1?St[vt]:St.readUInt16BE(vt*q)}if(R){let St=-1;for(I=A;I<j;I++)if(at(f,I)===at(S,St===-1?0:I-St)){if(St===-1&&(St=I),I-St+1===k)return St*q}else St!==-1&&(I-=I-St),St=-1}else for(A+k>j&&(A=j-k),I=A;I>=0;I--){let St=!0;for(let vt=0;vt<k;vt++)if(at(f,I+vt)!==at(S,vt)){St=!1;break}if(St)return I}return-1}function P(f,S,A,z){A=Number(A)||0;const R=f.length-A;z?(z=Number(z))>R&&(z=R):z=R;const I=S.length;let q;for(z>I/2&&(z=I/2),q=0;q<z;++q){const j=parseInt(S.substr(2*q,2),16);if(st(j))return q;f[A+q]=j}return q}function G(f,S,A,z){return lt(nt(S,f.length-A),f,A,z)}function X(f,S,A,z){return lt(function(R){const I=[];for(let q=0;q<R.length;++q)I.push(255&R.charCodeAt(q));return I}(S),f,A,z)}function $(f,S,A,z){return lt(yt(S),f,A,z)}function O(f,S,A,z){return lt(function(R,I){let q,j,k;const at=[];for(let St=0;St<R.length&&!((I-=2)<0);++St)q=R.charCodeAt(St),j=q>>8,k=q%256,at.push(k),at.push(j);return at}(S,f.length-A),f,A,z)}function B(f,S,A){return S===0&&A===f.length?c.fromByteArray(f):c.fromByteArray(f.slice(S,A))}function C(f,S,A){A=Math.min(f.length,A);const z=[];let R=S;for(;R<A;){const I=f[R];let q=null,j=I>239?4:I>223?3:I>191?2:1;if(R+j<=A){let k,at,St,vt;switch(j){case 1:I<128&&(q=I);break;case 2:k=f[R+1],(192&k)==128&&(vt=(31&I)<<6|63&k,vt>127&&(q=vt));break;case 3:k=f[R+1],at=f[R+2],(192&k)==128&&(192&at)==128&&(vt=(15&I)<<12|(63&k)<<6|63&at,vt>2047&&(vt<55296||vt>57343)&&(q=vt));break;case 4:k=f[R+1],at=f[R+2],St=f[R+3],(192&k)==128&&(192&at)==128&&(192&St)==128&&(vt=(15&I)<<18|(63&k)<<12|(63&at)<<6|63&St,vt>65535&&vt<1114112&&(q=vt))}}q===null?(q=65533,j=1):q>65535&&(q-=65536,z.push(q>>>10&1023|55296),q=56320|1023&q),z.push(q),R+=j}return function(I){const q=I.length;if(q<=Z)return String.fromCharCode.apply(String,I);let j="",k=0;for(;k<q;)j+=String.fromCharCode.apply(String,I.slice(k,k+=Z));return j}(z)}a.kMaxLength=p,h.TYPED_ARRAY_SUPPORT=function(){try{const f=new Uint8Array(1),S={foo:function(){return 42}};return Object.setPrototypeOf(S,Uint8Array.prototype),Object.setPrototypeOf(f,S),f.foo()===42}catch{return!1}}(),h.TYPED_ARRAY_SUPPORT||typeof console>"u"||typeof console.error!="function"||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(h.prototype,"parent",{enumerable:!0,get:function(){if(h.isBuffer(this))return this.buffer}}),Object.defineProperty(h.prototype,"offset",{enumerable:!0,get:function(){if(h.isBuffer(this))return this.byteOffset}}),h.poolSize=8192,h.from=function(f,S,A){return g(f,S,A)},Object.setPrototypeOf(h.prototype,Uint8Array.prototype),Object.setPrototypeOf(h,Uint8Array),h.alloc=function(f,S,A){return function(z,R,I){return y(z),z<=0?m(z):R!==void 0?typeof I=="string"?m(z).fill(R,I):m(z).fill(R):m(z)}(f,S,A)},h.allocUnsafe=function(f){return _(f)},h.allocUnsafeSlow=function(f){return _(f)},h.isBuffer=function(f){return f!=null&&f._isBuffer===!0&&f!==h.prototype},h.compare=function(f,S){if(K(f,Uint8Array)&&(f=h.from(f,f.offset,f.byteLength)),K(S,Uint8Array)&&(S=h.from(S,S.offset,S.byteLength)),!h.isBuffer(f)||!h.isBuffer(S))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(f===S)return 0;let A=f.length,z=S.length;for(let R=0,I=Math.min(A,z);R<I;++R)if(f[R]!==S[R]){A=f[R],z=S[R];break}return A<z?-1:z<A?1:0},h.isEncoding=function(f){switch(String(f).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(f,S){if(!Array.isArray(f))throw new TypeError('"list" argument must be an Array of Buffers');if(f.length===0)return h.alloc(0);let A;if(S===void 0)for(S=0,A=0;A<f.length;++A)S+=f[A].length;const z=h.allocUnsafe(S);let R=0;for(A=0;A<f.length;++A){let I=f[A];if(K(I,Uint8Array))R+I.length>z.length?(h.isBuffer(I)||(I=h.from(I)),I.copy(z,R)):Uint8Array.prototype.set.call(z,I,R);else{if(!h.isBuffer(I))throw new TypeError('"list" argument must be an Array of Buffers');I.copy(z,R)}R+=I.length}return z},h.byteLength=w,h.prototype._isBuffer=!0,h.prototype.swap16=function(){const f=this.length;if(f%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let S=0;S<f;S+=2)E(this,S,S+1);return this},h.prototype.swap32=function(){const f=this.length;if(f%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let S=0;S<f;S+=4)E(this,S,S+3),E(this,S+1,S+2);return this},h.prototype.swap64=function(){const f=this.length;if(f%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let S=0;S<f;S+=8)E(this,S,S+7),E(this,S+1,S+6),E(this,S+2,S+5),E(this,S+3,S+4);return this},h.prototype.toString=function(){const f=this.length;return f===0?"":arguments.length===0?C(this,0,f):b.apply(this,arguments)},h.prototype.toLocaleString=h.prototype.toString,h.prototype.equals=function(f){if(!h.isBuffer(f))throw new TypeError("Argument must be a Buffer");return this===f||h.compare(this,f)===0},h.prototype.inspect=function(){let f="";const S=a.INSPECT_MAX_BYTES;return f=this.toString("hex",0,S).replace(/(.{2})/g,"$1 ").trim(),this.length>S&&(f+=" ... "),"<Buffer "+f+">"},d&&(h.prototype[d]=h.prototype.inspect),h.prototype.compare=function(f,S,A,z,R){if(K(f,Uint8Array)&&(f=h.from(f,f.offset,f.byteLength)),!h.isBuffer(f))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof f);if(S===void 0&&(S=0),A===void 0&&(A=f?f.length:0),z===void 0&&(z=0),R===void 0&&(R=this.length),S<0||A>f.length||z<0||R>this.length)throw new RangeError("out of range index");if(z>=R&&S>=A)return 0;if(z>=R)return-1;if(S>=A)return 1;if(this===f)return 0;let I=(R>>>=0)-(z>>>=0),q=(A>>>=0)-(S>>>=0);const j=Math.min(I,q),k=this.slice(z,R),at=f.slice(S,A);for(let St=0;St<j;++St)if(k[St]!==at[St]){I=k[St],q=at[St];break}return I<q?-1:q<I?1:0},h.prototype.includes=function(f,S,A){return this.indexOf(f,S,A)!==-1},h.prototype.indexOf=function(f,S,A){return L(this,f,S,A,!0)},h.prototype.lastIndexOf=function(f,S,A){return L(this,f,S,A,!1)},h.prototype.write=function(f,S,A,z){if(S===void 0)z="utf8",A=this.length,S=0;else if(A===void 0&&typeof S=="string")z=S,A=this.length,S=0;else{if(!isFinite(S))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");S>>>=0,isFinite(A)?(A>>>=0,z===void 0&&(z="utf8")):(z=A,A=void 0)}const R=this.length-S;if((A===void 0||A>R)&&(A=R),f.length>0&&(A<0||S<0)||S>this.length)throw new RangeError("Attempt to write outside buffer bounds");z||(z="utf8");let I=!1;for(;;)switch(z){case"hex":return P(this,f,S,A);case"utf8":case"utf-8":return G(this,f,S,A);case"ascii":case"latin1":case"binary":return X(this,f,S,A);case"base64":return $(this,f,S,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,f,S,A);default:if(I)throw new TypeError("Unknown encoding: "+z);z=(""+z).toLowerCase(),I=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const Z=4096;function D(f,S,A){let z="";A=Math.min(f.length,A);for(let R=S;R<A;++R)z+=String.fromCharCode(127&f[R]);return z}function tt(f,S,A){let z="";A=Math.min(f.length,A);for(let R=S;R<A;++R)z+=String.fromCharCode(f[R]);return z}function rt(f,S,A){const z=f.length;(!S||S<0)&&(S=0),(!A||A<0||A>z)&&(A=z);let R="";for(let I=S;I<A;++I)R+=mt[f[I]];return R}function U(f,S,A){const z=f.slice(S,A);let R="";for(let I=0;I<z.length-1;I+=2)R+=String.fromCharCode(z[I]+256*z[I+1]);return R}function N(f,S,A){if(f%1!=0||f<0)throw new RangeError("offset is not uint");if(f+S>A)throw new RangeError("Trying to access beyond buffer length")}function H(f,S,A,z,R,I){if(!h.isBuffer(f))throw new TypeError('"buffer" argument must be a Buffer instance');if(S>R||S<I)throw new RangeError('"value" argument is out of bounds');if(A+z>f.length)throw new RangeError("Index out of range")}function Y(f,S,A,z,R){V(S,z,R,f,A,7);let I=Number(S&BigInt(4294967295));f[A++]=I,I>>=8,f[A++]=I,I>>=8,f[A++]=I,I>>=8,f[A++]=I;let q=Number(S>>BigInt(32)&BigInt(4294967295));return f[A++]=q,q>>=8,f[A++]=q,q>>=8,f[A++]=q,q>>=8,f[A++]=q,A}function et(f,S,A,z,R){V(S,z,R,f,A,7);let I=Number(S&BigInt(4294967295));f[A+7]=I,I>>=8,f[A+6]=I,I>>=8,f[A+5]=I,I>>=8,f[A+4]=I;let q=Number(S>>BigInt(32)&BigInt(4294967295));return f[A+3]=q,q>>=8,f[A+2]=q,q>>=8,f[A+1]=q,q>>=8,f[A]=q,A+8}function ut(f,S,A,z,R,I){if(A+z>f.length)throw new RangeError("Index out of range");if(A<0)throw new RangeError("Index out of range")}function ct(f,S,A,z,R){return S=+S,A>>>=0,R||ut(f,0,A,4),u.write(f,S,A,z,23,4),A+4}function ot(f,S,A,z,R){return S=+S,A>>>=0,R||ut(f,0,A,8),u.write(f,S,A,z,52,8),A+8}h.prototype.slice=function(f,S){const A=this.length;(f=~~f)<0?(f+=A)<0&&(f=0):f>A&&(f=A),(S=S===void 0?A:~~S)<0?(S+=A)<0&&(S=0):S>A&&(S=A),S<f&&(S=f);const z=this.subarray(f,S);return Object.setPrototypeOf(z,h.prototype),z},h.prototype.readUintLE=h.prototype.readUIntLE=function(f,S,A){f>>>=0,S>>>=0,A||N(f,S,this.length);let z=this[f],R=1,I=0;for(;++I<S&&(R*=256);)z+=this[f+I]*R;return z},h.prototype.readUintBE=h.prototype.readUIntBE=function(f,S,A){f>>>=0,S>>>=0,A||N(f,S,this.length);let z=this[f+--S],R=1;for(;S>0&&(R*=256);)z+=this[f+--S]*R;return z},h.prototype.readUint8=h.prototype.readUInt8=function(f,S){return f>>>=0,S||N(f,1,this.length),this[f]},h.prototype.readUint16LE=h.prototype.readUInt16LE=function(f,S){return f>>>=0,S||N(f,2,this.length),this[f]|this[f+1]<<8},h.prototype.readUint16BE=h.prototype.readUInt16BE=function(f,S){return f>>>=0,S||N(f,2,this.length),this[f]<<8|this[f+1]},h.prototype.readUint32LE=h.prototype.readUInt32LE=function(f,S){return f>>>=0,S||N(f,4,this.length),(this[f]|this[f+1]<<8|this[f+2]<<16)+16777216*this[f+3]},h.prototype.readUint32BE=h.prototype.readUInt32BE=function(f,S){return f>>>=0,S||N(f,4,this.length),16777216*this[f]+(this[f+1]<<16|this[f+2]<<8|this[f+3])},h.prototype.readBigUInt64LE=Tt(function(f){_t(f>>>=0,"offset");const S=this[f],A=this[f+7];S!==void 0&&A!==void 0||ht(f,this.length-8);const z=S+256*this[++f]+65536*this[++f]+this[++f]*2**24,R=this[++f]+256*this[++f]+65536*this[++f]+A*2**24;return BigInt(z)+(BigInt(R)<<BigInt(32))}),h.prototype.readBigUInt64BE=Tt(function(f){_t(f>>>=0,"offset");const S=this[f],A=this[f+7];S!==void 0&&A!==void 0||ht(f,this.length-8);const z=S*2**24+65536*this[++f]+256*this[++f]+this[++f],R=this[++f]*2**24+65536*this[++f]+256*this[++f]+A;return(BigInt(z)<<BigInt(32))+BigInt(R)}),h.prototype.readIntLE=function(f,S,A){f>>>=0,S>>>=0,A||N(f,S,this.length);let z=this[f],R=1,I=0;for(;++I<S&&(R*=256);)z+=this[f+I]*R;return R*=128,z>=R&&(z-=Math.pow(2,8*S)),z},h.prototype.readIntBE=function(f,S,A){f>>>=0,S>>>=0,A||N(f,S,this.length);let z=S,R=1,I=this[f+--z];for(;z>0&&(R*=256);)I+=this[f+--z]*R;return R*=128,I>=R&&(I-=Math.pow(2,8*S)),I},h.prototype.readInt8=function(f,S){return f>>>=0,S||N(f,1,this.length),128&this[f]?-1*(255-this[f]+1):this[f]},h.prototype.readInt16LE=function(f,S){f>>>=0,S||N(f,2,this.length);const A=this[f]|this[f+1]<<8;return 32768&A?4294901760|A:A},h.prototype.readInt16BE=function(f,S){f>>>=0,S||N(f,2,this.length);const A=this[f+1]|this[f]<<8;return 32768&A?4294901760|A:A},h.prototype.readInt32LE=function(f,S){return f>>>=0,S||N(f,4,this.length),this[f]|this[f+1]<<8|this[f+2]<<16|this[f+3]<<24},h.prototype.readInt32BE=function(f,S){return f>>>=0,S||N(f,4,this.length),this[f]<<24|this[f+1]<<16|this[f+2]<<8|this[f+3]},h.prototype.readBigInt64LE=Tt(function(f){_t(f>>>=0,"offset");const S=this[f],A=this[f+7];S!==void 0&&A!==void 0||ht(f,this.length-8);const z=this[f+4]+256*this[f+5]+65536*this[f+6]+(A<<24);return(BigInt(z)<<BigInt(32))+BigInt(S+256*this[++f]+65536*this[++f]+this[++f]*16777216)}),h.prototype.readBigInt64BE=Tt(function(f){_t(f>>>=0,"offset");const S=this[f],A=this[f+7];S!==void 0&&A!==void 0||ht(f,this.length-8);const z=(S<<24)+65536*this[++f]+256*this[++f]+this[++f];return(BigInt(z)<<BigInt(32))+BigInt(this[++f]*16777216+65536*this[++f]+256*this[++f]+A)}),h.prototype.readFloatLE=function(f,S){return f>>>=0,S||N(f,4,this.length),u.read(this,f,!0,23,4)},h.prototype.readFloatBE=function(f,S){return f>>>=0,S||N(f,4,this.length),u.read(this,f,!1,23,4)},h.prototype.readDoubleLE=function(f,S){return f>>>=0,S||N(f,8,this.length),u.read(this,f,!0,52,8)},h.prototype.readDoubleBE=function(f,S){return f>>>=0,S||N(f,8,this.length),u.read(this,f,!1,52,8)},h.prototype.writeUintLE=h.prototype.writeUIntLE=function(f,S,A,z){f=+f,S>>>=0,A>>>=0,z||H(this,f,S,A,Math.pow(2,8*A)-1,0);let R=1,I=0;for(this[S]=255&f;++I<A&&(R*=256);)this[S+I]=f/R&255;return S+A},h.prototype.writeUintBE=h.prototype.writeUIntBE=function(f,S,A,z){f=+f,S>>>=0,A>>>=0,z||H(this,f,S,A,Math.pow(2,8*A)-1,0);let R=A-1,I=1;for(this[S+R]=255&f;--R>=0&&(I*=256);)this[S+R]=f/I&255;return S+A},h.prototype.writeUint8=h.prototype.writeUInt8=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,1,255,0),this[S]=255&f,S+1},h.prototype.writeUint16LE=h.prototype.writeUInt16LE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,2,65535,0),this[S]=255&f,this[S+1]=f>>>8,S+2},h.prototype.writeUint16BE=h.prototype.writeUInt16BE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,2,65535,0),this[S]=f>>>8,this[S+1]=255&f,S+2},h.prototype.writeUint32LE=h.prototype.writeUInt32LE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,4,4294967295,0),this[S+3]=f>>>24,this[S+2]=f>>>16,this[S+1]=f>>>8,this[S]=255&f,S+4},h.prototype.writeUint32BE=h.prototype.writeUInt32BE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,4,4294967295,0),this[S]=f>>>24,this[S+1]=f>>>16,this[S+2]=f>>>8,this[S+3]=255&f,S+4},h.prototype.writeBigUInt64LE=Tt(function(f,S=0){return Y(this,f,S,BigInt(0),BigInt("0xffffffffffffffff"))}),h.prototype.writeBigUInt64BE=Tt(function(f,S=0){return et(this,f,S,BigInt(0),BigInt("0xffffffffffffffff"))}),h.prototype.writeIntLE=function(f,S,A,z){if(f=+f,S>>>=0,!z){const j=Math.pow(2,8*A-1);H(this,f,S,A,j-1,-j)}let R=0,I=1,q=0;for(this[S]=255&f;++R<A&&(I*=256);)f<0&&q===0&&this[S+R-1]!==0&&(q=1),this[S+R]=(f/I>>0)-q&255;return S+A},h.prototype.writeIntBE=function(f,S,A,z){if(f=+f,S>>>=0,!z){const j=Math.pow(2,8*A-1);H(this,f,S,A,j-1,-j)}let R=A-1,I=1,q=0;for(this[S+R]=255&f;--R>=0&&(I*=256);)f<0&&q===0&&this[S+R+1]!==0&&(q=1),this[S+R]=(f/I>>0)-q&255;return S+A},h.prototype.writeInt8=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,1,127,-128),f<0&&(f=255+f+1),this[S]=255&f,S+1},h.prototype.writeInt16LE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,2,32767,-32768),this[S]=255&f,this[S+1]=f>>>8,S+2},h.prototype.writeInt16BE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,2,32767,-32768),this[S]=f>>>8,this[S+1]=255&f,S+2},h.prototype.writeInt32LE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,4,2147483647,-2147483648),this[S]=255&f,this[S+1]=f>>>8,this[S+2]=f>>>16,this[S+3]=f>>>24,S+4},h.prototype.writeInt32BE=function(f,S,A){return f=+f,S>>>=0,A||H(this,f,S,4,2147483647,-2147483648),f<0&&(f=4294967295+f+1),this[S]=f>>>24,this[S+1]=f>>>16,this[S+2]=f>>>8,this[S+3]=255&f,S+4},h.prototype.writeBigInt64LE=Tt(function(f,S=0){return Y(this,f,S,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),h.prototype.writeBigInt64BE=Tt(function(f,S=0){return et(this,f,S,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),h.prototype.writeFloatLE=function(f,S,A){return ct(this,f,S,!0,A)},h.prototype.writeFloatBE=function(f,S,A){return ct(this,f,S,!1,A)},h.prototype.writeDoubleLE=function(f,S,A){return ot(this,f,S,!0,A)},h.prototype.writeDoubleBE=function(f,S,A){return ot(this,f,S,!1,A)},h.prototype.copy=function(f,S,A,z){if(!h.isBuffer(f))throw new TypeError("argument should be a Buffer");if(A||(A=0),z||z===0||(z=this.length),S>=f.length&&(S=f.length),S||(S=0),z>0&&z<A&&(z=A),z===A||f.length===0||this.length===0)return 0;if(S<0)throw new RangeError("targetStart out of bounds");if(A<0||A>=this.length)throw new RangeError("Index out of range");if(z<0)throw new RangeError("sourceEnd out of bounds");z>this.length&&(z=this.length),f.length-S<z-A&&(z=f.length-S+A);const R=z-A;return this===f&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(S,A,z):Uint8Array.prototype.set.call(f,this.subarray(A,z),S),R},h.prototype.fill=function(f,S,A,z){if(typeof f=="string"){if(typeof S=="string"?(z=S,S=0,A=this.length):typeof A=="string"&&(z=A,A=this.length),z!==void 0&&typeof z!="string")throw new TypeError("encoding must be a string");if(typeof z=="string"&&!h.isEncoding(z))throw new TypeError("Unknown encoding: "+z);if(f.length===1){const I=f.charCodeAt(0);(z==="utf8"&&I<128||z==="latin1")&&(f=I)}}else typeof f=="number"?f&=255:typeof f=="boolean"&&(f=Number(f));if(S<0||this.length<S||this.length<A)throw new RangeError("Out of range index");if(A<=S)return this;let R;if(S>>>=0,A=A===void 0?this.length:A>>>0,f||(f=0),typeof f=="number")for(R=S;R<A;++R)this[R]=f;else{const I=h.isBuffer(f)?f:h.from(f,z),q=I.length;if(q===0)throw new TypeError('The value "'+f+'" is invalid for argument "value"');for(R=0;R<A-S;++R)this[R+S]=I[R%q]}return this};const dt={};function It(f,S,A){dt[f]=class extends A{constructor(){super(),Object.defineProperty(this,"message",{value:S.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${f}]`,this.stack,delete this.name}get code(){return f}set code(z){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:z,writable:!0})}toString(){return`${this.name} [${f}]: ${this.message}`}}}function Mt(f){let S="",A=f.length;const z=f[0]==="-"?1:0;for(;A>=z+4;A-=3)S=`_${f.slice(A-3,A)}${S}`;return`${f.slice(0,A)}${S}`}function V(f,S,A,z,R,I){if(f>A||f<S){const q=typeof S=="bigint"?"n":"";let j;throw j=I>3?S===0||S===BigInt(0)?`>= 0${q} and < 2${q} ** ${8*(I+1)}${q}`:`>= -(2${q} ** ${8*(I+1)-1}${q}) and < 2 ** ${8*(I+1)-1}${q}`:`>= ${S}${q} and <= ${A}${q}`,new dt.ERR_OUT_OF_RANGE("value",j,f)}(function(q,j,k){_t(j,"offset"),q[j]!==void 0&&q[j+k]!==void 0||ht(j,q.length-(k+1))})(z,R,I)}function _t(f,S){if(typeof f!="number")throw new dt.ERR_INVALID_ARG_TYPE(S,"number",f)}function ht(f,S,A){throw Math.floor(f)!==f?(_t(f,A),new dt.ERR_OUT_OF_RANGE(A||"offset","an integer",f)):S<0?new dt.ERR_BUFFER_OUT_OF_BOUNDS:new dt.ERR_OUT_OF_RANGE(A||"offset",`>= ${A?1:0} and <= ${S}`,f)}It("ERR_BUFFER_OUT_OF_BOUNDS",function(f){return f?`${f} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),It("ERR_INVALID_ARG_TYPE",function(f,S){return`The "${f}" argument must be of type number. Received type ${typeof S}`},TypeError),It("ERR_OUT_OF_RANGE",function(f,S,A){let z=`The value of "${f}" is out of range.`,R=A;return Number.isInteger(A)&&Math.abs(A)>4294967296?R=Mt(String(A)):typeof A=="bigint"&&(R=String(A),(A>BigInt(2)**BigInt(32)||A<-(BigInt(2)**BigInt(32)))&&(R=Mt(R)),R+="n"),z+=` It must be ${S}. Received ${R}`,z},RangeError);const Q=/[^+/0-9A-Za-z-_]/g;function nt(f,S){let A;S=S||1/0;const z=f.length;let R=null;const I=[];for(let q=0;q<z;++q){if(A=f.charCodeAt(q),A>55295&&A<57344){if(!R){if(A>56319){(S-=3)>-1&&I.push(239,191,189);continue}if(q+1===z){(S-=3)>-1&&I.push(239,191,189);continue}R=A;continue}if(A<56320){(S-=3)>-1&&I.push(239,191,189),R=A;continue}A=65536+(R-55296<<10|A-56320)}else R&&(S-=3)>-1&&I.push(239,191,189);if(R=null,A<128){if((S-=1)<0)break;I.push(A)}else if(A<2048){if((S-=2)<0)break;I.push(A>>6|192,63&A|128)}else if(A<65536){if((S-=3)<0)break;I.push(A>>12|224,A>>6&63|128,63&A|128)}else{if(!(A<1114112))throw new Error("Invalid code point");if((S-=4)<0)break;I.push(A>>18|240,A>>12&63|128,A>>6&63|128,63&A|128)}}return I}function yt(f){return c.toByteArray(function(S){if((S=(S=S.split("=")[0]).trim().replace(Q,"")).length<2)return"";for(;S.length%4!=0;)S+="=";return S}(f))}function lt(f,S,A,z){let R;for(R=0;R<z&&!(R+A>=S.length||R>=f.length);++R)S[R+A]=f[R];return R}function K(f,S){return f instanceof S||f!=null&&f.constructor!=null&&f.constructor.name!=null&&f.constructor.name===S.name}function st(f){return f!=f}const mt=function(){const f="0123456789abcdef",S=new Array(256);for(let A=0;A<16;++A){const z=16*A;for(let R=0;R<16;++R)S[z+R]=f[A]+f[R]}return S}();function Tt(f){return typeof BigInt>"u"?F:f}function F(){throw new Error("BigInt not supported")}},2141:(o,a,l)=>{const c=l(2020),u=l(4694),d=l(6774),p=l(4666),m=l(9032),h=l(4785),g=l(3070),y=l(8112);o.exports={Commented:c,Diagnose:u,Decoder:d,Encoder:p,Simple:m,Tagged:h,Map:g,SharedValueEncoder:y,comment:c.comment,decodeAll:d.decodeAll,decodeFirst:d.decodeFirst,decodeAllSync:d.decodeAllSync,decodeFirstSync:d.decodeFirstSync,diagnose:u.diagnose,encode:p.encode,encodeCanonical:p.encodeCanonical,encodeOne:p.encodeOne,encodeAsync:p.encodeAsync,decode:d.decodeFirstSync,leveldb:{decode:d.decodeFirstSync,encode:p.encode,buffer:!0,name:"cbor"},reset(){p.reset(),h.reset()}}},2020:(o,a,l)=>{const c=l(2830),u=l(9873),d=l(6774),p=l(4202),{MT:m,NUMBYTES:h,SYMS:g}=l(9066),{Buffer:y}=l(8764);function _(v){return v>1?"s":""}class M extends c.Transform{constructor(x={}){const{depth:w=1,max_depth:b=10,no_summary:E=!1,tags:L={},preferWeb:T,encoding:P,...G}=x;super({...G,readableObjectMode:!1,writableObjectMode:!1}),this.depth=w,this.max_depth=b,this.all=new p,L[24]||(L[24]=this._tag_24.bind(this)),this.parser=new d({tags:L,max_depth:b,preferWeb:T,encoding:P}),this.parser.on("value",this._on_value.bind(this)),this.parser.on("start",this._on_start.bind(this)),this.parser.on("start-string",this._on_start_string.bind(this)),this.parser.on("stop",this._on_stop.bind(this)),this.parser.on("more-bytes",this._on_more.bind(this)),this.parser.on("error",this._on_error.bind(this)),E||this.parser.on("data",this._on_data.bind(this)),this.parser.bs.on("read",this._on_read.bind(this))}_tag_24(x){const w=new M({depth:this.depth+1,no_summary:!0});w.on("data",b=>this.push(b)),w.on("error",b=>this.emit("error",b)),w.end(x)}_transform(x,w,b){this.parser.write(x,w,b)}_flush(x){return this.parser._flush(x)}static comment(x,w={},b=null){if(x==null)throw new Error("input required");({options:w,cb:b}=function(X,$){switch(typeof X){case"function":return{options:{},cb:X};case"string":return{options:{encoding:X},cb:$};case"number":return{options:{max_depth:X},cb:$};case"object":return{options:X||{},cb:$};default:throw new TypeError("Unknown option type")}}(w,b));const E=new p,{encoding:L="hex",...T}=w,P=new M(T);let G=null;return typeof b=="function"?(P.on("end",()=>{b(null,E.toString("utf8"))}),P.on("error",b)):G=new Promise((X,$)=>{P.on("end",()=>{X(E.toString("utf8"))}),P.on("error",$)}),P.pipe(E),u.guessEncoding(x,L).pipe(P),G}_on_error(x){this.push("ERROR: "),this.push(x.toString()),this.push(`
`)}_on_read(x){this.all.write(x);const w=x.toString("hex");this.push(new Array(this.depth+1).join("  ")),this.push(w);let b=2*(this.max_depth-this.depth)-w.length;b<1&&(b=1),this.push(new Array(b+1).join(" ")),this.push("-- ")}_on_more(x,w,b,E){let L="";switch(this.depth++,x){case m.POS_INT:L="Positive number,";break;case m.NEG_INT:L="Negative number,";break;case m.ARRAY:L="Array, length";break;case m.MAP:L="Map, count";break;case m.BYTE_STRING:L="Bytes, length";break;case m.UTF8_STRING:L="String, length";break;case m.SIMPLE_FLOAT:L=w===1?"Simple value,":"Float,"}this.push(`${L} next ${w} byte${_(w)}
`)}_on_start_string(x,w,b,E){let L="";switch(this.depth++,x){case m.BYTE_STRING:L=`Bytes, length: ${w}`;break;case m.UTF8_STRING:L=`String, length: ${w.toString()}`}this.push(`${L}
`)}_on_start(x,w,b,E){switch(this.depth++,b){case m.ARRAY:this.push(`[${E}], `);break;case m.MAP:E%2?this.push(`{Val:${Math.floor(E/2)}}, `):this.push(`{Key:${Math.floor(E/2)}}, `)}switch(x){case m.TAG:this.push(`Tag #${w}`),w===24&&this.push(" Encoded CBOR data item");break;case m.ARRAY:w===g.STREAM?this.push("Array (streaming)"):this.push(`Array, ${w} item${_(w)}`);break;case m.MAP:w===g.STREAM?this.push("Map (streaming)"):this.push(`Map, ${w} pair${_(w)}`);break;case m.BYTE_STRING:this.push("Bytes (streaming)");break;case m.UTF8_STRING:this.push("String (streaming)")}this.push(`
`)}_on_stop(x){this.depth--}_on_value(x,w,b,E){if(x!==g.BREAK)switch(w){case m.ARRAY:this.push(`[${b}], `);break;case m.MAP:b%2?this.push(`{Val:${Math.floor(b/2)}}, `):this.push(`{Key:${Math.floor(b/2)}}, `)}const L=u.cborValueToString(x,-1/0);switch(typeof x=="string"||y.isBuffer(x)?(x.length>0&&(this.push(L),this.push(`
`)),this.depth--):(this.push(L),this.push(`
`)),E){case h.ONE:case h.TWO:case h.FOUR:case h.EIGHT:this.depth--}}_on_data(){this.push("0x"),this.push(this.all.read().toString("hex")),this.push(`
`)}}o.exports=M},9066:(o,a)=>{a.MT={POS_INT:0,NEG_INT:1,BYTE_STRING:2,UTF8_STRING:3,ARRAY:4,MAP:5,TAG:6,SIMPLE_FLOAT:7},a.TAG={DATE_STRING:0,DATE_EPOCH:1,POS_BIGINT:2,NEG_BIGINT:3,DECIMAL_FRAC:4,BIGFLOAT:5,BASE64URL_EXPECTED:21,BASE64_EXPECTED:22,BASE16_EXPECTED:23,CBOR:24,URI:32,BASE64URL:33,BASE64:34,REGEXP:35,MIME:36,SET:258},a.NUMBYTES={ZERO:0,ONE:24,TWO:25,FOUR:26,EIGHT:27,INDEFINITE:31},a.SIMPLE={FALSE:20,TRUE:21,NULL:22,UNDEFINED:23},a.SYMS={NULL:Symbol.for("github.com/hildjj/node-cbor/null"),UNDEFINED:Symbol.for("github.com/hildjj/node-cbor/undef"),PARENT:Symbol.for("github.com/hildjj/node-cbor/parent"),BREAK:Symbol.for("github.com/hildjj/node-cbor/break"),STREAM:Symbol.for("github.com/hildjj/node-cbor/stream")},a.SHIFT32=4294967296,a.BI={MINUS_ONE:BigInt(-1),NEG_MAX:BigInt(-1)-BigInt(Number.MAX_SAFE_INTEGER),MAXINT32:BigInt("0xffffffff"),MAXINT64:BigInt("0xffffffffffffffff"),SHIFT32:BigInt(a.SHIFT32)}},6774:(o,a,l)=>{const c=l(71),u=l(4785),d=l(9032),p=l(9873),m=l(4202),h=(l(2830),l(9066)),{MT:g,NUMBYTES:y,SYMS:_,BI:M}=h,{Buffer:v}=l(8764),x=Symbol("count"),w=Symbol("major type"),b=Symbol("error"),E=Symbol("not found");function L($,O,B){const C=[];return C[x]=B,C[_.PARENT]=$,C[w]=O,C}function T($,O){const B=new m;return B[x]=-1,B[_.PARENT]=$,B[w]=O,B}class P extends Error{constructor(O,B){super(`Unexpected data: 0x${O.toString(16)}`),this.name="UnexpectedDataError",this.byte=O,this.value=B}}function G($,O){switch(typeof $){case"function":return{options:{},cb:$};case"string":return{options:{encoding:$},cb:O};case"object":return{options:$||{},cb:O};default:throw new TypeError("Unknown option type")}}class X extends c{constructor(O={}){const{tags:B={},max_depth:C=-1,preferWeb:Z=!1,required:D=!1,encoding:tt="hex",extendedResults:rt=!1,preventDuplicateKeys:U=!1,...N}=O;super({defaultEncoding:tt,...N}),this.running=!0,this.max_depth=C,this.tags=B,this.preferWeb=Z,this.extendedResults=rt,this.required=D,this.preventDuplicateKeys=U,rt&&(this.bs.on("read",this._onRead.bind(this)),this.valueBytes=new m)}static nullcheck(O){switch(O){case _.NULL:return null;case _.UNDEFINED:return;case E:throw new Error("Value not found");default:return O}}static decodeFirstSync(O,B={}){if(O==null)throw new TypeError("input required");({options:B}=G(B));const{encoding:C="hex",...Z}=B,D=new X(Z),tt=p.guessEncoding(O,C),rt=D._parse();let U=rt.next();for(;!U.done;){const H=tt.read(U.value);if(H==null||H.length!==U.value)throw new Error("Insufficient data");D.extendedResults&&D.valueBytes.write(H),U=rt.next(H)}let N=null;if(D.extendedResults)N=U.value,N.unused=tt.read();else if(N=X.nullcheck(U.value),tt.length>0){const H=tt.read(1);throw tt.unshift(H),new P(H[0],N)}return N}static decodeAllSync(O,B={}){if(O==null)throw new TypeError("input required");({options:B}=G(B));const{encoding:C="hex",...Z}=B,D=new X(Z),tt=p.guessEncoding(O,C),rt=[];for(;tt.length>0;){const U=D._parse();let N=U.next();for(;!N.done;){const H=tt.read(N.value);if(H==null||H.length!==N.value)throw new Error("Insufficient data");D.extendedResults&&D.valueBytes.write(H),N=U.next(H)}rt.push(X.nullcheck(N.value))}return rt}static decodeFirst(O,B={},C=null){if(O==null)throw new TypeError("input required");({options:B,cb:C}=G(B,C));const{encoding:Z="hex",required:D=!1,...tt}=B,rt=new X(tt);let U=E;const N=p.guessEncoding(O,Z),H=new Promise((Y,et)=>{rt.on("data",ut=>{U=X.nullcheck(ut),rt.close()}),rt.once("error",ut=>rt.extendedResults&&ut instanceof P?(U.unused=rt.bs.slice(),Y(U)):(U!==E&&(ut.value=U),U=b,rt.close(),et(ut))),rt.once("end",()=>{switch(U){case E:return D?et(new Error("No CBOR found")):Y(U);case b:return;default:return Y(U)}})});return typeof C=="function"&&H.then(Y=>C(null,Y),C),N.pipe(rt),H}static decodeAll(O,B={},C=null){if(O==null)throw new TypeError("input required");({options:B,cb:C}=G(B,C));const{encoding:Z="hex",...D}=B,tt=new X(D),rt=[];tt.on("data",N=>rt.push(X.nullcheck(N)));const U=new Promise((N,H)=>{tt.on("error",H),tt.on("end",()=>N(rt))});return typeof C=="function"&&U.then(N=>C(void 0,N),N=>C(N,void 0)),p.guessEncoding(O,Z).pipe(tt),U}close(){this.running=!1,this.__fresh=!0}_onRead(O){this.valueBytes.write(O)}*_parse(){let O=null,B=0,C=null;for(;;){if(this.max_depth>=0&&B>this.max_depth)throw new Error(`Maximum depth ${this.max_depth} exceeded`);const[Z]=yield 1;if(!this.running)throw this.bs.unshift(v.from([Z])),new P(Z);const D=Z>>5,tt=31&Z,rt=O==null?void 0:O[w],U=O==null?void 0:O.length;switch(tt){case y.ONE:this.emit("more-bytes",D,1,rt,U),[C]=yield 1;break;case y.TWO:case y.FOUR:case y.EIGHT:{const H=1<<tt-24;this.emit("more-bytes",D,H,rt,U);const Y=yield H;C=D===g.SIMPLE_FLOAT?Y:p.parseCBORint(tt,Y);break}case 28:case 29:case 30:throw this.running=!1,new Error(`Additional info not implemented: ${tt}`);case y.INDEFINITE:switch(D){case g.POS_INT:case g.NEG_INT:case g.TAG:throw new Error(`Invalid indefinite encoding for MT ${D}`)}C=-1;break;default:C=tt}switch(D){case g.POS_INT:break;case g.NEG_INT:C=C===Number.MAX_SAFE_INTEGER?M.NEG_MAX:typeof C=="bigint"?M.MINUS_ONE-C:-1-C;break;case g.BYTE_STRING:case g.UTF8_STRING:switch(C){case 0:this.emit("start-string",D,C,rt,U),C=D===g.UTF8_STRING?"":this.preferWeb?new Uint8Array(0):v.allocUnsafe(0);break;case-1:this.emit("start",D,_.STREAM,rt,U),O=T(O,D),B++;continue;default:this.emit("start-string",D,C,rt,U),C=yield C,D===g.UTF8_STRING?C=p.utf8(C):this.preferWeb&&(C=new Uint8Array(C.buffer,C.byteOffset,C.length))}break;case g.ARRAY:case g.MAP:switch(C){case 0:C=D===g.MAP?{}:[];break;case-1:this.emit("start",D,_.STREAM,rt,U),O=L(O,D,-1),B++;continue;default:this.emit("start",D,C,rt,U),O=L(O,D,C*(D-3)),B++;continue}break;case g.TAG:this.emit("start",D,C,rt,U),O=L(O,D,1),O.push(C),B++;continue;case g.SIMPLE_FLOAT:if(typeof C=="number"){if(tt===y.ONE&&C<32)throw new Error(`Invalid two-byte encoding of simple value ${C}`);const H=O!=null;C=d.decode(C,H,H&&O[x]<0)}else C=p.parseCBORfloat(C)}this.emit("value",C,rt,U,tt);let N=!1;for(;O!=null;){if(C===_.BREAK)O[x]=1;else if(Array.isArray(O))O.push(C);else{const Y=O[w];if(Y!=null&&Y!==D)throw this.running=!1,new Error("Invalid major type in indefinite encoding");O.write(C)}if(--O[x]!=0){N=!0;break}if(--B,delete O[x],Array.isArray(O))switch(O[w]){case g.ARRAY:C=O;break;case g.MAP:{let Y=!0;if(O.length%2!=0)throw new Error(`Invalid map length: ${O.length}`);for(let et=0,ut=O.length;et<ut;et+=2)if(typeof O[et]!="string"||O[et]==="__proto__"){Y=!1;break}if(Y){C={};for(let et=0,ut=O.length;et<ut;et+=2){if(this.preventDuplicateKeys&&Object.prototype.hasOwnProperty.call(C,O[et]))throw new Error("Duplicate keys in a map");C[O[et]]=O[et+1]}}else{C=new Map;for(let et=0,ut=O.length;et<ut;et+=2){if(this.preventDuplicateKeys&&C.has(O[et]))throw new Error("Duplicate keys in a map");C.set(O[et],O[et+1])}}break}case g.TAG:C=new u(O[0],O[1]).convert(this.tags)}else if(O instanceof m)switch(O[w]){case g.BYTE_STRING:C=O.slice(),this.preferWeb&&(C=new Uint8Array(C.buffer,C.byteOffset,C.length));break;case g.UTF8_STRING:C=O.toString("utf-8")}this.emit("stop",O[w]);const H=O;O=O[_.PARENT],delete H[_.PARENT],delete H[w]}if(!N){if(this.extendedResults){const H=this.valueBytes.slice(),Y={value:X.nullcheck(C),bytes:H,length:H.length};return this.valueBytes=new m,Y}return C}}}}X.NOT_FOUND=E,o.exports=X},4694:(o,a,l)=>{const c=l(2830),u=l(6774),d=l(9873),p=l(4202),{MT:m,SYMS:h}=l(9066);class g extends c.Transform{constructor(_={}){const{separator:M=`
`,stream_errors:v=!1,tags:x,max_depth:w,preferWeb:b,encoding:E,...L}=_;super({...L,readableObjectMode:!1,writableObjectMode:!1}),this.float_bytes=-1,this.separator=M,this.stream_errors=v,this.parser=new u({tags:x,max_depth:w,preferWeb:b,encoding:E}),this.parser.on("more-bytes",this._on_more.bind(this)),this.parser.on("value",this._on_value.bind(this)),this.parser.on("start",this._on_start.bind(this)),this.parser.on("stop",this._on_stop.bind(this)),this.parser.on("data",this._on_data.bind(this)),this.parser.on("error",this._on_error.bind(this))}_transform(_,M,v){this.parser.write(_,M,v)}_flush(_){this.parser._flush(M=>this.stream_errors?(M&&this._on_error(M),_()):_(M))}static diagnose(_,M={},v=null){if(_==null)throw new TypeError("input required");({options:M,cb:v}=function(T,P){switch(typeof T){case"function":return{options:{},cb:T};case"string":return{options:{encoding:T},cb:P};case"object":return{options:T||{},cb:P};default:throw new TypeError("Unknown option type")}}(M,v));const{encoding:x="hex",...w}=M,b=new p,E=new g(w);let L=null;return typeof v=="function"?(E.on("end",()=>v(null,b.toString("utf8"))),E.on("error",v)):L=new Promise((T,P)=>{E.on("end",()=>T(b.toString("utf8"))),E.on("error",P)}),E.pipe(b),d.guessEncoding(_,x).pipe(E),L}_on_error(_){this.stream_errors?this.push(_.toString()):this.emit("error",_)}_on_more(_,M,v,x){_===m.SIMPLE_FLOAT&&(this.float_bytes={2:1,4:2,8:3}[M])}_fore(_,M){switch(_){case m.BYTE_STRING:case m.UTF8_STRING:case m.ARRAY:M>0&&this.push(", ");break;case m.MAP:M>0&&(M%2?this.push(": "):this.push(", "))}}_on_value(_,M,v){if(_===h.BREAK)return;this._fore(M,v);const x=this.float_bytes;this.float_bytes=-1,this.push(d.cborValueToString(_,x))}_on_start(_,M,v,x){switch(this._fore(v,x),_){case m.TAG:this.push(`${M}(`);break;case m.ARRAY:this.push("[");break;case m.MAP:this.push("{");break;case m.BYTE_STRING:case m.UTF8_STRING:this.push("(")}M===h.STREAM&&this.push("_ ")}_on_stop(_){switch(_){case m.TAG:this.push(")");break;case m.ARRAY:this.push("]");break;case m.MAP:this.push("}");break;case m.BYTE_STRING:case m.UTF8_STRING:this.push(")")}}_on_data(){this.push(this.separator)}}o.exports=g},4666:(o,a,l)=>{const c=l(2830),u=l(4202),d=l(9873),p=l(9066),{MT:m,NUMBYTES:h,SHIFT32:g,SIMPLE:y,SYMS:_,TAG:M,BI:v}=p,{Buffer:x}=l(8764),w=m.SIMPLE_FLOAT<<5|h.TWO,b=m.SIMPLE_FLOAT<<5|h.FOUR,E=m.SIMPLE_FLOAT<<5|h.EIGHT,L=m.SIMPLE_FLOAT<<5|y.TRUE,T=m.SIMPLE_FLOAT<<5|y.FALSE,P=m.SIMPLE_FLOAT<<5|y.UNDEFINED,G=m.SIMPLE_FLOAT<<5|y.NULL,X=x.from([255]),$=x.from("f97e00","hex"),O=x.from("f9fc00","hex"),B=x.from("f97c00","hex"),C=x.from("f98000","hex"),Z={};let D={};class tt extends c.Transform{constructor(U={}){const{canonical:N=!1,encodeUndefined:H,disallowUndefinedKeys:Y=!1,dateType:et="number",collapseBigIntegers:ut=!1,detectLoops:ct=!1,omitUndefinedProperties:ot=!1,genTypes:dt=[],...It}=U;if(super({...It,readableObjectMode:!1,writableObjectMode:!0}),this.canonical=N,this.encodeUndefined=H,this.disallowUndefinedKeys=Y,this.dateType=function(Mt){if(!Mt)return"number";switch(Mt.toLowerCase()){case"number":return"number";case"float":return"float";case"int":case"integer":return"int";case"string":return"string"}throw new TypeError(`dateType invalid, got "${Mt}"`)}(et),this.collapseBigIntegers=!!this.canonical||ut,this.detectLoops=void 0,typeof ct=="boolean")ct&&(this.detectLoops=new WeakSet);else{if(!(ct instanceof WeakSet))throw new TypeError("detectLoops must be boolean or WeakSet");this.detectLoops=ct}if(this.omitUndefinedProperties=ot,this.semanticTypes={...tt.SEMANTIC_TYPES},Array.isArray(dt))for(let Mt=0,V=dt.length;Mt<V;Mt+=2)this.addSemanticType(dt[Mt],dt[Mt+1]);else for(const[Mt,V]of Object.entries(dt))this.addSemanticType(Mt,V)}_transform(U,N,H){H(this.pushAny(U)===!1?new Error("Push Error"):void 0)}_flush(U){U()}_pushUInt8(U){const N=x.allocUnsafe(1);return N.writeUInt8(U,0),this.push(N)}_pushUInt16BE(U){const N=x.allocUnsafe(2);return N.writeUInt16BE(U,0),this.push(N)}_pushUInt32BE(U){const N=x.allocUnsafe(4);return N.writeUInt32BE(U,0),this.push(N)}_pushFloatBE(U){const N=x.allocUnsafe(4);return N.writeFloatBE(U,0),this.push(N)}_pushDoubleBE(U){const N=x.allocUnsafe(8);return N.writeDoubleBE(U,0),this.push(N)}_pushNaN(){return this.push($)}_pushInfinity(U){const N=U<0?O:B;return this.push(N)}_pushFloat(U){if(this.canonical){const N=x.allocUnsafe(2);if(d.writeHalf(N,U))return this._pushUInt8(w)&&this.push(N)}return Math.fround(U)===U?this._pushUInt8(b)&&this._pushFloatBE(U):this._pushUInt8(E)&&this._pushDoubleBE(U)}_pushInt(U,N,H){const Y=N<<5;if(U<24)return this._pushUInt8(Y|U);if(U<=255)return this._pushUInt8(Y|h.ONE)&&this._pushUInt8(U);if(U<=65535)return this._pushUInt8(Y|h.TWO)&&this._pushUInt16BE(U);if(U<=4294967295)return this._pushUInt8(Y|h.FOUR)&&this._pushUInt32BE(U);let et=Number.MAX_SAFE_INTEGER;return N===m.NEG_INT&&et--,U<=et?this._pushUInt8(Y|h.EIGHT)&&this._pushUInt32BE(Math.floor(U/g))&&this._pushUInt32BE(U%g):N===m.NEG_INT?this._pushFloat(H):this._pushFloat(U)}_pushIntNum(U){return Object.is(U,-0)?this.push(C):U<0?this._pushInt(-U-1,m.NEG_INT,U):this._pushInt(U,m.POS_INT)}_pushNumber(U){return isNaN(U)?this._pushNaN():isFinite(U)?Math.round(U)===U?this._pushIntNum(U):this._pushFloat(U):this._pushInfinity(U)}_pushString(U){const N=x.byteLength(U,"utf8");return this._pushInt(N,m.UTF8_STRING)&&this.push(U,"utf8")}_pushBoolean(U){return this._pushUInt8(U?L:T)}_pushUndefined(U){switch(typeof this.encodeUndefined){case"undefined":return this._pushUInt8(P);case"function":return this.pushAny(this.encodeUndefined(U));case"object":{const N=d.bufferishToBuffer(this.encodeUndefined);if(N)return this.push(N)}}return this.pushAny(this.encodeUndefined)}_pushNull(U){return this._pushUInt8(G)}_pushTag(U){return this._pushInt(U,m.TAG)}_pushJSBigint(U){let N=m.POS_INT,H=M.POS_BIGINT;if(U<0&&(U=-U+v.MINUS_ONE,N=m.NEG_INT,H=M.NEG_BIGINT),this.collapseBigIntegers&&U<=v.MAXINT64)return U<=4294967295?this._pushInt(Number(U),N):this._pushUInt8(N<<5|h.EIGHT)&&this._pushUInt32BE(Number(U/v.SHIFT32))&&this._pushUInt32BE(Number(U%v.SHIFT32));let Y=U.toString(16);Y.length%2&&(Y=`0${Y}`);const et=x.from(Y,"hex");return this._pushTag(H)&&tt._pushBuffer(this,et)}_pushObject(U,N){if(!U)return this._pushNull(U);if(!(N={indefinite:!1,skipTypes:!1,...N}).indefinite&&this.detectLoops){if(this.detectLoops.has(U))throw new Error(`Loop detected while CBOR encoding.
Call removeLoopDetectors before resuming.`);this.detectLoops.add(U)}if(!N.skipTypes){const ut=U.encodeCBOR;if(typeof ut=="function")return ut.call(U,this);const ct=this.semanticTypes[U.constructor.name];if(ct)return ct.call(U,this,U)}const H=Object.keys(U).filter(ut=>{const ct=typeof U[ut];return ct!=="function"&&(!this.omitUndefinedProperties||ct!=="undefined")}),Y={};if(this.canonical&&H.sort((ut,ct)=>{const ot=Y[ut]||(Y[ut]=tt.encode(ut)),dt=Y[ct]||(Y[ct]=tt.encode(ct));return ot.compare(dt)}),N.indefinite){if(!this._pushUInt8(m.MAP<<5|h.INDEFINITE))return!1}else if(!this._pushInt(H.length,m.MAP))return!1;let et=null;for(let ut=0,ct=H.length;ut<ct;ut++){const ot=H[ut];if(this.canonical&&(et=Y[ot])){if(!this.push(et))return!1}else if(!this._pushString(ot))return!1;if(!this.pushAny(U[ot]))return!1}if(N.indefinite){if(!this.push(X))return!1}else this.detectLoops&&this.detectLoops.delete(U);return!0}_encodeAll(U){const N=new u({highWaterMark:this.readableHighWaterMark});this.pipe(N);for(const H of U)this.pushAny(H);return this.end(),N.read()}addSemanticType(U,N){const H=typeof U=="string"?U:U.name,Y=this.semanticTypes[H];if(N){if(typeof N!="function")throw new TypeError("fun must be of type function");this.semanticTypes[H]=N}else Y&&delete this.semanticTypes[H];return Y}pushAny(U){switch(typeof U){case"number":return this._pushNumber(U);case"bigint":return this._pushJSBigint(U);case"string":return this._pushString(U);case"boolean":return this._pushBoolean(U);case"undefined":return this._pushUndefined(U);case"object":return this._pushObject(U);case"symbol":switch(U){case _.NULL:return this._pushNull(null);case _.UNDEFINED:return this._pushUndefined(void 0);default:throw new TypeError(`Unknown symbol: ${U.toString()}`)}default:throw new TypeError(`Unknown type: ${typeof U}, ${typeof U.toString=="function"?U.toString():""}`)}}static pushArray(U,N,H){H={indefinite:!1,...H};const Y=N.length;if(H.indefinite){if(!U._pushUInt8(m.ARRAY<<5|h.INDEFINITE))return!1}else if(!U._pushInt(Y,m.ARRAY))return!1;for(let et=0;et<Y;et++)if(!U.pushAny(N[et]))return!1;return!(H.indefinite&&!U.push(X))}removeLoopDetectors(){return!!this.detectLoops&&(this.detectLoops=new WeakSet,!0)}static _pushDate(U,N){switch(U.dateType){case"string":return U._pushTag(M.DATE_STRING)&&U._pushString(N.toISOString());case"int":return U._pushTag(M.DATE_EPOCH)&&U._pushIntNum(Math.round(N.getTime()/1e3));case"float":return U._pushTag(M.DATE_EPOCH)&&U._pushFloat(N.getTime()/1e3);default:return U._pushTag(M.DATE_EPOCH)&&U.pushAny(N.getTime()/1e3)}}static _pushBuffer(U,N){return U._pushInt(N.length,m.BYTE_STRING)&&U.push(N)}static _pushNoFilter(U,N){return tt._pushBuffer(U,N.slice())}static _pushRegexp(U,N){return U._pushTag(M.REGEXP)&&U.pushAny(N.source)}static _pushSet(U,N){if(!U._pushTag(M.SET)||!U._pushInt(N.size,m.ARRAY))return!1;for(const H of N)if(!U.pushAny(H))return!1;return!0}static _pushURL(U,N){return U._pushTag(M.URI)&&U.pushAny(N.toString())}static _pushBoxed(U,N){return U.pushAny(N.valueOf())}static _pushMap(U,N,H){H={indefinite:!1,...H};let Y=[...N.entries()];if(U.omitUndefinedProperties&&(Y=Y.filter(([et,ut])=>ut!==void 0)),H.indefinite){if(!U._pushUInt8(m.MAP<<5|h.INDEFINITE))return!1}else if(!U._pushInt(Y.length,m.MAP))return!1;if(U.canonical){const et=new tt({genTypes:U.semanticTypes,canonical:U.canonical,detectLoops:!!U.detectLoops,dateType:U.dateType,disallowUndefinedKeys:U.disallowUndefinedKeys,collapseBigIntegers:U.collapseBigIntegers}),ut=new u({highWaterMark:U.readableHighWaterMark});et.pipe(ut),Y.sort(([ct],[ot])=>{et.pushAny(ct);const dt=ut.read();et.pushAny(ot);const It=ut.read();return dt.compare(It)});for(const[ct,ot]of Y){if(U.disallowUndefinedKeys&&ct===void 0)throw new Error("Invalid Map key: undefined");if(!U.pushAny(ct)||!U.pushAny(ot))return!1}}else for(const[et,ut]of Y){if(U.disallowUndefinedKeys&&et===void 0)throw new Error("Invalid Map key: undefined");if(!U.pushAny(et)||!U.pushAny(ut))return!1}return!(H.indefinite&&!U.push(X))}static _pushTypedArray(U,N){let H=64,Y=N.BYTES_PER_ELEMENT;const{name:et}=N.constructor;return et.startsWith("Float")?(H|=16,Y/=2):et.includes("U")||(H|=8),(et.includes("Clamped")||Y!==1&&!d.isBigEndian())&&(H|=4),H|={1:0,2:1,4:2,8:3}[Y],!!U._pushTag(H)&&tt._pushBuffer(U,x.from(N.buffer,N.byteOffset,N.byteLength))}static _pushArrayBuffer(U,N){return tt._pushBuffer(U,x.from(N))}static encodeIndefinite(U,N,H={}){if(N==null){if(this==null)throw new Error("No object to encode");N=this}const{chunkSize:Y=4096}=H;let et=!0;const ut=typeof N;let ct=null;if(ut==="string"){et=et&&U._pushUInt8(m.UTF8_STRING<<5|h.INDEFINITE);let ot=0;for(;ot<N.length;){const dt=ot+Y;et=et&&U._pushString(N.slice(ot,dt)),ot=dt}et=et&&U.push(X)}else if(ct=d.bufferishToBuffer(N)){et=et&&U._pushUInt8(m.BYTE_STRING<<5|h.INDEFINITE);let ot=0;for(;ot<ct.length;){const dt=ot+Y;et=et&&tt._pushBuffer(U,ct.slice(ot,dt)),ot=dt}et=et&&U.push(X)}else if(Array.isArray(N))et=et&&tt.pushArray(U,N,{indefinite:!0});else if(N instanceof Map)et=et&&tt._pushMap(U,N,{indefinite:!0});else{if(ut!=="object")throw new Error("Invalid indefinite encoding");et=et&&U._pushObject(N,{indefinite:!0,skipTypes:!0})}return et}static encode(...U){return new tt()._encodeAll(U)}static encodeCanonical(...U){return new tt({canonical:!0})._encodeAll(U)}static encodeOne(U,N){return new tt(N)._encodeAll([U])}static encodeAsync(U,N){return new Promise((H,Y)=>{const et=[],ut=new tt(N);ut.on("data",ct=>et.push(ct)),ut.on("error",Y),ut.on("finish",()=>H(x.concat(et))),ut.pushAny(U),ut.end()})}static get SEMANTIC_TYPES(){return D}static set SEMANTIC_TYPES(U){D=U}static reset(){tt.SEMANTIC_TYPES={...Z}}}Object.assign(Z,{Array:tt.pushArray,Date:tt._pushDate,Buffer:tt._pushBuffer,[x.name]:tt._pushBuffer,Map:tt._pushMap,NoFilter:tt._pushNoFilter,[u.name]:tt._pushNoFilter,RegExp:tt._pushRegexp,Set:tt._pushSet,ArrayBuffer:tt._pushArrayBuffer,Uint8ClampedArray:tt._pushTypedArray,Uint8Array:tt._pushTypedArray,Uint16Array:tt._pushTypedArray,Uint32Array:tt._pushTypedArray,Int8Array:tt._pushTypedArray,Int16Array:tt._pushTypedArray,Int32Array:tt._pushTypedArray,Float32Array:tt._pushTypedArray,Float64Array:tt._pushTypedArray,URL:tt._pushURL,Boolean:tt._pushBoxed,Number:tt._pushBoxed,String:tt._pushBoxed}),typeof BigUint64Array<"u"&&(Z[BigUint64Array.name]=tt._pushTypedArray),typeof BigInt64Array<"u"&&(Z[BigInt64Array.name]=tt._pushTypedArray),tt.reset(),o.exports=tt},3070:(o,a,l)=>{const{Buffer:c}=l(8764),u=l(4666),d=l(6774),{MT:p}=l(9066);class m extends Map{constructor(g){super(g)}static _encode(g){return u.encodeCanonical(g).toString("base64")}static _decode(g){return d.decodeFirstSync(g,"base64")}get(g){return super.get(m._encode(g))}set(g,y){return super.set(m._encode(g),y)}delete(g){return super.delete(m._encode(g))}has(g){return super.has(m._encode(g))}*keys(){for(const g of super.keys())yield m._decode(g)}*entries(){for(const g of super.entries())yield[m._decode(g[0]),g[1]]}[Symbol.iterator](){return this.entries()}forEach(g,y){if(typeof g!="function")throw new TypeError("Must be function");for(const _ of super.entries())g.call(this,_[1],m._decode(_[0]),this)}encodeCBOR(g){if(!g._pushInt(this.size,p.MAP))return!1;if(g.canonical){const y=Array.from(super.entries()).map(_=>[c.from(_[0],"base64"),_[1]]);y.sort((_,M)=>_[0].compare(M[0]));for(const _ of y)if(!g.push(_[0])||!g.pushAny(_[1]))return!1}else for(const y of super.entries())if(!g.push(c.from(y[0],"base64"))||!g.pushAny(y[1]))return!1;return!0}}o.exports=m},1226:o=>{class a{constructor(){this.clear()}clear(){this.map=new WeakMap,this.count=0,this.recording=!0}stop(){this.recording=!1}check(c){const u=this.map.get(c);if(u)return u.length>1?u[0]||this.recording?u[1]:(u[0]=!0,a.FIRST):this.recording?(u.push(this.count++),u[1]):a.NEVER;if(!this.recording)throw new Error("New object detected when not recording");return this.map.set(c,[!1]),a.NEVER}}a.NEVER=-1,a.FIRST=-2,o.exports=a},8112:(o,a,l)=>{const c=l(4666),u=l(1226),{Buffer:d}=l(8764);class p extends c{constructor(h){super(h),this.valueSharing=new u}_pushObject(h,g){if(h!==null){const y=this.valueSharing.check(h);switch(y){case u.FIRST:this._pushTag(28);break;case u.NEVER:break;default:return this._pushTag(29)&&this._pushIntNum(y)}}return super._pushObject(h,g)}stopRecording(){this.valueSharing.stop()}clearRecording(){this.valueSharing.clear()}static encode(...h){const g=new p;g.on("data",()=>{});for(const y of h)g.pushAny(y);return g.stopRecording(),g.removeAllListeners("data"),g._encodeAll(h)}static encodeCanonical(...h){throw new Error("Cannot encode canonically in a SharedValueEncoder, which serializes objects multiple times.")}static encodeOne(h,g){const y=new p(g);return y.on("data",()=>{}),y.pushAny(h),y.stopRecording(),y.removeAllListeners("data"),y._encodeAll([h])}static encodeAsync(h,g){return new Promise((y,_)=>{const M=[],v=new p(g);v.on("data",()=>{}),v.on("error",_),v.on("finish",()=>y(d.concat(M))),v.pushAny(h),v.stopRecording(),v.removeAllListeners("data"),v.on("data",x=>M.push(x)),v.pushAny(h),v.end()})}}o.exports=p},9032:(o,a,l)=>{const{MT:c,SIMPLE:u,SYMS:d}=l(9066);class p{constructor(h){if(typeof h!="number")throw new Error("Invalid Simple type: "+typeof h);if(h<0||h>255||(0|h)!==h)throw new Error(`value must be a small positive integer: ${h}`);this.value=h}toString(){return`simple(${this.value})`}[Symbol.for("nodejs.util.inspect.custom")](h,g){return`simple(${this.value})`}encodeCBOR(h){return h._pushInt(this.value,c.SIMPLE_FLOAT)}static isSimple(h){return h instanceof p}static decode(h,g=!0,y=!1){switch(h){case u.FALSE:return!1;case u.TRUE:return!0;case u.NULL:return g?null:d.NULL;case u.UNDEFINED:return g?void 0:d.UNDEFINED;case-1:if(!g||!y)throw new Error("Invalid BREAK");return d.BREAK;default:return new p(h)}}}o.exports=p},4785:(o,a,l)=>{const c=l(9066),u=l(9873),d=Symbol("INTERNAL_JSON");function p(w,b){if(u.isBufferish(w))w.toJSON=b;else if(Array.isArray(w))for(const E of w)p(E,b);else if(w&&typeof w=="object"&&(!(w instanceof x)||w.tag<21||w.tag>23))for(const E of Object.values(w))p(E,b)}function m(){return u.base64(this)}function h(){return u.base64url(this)}function g(){return this.toString("hex")}const y={0:w=>new Date(w),1:w=>new Date(1e3*w),2:w=>u.bufferToBigInt(w),3:w=>c.BI.MINUS_ONE-u.bufferToBigInt(w),21:(w,b)=>(u.isBufferish(w)?b[d]=h:p(w,h),b),22:(w,b)=>(u.isBufferish(w)?b[d]=m:p(w,m),b),23:(w,b)=>(u.isBufferish(w)?b[d]=g:p(w,g),b),32:w=>new URL(w),33:(w,b)=>{if(!w.match(/^[a-zA-Z0-9_-]+$/))throw new Error("Invalid base64url characters");const E=w.length%4;if(E===1)throw new Error("Invalid base64url length");if(E===2){if("AQgw".indexOf(w[w.length-1])===-1)throw new Error("Invalid base64 padding")}else if(E===3&&"AEIMQUYcgkosw048".indexOf(w[w.length-1])===-1)throw new Error("Invalid base64 padding");return b},34:(w,b)=>{const E=w.match(/^[a-zA-Z0-9+/]+(?<padding>={0,2})$/);if(!E)throw new Error("Invalid base64 characters");if(w.length%4!=0)throw new Error("Invalid base64 length");if(E.groups.padding==="="){if("AQgw".indexOf(w[w.length-2])===-1)throw new Error("Invalid base64 padding")}else if(E.groups.padding==="=="&&"AEIMQUYcgkosw048".indexOf(w[w.length-3])===-1)throw new Error("Invalid base64 padding");return b},35:w=>new RegExp(w),258:w=>new Set(w)},_={64:Uint8Array,65:Uint16Array,66:Uint32Array,68:Uint8ClampedArray,69:Uint16Array,70:Uint32Array,72:Int8Array,73:Int16Array,74:Int32Array,77:Int16Array,78:Int32Array,81:Float32Array,82:Float64Array,85:Float32Array,86:Float64Array};function M(w,b){if(!u.isBufferish(w))throw new TypeError("val not a buffer");const{tag:E}=b,L=_[E];if(!L)throw new Error(`Invalid typed array tag: ${E}`);const T=2**(((16&E)>>4)+(3&E));return!(4&E)!==u.isBigEndian()&&T>1&&function(P,G,X,$){const O=new DataView(P),[B,C]={2:[O.getUint16,O.setUint16],4:[O.getUint32,O.setUint32],8:[O.getBigUint64,O.setBigUint64]}[G],Z=X+$;for(let D=X;D<Z;D+=G)C.call(O,D,B.call(O,D,!0))}(w.buffer,T,w.byteOffset,w.byteLength),new L(w.buffer.slice(w.byteOffset,w.byteOffset+w.byteLength))}typeof BigUint64Array<"u"&&(_[67]=BigUint64Array,_[71]=BigUint64Array),typeof BigInt64Array<"u"&&(_[75]=BigInt64Array,_[79]=BigInt64Array);for(const w of Object.keys(_))y[w]=M;let v={};class x{constructor(b,E,L){if(this.tag=b,this.value=E,this.err=L,typeof this.tag!="number")throw new Error(`Invalid tag type (${typeof this.tag})`);if(this.tag<0||(0|this.tag)!==this.tag)throw new Error(`Tag must be a positive integer: ${this.tag}`)}toJSON(){if(this[d])return this[d].call(this.value);const b={tag:this.tag,value:this.value};return this.err&&(b.err=this.err),b}toString(){return`${this.tag}(${JSON.stringify(this.value)})`}encodeCBOR(b){return b._pushTag(this.tag),b.pushAny(this.value)}convert(b){let E=b==null?void 0:b[this.tag];if(E===null)return this;if(typeof E!="function"&&(E=x.TAGS[this.tag],typeof E!="function"))return this;try{return E.call(this,this.value,this)}catch(L){return L&&L.message&&L.message.length>0?this.err=L.message:this.err=L,this}}static get TAGS(){return v}static set TAGS(b){v=b}static reset(){x.TAGS={...y}}}x.INTERNAL_JSON=d,x.reset(),o.exports=x},9873:(o,a,l)=>{const{Buffer:c}=l(8764),u=l(4202),d=l(2830),p=l(9066),{NUMBYTES:m,SHIFT32:h,BI:g,SYMS:y}=p,_=new TextDecoder("utf8",{fatal:!0,ignoreBOM:!0});a.utf8=v=>_.decode(v),a.utf8.checksUTF8=!0,a.isBufferish=function(v){return v&&typeof v=="object"&&(c.isBuffer(v)||v instanceof Uint8Array||v instanceof Uint8ClampedArray||v instanceof ArrayBuffer||v instanceof DataView)},a.bufferishToBuffer=function(v){return c.isBuffer(v)?v:ArrayBuffer.isView(v)?c.from(v.buffer,v.byteOffset,v.byteLength):v instanceof ArrayBuffer?c.from(v):null},a.parseCBORint=function(v,x){switch(v){case m.ONE:return x.readUInt8(0);case m.TWO:return x.readUInt16BE(0);case m.FOUR:return x.readUInt32BE(0);case m.EIGHT:{const w=x.readUInt32BE(0),b=x.readUInt32BE(4);return w>2097151?BigInt(w)*g.SHIFT32+BigInt(b):w*h+b}default:throw new Error(`Invalid additional info for int: ${v}`)}},a.writeHalf=function(v,x){const w=c.allocUnsafe(4);w.writeFloatBE(x,0);const b=w.readUInt32BE(0);if(8191&b)return!1;let E=b>>16&32768;const L=b>>23&255,T=8388607&b;if(L>=113&&L<=142)E+=(L-112<<10)+(T>>13);else{if(!(L>=103&&L<113)||T&(1<<126-L)-1)return!1;E+=T+8388608>>126-L}return v.writeUInt16BE(E),!0},a.parseHalf=function(v){const x=128&v[0]?-1:1,w=(124&v[0])>>2,b=(3&v[0])<<8|v[1];return w?w===31?x*(b?NaN:1/0):x*2**(w-25)*(1024+b):5960464477539063e-23*x*b},a.parseCBORfloat=function(v){switch(v.length){case 2:return a.parseHalf(v);case 4:return v.readFloatBE(0);case 8:return v.readDoubleBE(0);default:throw new Error(`Invalid float size: ${v.length}`)}},a.hex=function(v){return c.from(v.replace(/^0x/,""),"hex")},a.bin=function(v){let x=0,w=(v=v.replace(/\s/g,"")).length%8||8;const b=[];for(;w<=v.length;)b.push(parseInt(v.slice(x,w),2)),x=w,w+=8;return c.from(b)},a.arrayEqual=function(v,x){return v==null&&x==null||v!=null&&x!=null&&v.length===x.length&&v.every((w,b)=>w===x[b])},a.bufferToBigInt=function(v){return BigInt(`0x${v.toString("hex")}`)},a.cborValueToString=function(v,x=-1){switch(typeof v){case"symbol":{switch(v){case y.NULL:return"null";case y.UNDEFINED:return"undefined";case y.BREAK:return"BREAK"}if(v.description)return v.description;const w=v.toString().match(/^Symbol\((?<name>.*)\)/);return w&&w.groups.name?w.groups.name:"Symbol"}case"string":return JSON.stringify(v);case"bigint":return v.toString();case"number":{const w=Object.is(v,-0)?"-0":String(v);return x>0?`${w}_${x}`:w}case"object":{const w=a.bufferishToBuffer(v);if(w){const b=w.toString("hex");return x===-1/0?b:`h'${b}'`}return typeof v[Symbol.for("nodejs.util.inspect.custom")]=="function"?v[Symbol.for("nodejs.util.inspect.custom")]():Array.isArray(v)?"[]":"{}"}}return String(v)},a.guessEncoding=function(v,x){if(typeof v=="string")return new u(v,x??"hex");const w=a.bufferishToBuffer(v);if(w)return new u(w);if((b=v)instanceof d.Readable||["read","on","pipe"].every(E=>typeof b[E]=="function"))return v;var b;throw new Error("Unknown input type")};const M={"=":"","+":"-","/":"_"};a.base64url=function(v){return a.bufferishToBuffer(v).toString("base64").replace(/[=+/]/g,x=>M[x])},a.base64=function(v){return a.bufferishToBuffer(v).toString("base64")},a.isBigEndian=function(){const v=new Uint8Array(4);return!((new Uint32Array(v.buffer)[0]=1)&v[0])}},4202:(o,a,l)=>{const c=l(2830),{Buffer:u}=l(8764),d=new TextDecoder("utf8",{fatal:!0,ignoreBOM:!0});class p extends c.Transform{constructor(h,g,y={}){let _=null,M=null;switch(typeof h){case"object":u.isBuffer(h)?_=h:h&&(y=h);break;case"string":_=h;break;case"undefined":break;default:throw new TypeError("Invalid input")}switch(typeof g){case"object":g&&(y=g);break;case"string":M=g;break;case"undefined":break;default:throw new TypeError("Invalid inputEncoding")}if(!y||typeof y!="object")throw new TypeError("Invalid options");_==null&&(_=y.input),M==null&&(M=y.inputEncoding),delete y.input,delete y.inputEncoding;const v=y.watchPipe==null||y.watchPipe;delete y.watchPipe;const x=!!y.readError;delete y.readError,super(y),this.readError=x,v&&this.on("pipe",w=>{const b=w._readableState.objectMode;if(this.length>0&&b!==this._readableState.objectMode)throw new Error("Do not switch objectMode in the middle of the stream");this._readableState.objectMode=b,this._writableState.objectMode=b}),_!=null&&this.end(_,M)}static isNoFilter(h){return h instanceof this}static compare(h,g){if(!(h instanceof this))throw new TypeError("Arguments must be NoFilters");return h===g?0:h.compare(g)}static concat(h,g){if(!Array.isArray(h))throw new TypeError("list argument must be an Array of NoFilters");if(h.length===0||g===0)return u.alloc(0);g==null&&(g=h.reduce((v,x)=>{if(!(x instanceof p))throw new TypeError("list argument must be an Array of NoFilters");return v+x.length},0));let y=!0,_=!0;const M=h.map(v=>{if(!(v instanceof p))throw new TypeError("list argument must be an Array of NoFilters");const x=v.slice();return u.isBuffer(x)?_=!1:y=!1,x});if(y)return u.concat(M,g);if(_)return[].concat(...M).slice(0,g);throw new Error("Concatenating mixed object and byte streams not supported")}_transform(h,g,y){this._readableState.objectMode||u.isBuffer(h)||(h=u.from(h,g)),this.push(h),y()}_bufArray(){let h=this._readableState.buffer;if(!Array.isArray(h)){let g=h.head;for(h=[];g!=null;)h.push(g.data),g=g.next}return h}read(h){const g=super.read(h);if(g!=null){if(this.emit("read",g),this.readError&&g.length<h)throw new Error(`Read ${g.length}, wanted ${h}`)}else if(this.readError)throw new Error(`No data available, wanted ${h}`);return g}readFull(h){let g=null,y=null,_=null;return new Promise((M,v)=>{this.length>=h?M(this.read(h)):this.writableFinished?v(new Error(`Stream finished before ${h} bytes were available`)):(g=x=>{this.length>=h&&M(this.read(h))},y=()=>{v(new Error(`Stream finished before ${h} bytes were available`))},_=v,this.on("readable",g),this.on("error",_),this.on("finish",y))}).finally(()=>{g&&(this.removeListener("readable",g),this.removeListener("error",_),this.removeListener("finish",y))})}promise(h){let g=!1;return new Promise((y,_)=>{this.on("finish",()=>{const M=this.read();h==null||g||(g=!0,h(null,M)),y(M)}),this.on("error",M=>{h==null||g||(g=!0,h(M)),_(M)})})}compare(h){if(!(h instanceof p))throw new TypeError("Arguments must be NoFilters");if(this===h)return 0;const g=this.slice(),y=h.slice();if(u.isBuffer(g)&&u.isBuffer(y))return g.compare(y);throw new Error("Cannot compare streams in object mode")}equals(h){return this.compare(h)===0}slice(h,g){if(this._readableState.objectMode)return this._bufArray().slice(h,g);const y=this._bufArray();switch(y.length){case 0:return u.alloc(0);case 1:return y[0].slice(h,g);default:return u.concat(y).slice(h,g)}}get(h){return this.slice()[h]}toJSON(){const h=this.slice();return u.isBuffer(h)?h.toJSON():h}toString(h,g,y){const _=this.slice(g,y);return u.isBuffer(_)?h&&h!=="utf8"?_.toString(h):d.decode(_):JSON.stringify(_)}[Symbol.for("nodejs.util.inspect.custom")](h,g){const y=this._bufArray().map(_=>u.isBuffer(_)?g.stylize(_.toString("hex"),"string"):JSON.stringify(_)).join(", ");return`${this.constructor.name} [${y}]`}get length(){return this._readableState.length}writeBigInt(h){let g=h.toString(16);if(h<0){const y=BigInt(Math.floor(g.length/2));g=(h=(BigInt(1)<<y*BigInt(8))+h).toString(16)}return g.length%2&&(g=`0${g}`),this.push(u.from(g,"hex"))}readUBigInt(h){const g=this.read(h);return u.isBuffer(g)?BigInt(`0x${g.toString("hex")}`):null}readBigInt(h){const g=this.read(h);if(!u.isBuffer(g))return null;let y=BigInt(`0x${g.toString("hex")}`);return 128&g[0]&&(y-=BigInt(1)<<BigInt(g.length)*BigInt(8)),y}writeUInt8(h){const g=u.from([h]);return this.push(g)}writeUInt16LE(h){const g=u.alloc(2);return g.writeUInt16LE(h),this.push(g)}writeUInt16BE(h){const g=u.alloc(2);return g.writeUInt16BE(h),this.push(g)}writeUInt32LE(h){const g=u.alloc(4);return g.writeUInt32LE(h),this.push(g)}writeUInt32BE(h){const g=u.alloc(4);return g.writeUInt32BE(h),this.push(g)}writeInt8(h){const g=u.from([h]);return this.push(g)}writeInt16LE(h){const g=u.alloc(2);return g.writeUInt16LE(h),this.push(g)}writeInt16BE(h){const g=u.alloc(2);return g.writeUInt16BE(h),this.push(g)}writeInt32LE(h){const g=u.alloc(4);return g.writeUInt32LE(h),this.push(g)}writeInt32BE(h){const g=u.alloc(4);return g.writeUInt32BE(h),this.push(g)}writeFloatLE(h){const g=u.alloc(4);return g.writeFloatLE(h),this.push(g)}writeFloatBE(h){const g=u.alloc(4);return g.writeFloatBE(h),this.push(g)}writeDoubleLE(h){const g=u.alloc(8);return g.writeDoubleLE(h),this.push(g)}writeDoubleBE(h){const g=u.alloc(8);return g.writeDoubleBE(h),this.push(g)}writeBigInt64LE(h){const g=u.alloc(8);return g.writeBigInt64LE(h),this.push(g)}writeBigInt64BE(h){const g=u.alloc(8);return g.writeBigInt64BE(h),this.push(g)}writeBigUInt64LE(h){const g=u.alloc(8);return g.writeBigUInt64LE(h),this.push(g)}writeBigUInt64BE(h){const g=u.alloc(8);return g.writeBigUInt64BE(h),this.push(g)}readUInt8(){const h=this.read(1);return u.isBuffer(h)?h.readUInt8():null}readUInt16LE(){const h=this.read(2);return u.isBuffer(h)?h.readUInt16LE():null}readUInt16BE(){const h=this.read(2);return u.isBuffer(h)?h.readUInt16BE():null}readUInt32LE(){const h=this.read(4);return u.isBuffer(h)?h.readUInt32LE():null}readUInt32BE(){const h=this.read(4);return u.isBuffer(h)?h.readUInt32BE():null}readInt8(){const h=this.read(1);return u.isBuffer(h)?h.readInt8():null}readInt16LE(){const h=this.read(2);return u.isBuffer(h)?h.readInt16LE():null}readInt16BE(){const h=this.read(2);return u.isBuffer(h)?h.readInt16BE():null}readInt32LE(){const h=this.read(4);return u.isBuffer(h)?h.readInt32LE():null}readInt32BE(){const h=this.read(4);return u.isBuffer(h)?h.readInt32BE():null}readFloatLE(){const h=this.read(4);return u.isBuffer(h)?h.readFloatLE():null}readFloatBE(){const h=this.read(4);return u.isBuffer(h)?h.readFloatBE():null}readDoubleLE(){const h=this.read(8);return u.isBuffer(h)?h.readDoubleLE():null}readDoubleBE(){const h=this.read(8);return u.isBuffer(h)?h.readDoubleBE():null}readBigInt64LE(){const h=this.read(8);return u.isBuffer(h)?h.readBigInt64LE():null}readBigInt64BE(){const h=this.read(8);return u.isBuffer(h)?h.readBigInt64BE():null}readBigUInt64LE(){const h=this.read(8);return u.isBuffer(h)?h.readBigUInt64LE():null}readBigUInt64BE(){const h=this.read(8);return u.isBuffer(h)?h.readBigUInt64BE():null}}o.exports=p},71:(o,a,l)=>{const c=l(2830),u=l(4202);class d extends c.Transform{constructor(m){super(m),this._writableState.objectMode=!1,this._readableState.objectMode=!0,this.bs=new u,this.__restart()}_transform(m,h,g){for(this.bs.write(m);this.bs.length>=this.__needed;){let y=null;const _=this.__needed===null?void 0:this.bs.read(this.__needed);try{y=this.__parser.next(_)}catch(M){return g(M)}this.__needed&&(this.__fresh=!1),y.done?(this.push(y.value),this.__restart()):this.__needed=y.value||1/0}return g()}*_parse(){throw new Error("Must be implemented in subclass")}__restart(){this.__needed=null,this.__parser=this._parse(),this.__fresh=!0}_flush(m){m(this.__fresh?null:new Error("unexpected end of input"))}}o.exports=d},7187:o=>{var a,l=typeof Reflect=="object"?Reflect:null,c=l&&typeof l.apply=="function"?l.apply:function(b,E,L){return Function.prototype.apply.call(b,E,L)};a=l&&typeof l.ownKeys=="function"?l.ownKeys:Object.getOwnPropertySymbols?function(b){return Object.getOwnPropertyNames(b).concat(Object.getOwnPropertySymbols(b))}:function(b){return Object.getOwnPropertyNames(b)};var u=Number.isNaN||function(b){return b!=b};function d(){d.init.call(this)}o.exports=d,o.exports.once=function(b,E){return new Promise(function(L,T){function P(X){b.removeListener(E,G),T(X)}function G(){typeof b.removeListener=="function"&&b.removeListener("error",P),L([].slice.call(arguments))}w(b,E,G,{once:!0}),E!=="error"&&function(X,$,O){typeof X.on=="function"&&w(X,"error",$,{once:!0})}(b,P)})},d.EventEmitter=d,d.prototype._events=void 0,d.prototype._eventsCount=0,d.prototype._maxListeners=void 0;var p=10;function m(b){if(typeof b!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof b)}function h(b){return b._maxListeners===void 0?d.defaultMaxListeners:b._maxListeners}function g(b,E,L,T){var P,G,X,$;if(m(L),(G=b._events)===void 0?(G=b._events=Object.create(null),b._eventsCount=0):(G.newListener!==void 0&&(b.emit("newListener",E,L.listener?L.listener:L),G=b._events),X=G[E]),X===void 0)X=G[E]=L,++b._eventsCount;else if(typeof X=="function"?X=G[E]=T?[L,X]:[X,L]:T?X.unshift(L):X.push(L),(P=h(b))>0&&X.length>P&&!X.warned){X.warned=!0;var O=new Error("Possible EventEmitter memory leak detected. "+X.length+" "+String(E)+" listeners added. Use emitter.setMaxListeners() to increase limit");O.name="MaxListenersExceededWarning",O.emitter=b,O.type=E,O.count=X.length,$=O,console&&console.warn&&console.warn($)}return b}function y(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _(b,E,L){var T={fired:!1,wrapFn:void 0,target:b,type:E,listener:L},P=y.bind(T);return P.listener=L,T.wrapFn=P,P}function M(b,E,L){var T=b._events;if(T===void 0)return[];var P=T[E];return P===void 0?[]:typeof P=="function"?L?[P.listener||P]:[P]:L?function(G){for(var X=new Array(G.length),$=0;$<X.length;++$)X[$]=G[$].listener||G[$];return X}(P):x(P,P.length)}function v(b){var E=this._events;if(E!==void 0){var L=E[b];if(typeof L=="function")return 1;if(L!==void 0)return L.length}return 0}function x(b,E){for(var L=new Array(E),T=0;T<E;++T)L[T]=b[T];return L}function w(b,E,L,T){if(typeof b.on=="function")T.once?b.once(E,L):b.on(E,L);else{if(typeof b.addEventListener!="function")throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof b);b.addEventListener(E,function P(G){T.once&&b.removeEventListener(E,P),L(G)})}}Object.defineProperty(d,"defaultMaxListeners",{enumerable:!0,get:function(){return p},set:function(b){if(typeof b!="number"||b<0||u(b))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+b+".");p=b}}),d.init=function(){this._events!==void 0&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},d.prototype.setMaxListeners=function(b){if(typeof b!="number"||b<0||u(b))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+b+".");return this._maxListeners=b,this},d.prototype.getMaxListeners=function(){return h(this)},d.prototype.emit=function(b){for(var E=[],L=1;L<arguments.length;L++)E.push(arguments[L]);var T=b==="error",P=this._events;if(P!==void 0)T=T&&P.error===void 0;else if(!T)return!1;if(T){var G;if(E.length>0&&(G=E[0]),G instanceof Error)throw G;var X=new Error("Unhandled error."+(G?" ("+G.message+")":""));throw X.context=G,X}var $=P[b];if($===void 0)return!1;if(typeof $=="function")c($,this,E);else{var O=$.length,B=x($,O);for(L=0;L<O;++L)c(B[L],this,E)}return!0},d.prototype.addListener=function(b,E){return g(this,b,E,!1)},d.prototype.on=d.prototype.addListener,d.prototype.prependListener=function(b,E){return g(this,b,E,!0)},d.prototype.once=function(b,E){return m(E),this.on(b,_(this,b,E)),this},d.prototype.prependOnceListener=function(b,E){return m(E),this.prependListener(b,_(this,b,E)),this},d.prototype.removeListener=function(b,E){var L,T,P,G,X;if(m(E),(T=this._events)===void 0)return this;if((L=T[b])===void 0)return this;if(L===E||L.listener===E)--this._eventsCount==0?this._events=Object.create(null):(delete T[b],T.removeListener&&this.emit("removeListener",b,L.listener||E));else if(typeof L!="function"){for(P=-1,G=L.length-1;G>=0;G--)if(L[G]===E||L[G].listener===E){X=L[G].listener,P=G;break}if(P<0)return this;P===0?L.shift():function($,O){for(;O+1<$.length;O++)$[O]=$[O+1];$.pop()}(L,P),L.length===1&&(T[b]=L[0]),T.removeListener!==void 0&&this.emit("removeListener",b,X||E)}return this},d.prototype.off=d.prototype.removeListener,d.prototype.removeAllListeners=function(b){var E,L,T;if((L=this._events)===void 0)return this;if(L.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):L[b]!==void 0&&(--this._eventsCount==0?this._events=Object.create(null):delete L[b]),this;if(arguments.length===0){var P,G=Object.keys(L);for(T=0;T<G.length;++T)(P=G[T])!=="removeListener"&&this.removeAllListeners(P);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(typeof(E=L[b])=="function")this.removeListener(b,E);else if(E!==void 0)for(T=E.length-1;T>=0;T--)this.removeListener(b,E[T]);return this},d.prototype.listeners=function(b){return M(this,b,!0)},d.prototype.rawListeners=function(b){return M(this,b,!1)},d.listenerCount=function(b,E){return typeof b.listenerCount=="function"?b.listenerCount(E):v.call(b,E)},d.prototype.listenerCount=v,d.prototype.eventNames=function(){return this._eventsCount>0?a(this._events):[]}},645:(o,a)=>{a.read=function(l,c,u,d,p){var m,h,g=8*p-d-1,y=(1<<g)-1,_=y>>1,M=-7,v=u?p-1:0,x=u?-1:1,w=l[c+v];for(v+=x,m=w&(1<<-M)-1,w>>=-M,M+=g;M>0;m=256*m+l[c+v],v+=x,M-=8);for(h=m&(1<<-M)-1,m>>=-M,M+=d;M>0;h=256*h+l[c+v],v+=x,M-=8);if(m===0)m=1-_;else{if(m===y)return h?NaN:1/0*(w?-1:1);h+=Math.pow(2,d),m-=_}return(w?-1:1)*h*Math.pow(2,m-d)},a.write=function(l,c,u,d,p,m){var h,g,y,_=8*m-p-1,M=(1<<_)-1,v=M>>1,x=p===23?Math.pow(2,-24)-Math.pow(2,-77):0,w=d?0:m-1,b=d?1:-1,E=c<0||c===0&&1/c<0?1:0;for(c=Math.abs(c),isNaN(c)||c===1/0?(g=isNaN(c)?1:0,h=M):(h=Math.floor(Math.log(c)/Math.LN2),c*(y=Math.pow(2,-h))<1&&(h--,y*=2),(c+=h+v>=1?x/y:x*Math.pow(2,1-v))*y>=2&&(h++,y/=2),h+v>=M?(g=0,h=M):h+v>=1?(g=(c*y-1)*Math.pow(2,p),h+=v):(g=c*Math.pow(2,v-1)*Math.pow(2,p),h=0));p>=8;l[u+w]=255&g,w+=b,g/=256,p-=8);for(h=h<<p|g,_+=p;_>0;l[u+w]=255&h,w+=b,h/=256,_-=8);l[u+w-b]|=128*E}},5717:o=>{typeof Object.create=="function"?o.exports=function(a,l){l&&(a.super_=l,a.prototype=Object.create(l.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}))}:o.exports=function(a,l){if(l){a.super_=l;var c=function(){};c.prototype=l.prototype,a.prototype=new c,a.prototype.constructor=a}}},4155:o=>{var a,l,c=o.exports={};function u(){throw new Error("setTimeout has not been defined")}function d(){throw new Error("clearTimeout has not been defined")}function p(w){if(a===setTimeout)return setTimeout(w,0);if((a===u||!a)&&setTimeout)return a=setTimeout,setTimeout(w,0);try{return a(w,0)}catch{try{return a.call(null,w,0)}catch{return a.call(this,w,0)}}}(function(){try{a=typeof setTimeout=="function"?setTimeout:u}catch{a=u}try{l=typeof clearTimeout=="function"?clearTimeout:d}catch{l=d}})();var m,h=[],g=!1,y=-1;function _(){g&&m&&(g=!1,m.length?h=m.concat(h):y=-1,h.length&&M())}function M(){if(!g){var w=p(_);g=!0;for(var b=h.length;b;){for(m=h,h=[];++y<b;)m&&m[y].run();y=-1,b=h.length}m=null,g=!1,function(E){if(l===clearTimeout)return clearTimeout(E);if((l===d||!l)&&clearTimeout)return l=clearTimeout,clearTimeout(E);try{return l(E)}catch{try{return l.call(null,E)}catch{return l.call(this,E)}}}(w)}}function v(w,b){this.fun=w,this.array=b}function x(){}c.nextTick=function(w){var b=new Array(arguments.length-1);if(arguments.length>1)for(var E=1;E<arguments.length;E++)b[E-1]=arguments[E];h.push(new v(w,b)),h.length!==1||g||p(M)},v.prototype.run=function(){this.fun.apply(null,this.array)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=x,c.addListener=x,c.once=x,c.off=x,c.removeListener=x,c.removeAllListeners=x,c.emit=x,c.prependListener=x,c.prependOnceListener=x,c.listeners=function(w){return[]},c.binding=function(w){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(w){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},6753:(o,a,l)=>{o.exports=l(5099).Duplex},2725:(o,a,l)=>{o.exports=l(5099).PassThrough},9481:(o,a,l)=>{o.exports=l(5099).Readable},4605:(o,a,l)=>{o.exports=l(5099).Transform},4229:(o,a,l)=>{o.exports=l(5099).Writable},196:(o,a,l)=>{const{AbortError:c,codes:u}=l(4381),{isNodeStream:d,isWebStream:p,kControllerErrorFunction:m}=l(5874),h=l(8610),{ERR_INVALID_ARG_TYPE:g}=u;o.exports.addAbortSignal=function(y,_){if(((M,v)=>{if(typeof M!="object"||!("aborted"in M))throw new g("signal","AbortSignal",M)})(y),!d(_)&&!p(_))throw new g("stream",["ReadableStream","WritableStream","Stream"],_);return o.exports.addAbortSignalNoValidate(y,_)},o.exports.addAbortSignalNoValidate=function(y,_){if(typeof y!="object"||!("aborted"in y))return _;const M=d(_)?()=>{_.destroy(new c(void 0,{cause:y.reason}))}:()=>{_[m](new c(void 0,{cause:y.reason}))};return y.aborted?M():(y.addEventListener("abort",M),h(_,()=>y.removeEventListener("abort",M))),_}},7327:(o,a,l)=>{const{StringPrototypeSlice:c,SymbolIterator:u,TypedArrayPrototypeSet:d,Uint8Array:p}=l(9061),{Buffer:m}=l(8764),{inspect:h}=l(6087);o.exports=class{constructor(){this.head=null,this.tail=null,this.length=0}push(g){const y={data:g,next:null};this.length>0?this.tail.next=y:this.head=y,this.tail=y,++this.length}unshift(g){const y={data:g,next:this.head};this.length===0&&(this.tail=y),this.head=y,++this.length}shift(){if(this.length===0)return;const g=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,g}clear(){this.head=this.tail=null,this.length=0}join(g){if(this.length===0)return"";let y=this.head,_=""+y.data;for(;(y=y.next)!==null;)_+=g+y.data;return _}concat(g){if(this.length===0)return m.alloc(0);const y=m.allocUnsafe(g>>>0);let _=this.head,M=0;for(;_;)d(y,_.data,M),M+=_.data.length,_=_.next;return y}consume(g,y){const _=this.head.data;if(g<_.length){const M=_.slice(0,g);return this.head.data=_.slice(g),M}return g===_.length?this.shift():y?this._getString(g):this._getBuffer(g)}first(){return this.head.data}*[u](){for(let g=this.head;g;g=g.next)yield g.data}_getString(g){let y="",_=this.head,M=0;do{const v=_.data;if(!(g>v.length)){g===v.length?(y+=v,++M,_.next?this.head=_.next:this.head=this.tail=null):(y+=c(v,0,g),this.head=_,_.data=c(v,g));break}y+=v,g-=v.length,++M}while((_=_.next)!==null);return this.length-=M,y}_getBuffer(g){const y=m.allocUnsafe(g),_=g;let M=this.head,v=0;do{const x=M.data;if(!(g>x.length)){g===x.length?(d(y,x,_-g),++v,M.next?this.head=M.next:this.head=this.tail=null):(d(y,new p(x.buffer,x.byteOffset,g),_-g),this.head=M,M.data=x.slice(g));break}d(y,x,_-g),g-=x.length,++v}while((M=M.next)!==null);return this.length-=v,y}[Symbol.for("nodejs.util.inspect.custom")](g,y){return h(this,{...y,depth:0,customInspect:!1})}}},299:(o,a,l)=>{const{pipeline:c}=l(9946),u=l(8672),{destroyer:d}=l(1195),{isNodeStream:p,isReadable:m,isWritable:h,isWebStream:g,isTransformStream:y,isWritableStream:_,isReadableStream:M}=l(5874),{AbortError:v,codes:{ERR_INVALID_ARG_VALUE:x,ERR_MISSING_ARGS:w}}=l(4381),b=l(8610);o.exports=function(...E){if(E.length===0)throw new w("streams");if(E.length===1)return u.from(E[0]);const L=[...E];if(typeof E[0]=="function"&&(E[0]=u.from(E[0])),typeof E[E.length-1]=="function"){const D=E.length-1;E[D]=u.from(E[D])}for(let D=0;D<E.length;++D)if(p(E[D])||g(E[D])){if(D<E.length-1&&!(m(E[D])||M(E[D])||y(E[D])))throw new x(`streams[${D}]`,L[D],"must be readable");if(D>0&&!(h(E[D])||_(E[D])||y(E[D])))throw new x(`streams[${D}]`,L[D],"must be writable")}let T,P,G,X,$;const O=E[0],B=c(E,function(D){const tt=X;X=null,tt?tt(D):D?$.destroy(D):Z||C||$.destroy()}),C=!!(h(O)||_(O)||y(O)),Z=!!(m(B)||M(B)||y(B));if($=new u({writableObjectMode:!(O==null||!O.writableObjectMode),readableObjectMode:!(B==null||!B.writableObjectMode),writable:C,readable:Z}),C){if(p(O))$._write=function(tt,rt,U){O.write(tt,rt)?U():T=U},$._final=function(tt){O.end(),P=tt},O.on("drain",function(){if(T){const tt=T;T=null,tt()}});else if(g(O)){const tt=(y(O)?O.writable:O).getWriter();$._write=async function(rt,U,N){try{await tt.ready,tt.write(rt).catch(()=>{}),N()}catch(H){N(H)}},$._final=async function(rt){try{await tt.ready,tt.close().catch(()=>{}),P=rt}catch(U){rt(U)}}}const D=y(B)?B.readable:B;b(D,()=>{if(P){const tt=P;P=null,tt()}})}if(Z){if(p(B))B.on("readable",function(){if(G){const D=G;G=null,D()}}),B.on("end",function(){$.push(null)}),$._read=function(){for(;;){const D=B.read();if(D===null)return void(G=$._read);if(!$.push(D))return}};else if(g(B)){const D=(y(B)?B.readable:B).getReader();$._read=async function(){for(;;)try{const{value:tt,done:rt}=await D.read();if(!$.push(tt))return;if(rt)return void $.push(null)}catch{return}}}}return $._destroy=function(D,tt){D||X===null||(D=new v),G=null,T=null,P=null,X===null?tt(D):(X=tt,p(B)&&d(B,D))},$}},1195:(o,a,l)=>{const c=l(4155),{aggregateTwoErrors:u,codes:{ERR_MULTIPLE_CALLBACK:d},AbortError:p}=l(4381),{Symbol:m}=l(9061),{kDestroyed:h,isDestroyed:g,isFinished:y,isServerRequest:_}=l(5874),M=m("kDestroy"),v=m("kConstruct");function x(B,C,Z){B&&(B.stack,C&&!C.errored&&(C.errored=B),Z&&!Z.errored&&(Z.errored=B))}function w(B,C,Z){let D=!1;function tt(rt){if(D)return;D=!0;const U=B._readableState,N=B._writableState;x(rt,N,U),N&&(N.closed=!0),U&&(U.closed=!0),typeof Z=="function"&&Z(rt),rt?c.nextTick(b,B,rt):c.nextTick(E,B)}try{B._destroy(C||null,tt)}catch(rt){tt(rt)}}function b(B,C){L(B,C),E(B)}function E(B){const C=B._readableState,Z=B._writableState;Z&&(Z.closeEmitted=!0),C&&(C.closeEmitted=!0),(Z!=null&&Z.emitClose||C!=null&&C.emitClose)&&B.emit("close")}function L(B,C){const Z=B._readableState,D=B._writableState;D!=null&&D.errorEmitted||Z!=null&&Z.errorEmitted||(D&&(D.errorEmitted=!0),Z&&(Z.errorEmitted=!0),B.emit("error",C))}function T(B,C,Z){const D=B._readableState,tt=B._writableState;if(tt!=null&&tt.destroyed||D!=null&&D.destroyed)return this;D!=null&&D.autoDestroy||tt!=null&&tt.autoDestroy?B.destroy(C):C&&(C.stack,tt&&!tt.errored&&(tt.errored=C),D&&!D.errored&&(D.errored=C),Z?c.nextTick(L,B,C):L(B,C))}function P(B){let C=!1;function Z(D){if(C)return void T(B,D??new d);C=!0;const tt=B._readableState,rt=B._writableState,U=rt||tt;tt&&(tt.constructed=!0),rt&&(rt.constructed=!0),U.destroyed?B.emit(M,D):D?T(B,D,!0):c.nextTick(G,B)}try{B._construct(D=>{c.nextTick(Z,D)})}catch(D){c.nextTick(Z,D)}}function G(B){B.emit(v)}function X(B){return(B==null?void 0:B.setHeader)&&typeof B.abort=="function"}function $(B){B.emit("close")}function O(B,C){B.emit("error",C),c.nextTick($,B)}o.exports={construct:function(B,C){if(typeof B._construct!="function")return;const Z=B._readableState,D=B._writableState;Z&&(Z.constructed=!1),D&&(D.constructed=!1),B.once(v,C),B.listenerCount(v)>1||c.nextTick(P,B)},destroyer:function(B,C){B&&!g(B)&&(C||y(B)||(C=new p),_(B)?(B.socket=null,B.destroy(C)):X(B)?B.abort():X(B.req)?B.req.abort():typeof B.destroy=="function"?B.destroy(C):typeof B.close=="function"?B.close():C?c.nextTick(O,B,C):c.nextTick($,B),B.destroyed||(B[h]=!0))},destroy:function(B,C){const Z=this._readableState,D=this._writableState,tt=D||Z;return D!=null&&D.destroyed||Z!=null&&Z.destroyed?(typeof C=="function"&&C(),this):(x(B,D,Z),D&&(D.destroyed=!0),Z&&(Z.destroyed=!0),tt.constructed?w(this,B,C):this.once(M,function(rt){w(this,u(rt,B),C)}),this)},undestroy:function(){const B=this._readableState,C=this._writableState;B&&(B.constructed=!0,B.closed=!1,B.closeEmitted=!1,B.destroyed=!1,B.errored=null,B.errorEmitted=!1,B.reading=!1,B.ended=B.readable===!1,B.endEmitted=B.readable===!1),C&&(C.constructed=!0,C.destroyed=!1,C.closed=!1,C.closeEmitted=!1,C.errored=null,C.errorEmitted=!1,C.finalCalled=!1,C.prefinished=!1,C.ended=C.writable===!1,C.ending=C.writable===!1,C.finished=C.writable===!1)},errorOrDestroy:T}},8672:(o,a,l)=>{const{ObjectDefineProperties:c,ObjectGetOwnPropertyDescriptor:u,ObjectKeys:d,ObjectSetPrototypeOf:p}=l(9061);o.exports=g;const m=l(911),h=l(6304);p(g.prototype,m.prototype),p(g,m);{const v=d(h.prototype);for(let x=0;x<v.length;x++){const w=v[x];g.prototype[w]||(g.prototype[w]=h.prototype[w])}}function g(v){if(!(this instanceof g))return new g(v);m.call(this,v),h.call(this,v),v?(this.allowHalfOpen=v.allowHalfOpen!==!1,v.readable===!1&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),v.writable===!1&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)):this.allowHalfOpen=!0}let y,_;function M(){return y===void 0&&(y={}),y}c(g.prototype,{writable:{__proto__:null,...u(h.prototype,"writable")},writableHighWaterMark:{__proto__:null,...u(h.prototype,"writableHighWaterMark")},writableObjectMode:{__proto__:null,...u(h.prototype,"writableObjectMode")},writableBuffer:{__proto__:null,...u(h.prototype,"writableBuffer")},writableLength:{__proto__:null,...u(h.prototype,"writableLength")},writableFinished:{__proto__:null,...u(h.prototype,"writableFinished")},writableCorked:{__proto__:null,...u(h.prototype,"writableCorked")},writableEnded:{__proto__:null,...u(h.prototype,"writableEnded")},writableNeedDrain:{__proto__:null,...u(h.prototype,"writableNeedDrain")},destroyed:{__proto__:null,get(){return this._readableState!==void 0&&this._writableState!==void 0&&this._readableState.destroyed&&this._writableState.destroyed},set(v){this._readableState&&this._writableState&&(this._readableState.destroyed=v,this._writableState.destroyed=v)}}}),g.fromWeb=function(v,x){return M().newStreamDuplexFromReadableWritablePair(v,x)},g.toWeb=function(v){return M().newReadableWritablePairFromDuplex(v)},g.from=function(v){return _||(_=l(7946)),_(v,"body")}},7946:(o,a,l)=>{const c=l(4155),u=l(8764),{isReadable:d,isWritable:p,isIterable:m,isNodeStream:h,isReadableNodeStream:g,isWritableNodeStream:y,isDuplexNodeStream:_}=l(5874),M=l(8610),{AbortError:v,codes:{ERR_INVALID_ARG_TYPE:x,ERR_INVALID_RETURN_VALUE:w}}=l(4381),{destroyer:b}=l(1195),E=l(8672),L=l(911),{createDeferredPromise:T}=l(6087),P=l(6307),G=globalThis.Blob||u.Blob,X=G!==void 0?function(Z){return Z instanceof G}:function(Z){return!1},$=globalThis.AbortController||l(8599).AbortController,{FunctionPrototypeCall:O}=l(9061);class B extends E{constructor(D){super(D),(D==null?void 0:D.readable)===!1&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),(D==null?void 0:D.writable)===!1&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)}}function C(Z){const D=Z.readable&&typeof Z.readable.read!="function"?L.wrap(Z.readable):Z.readable,tt=Z.writable;let rt,U,N,H,Y,et=!!d(D),ut=!!p(tt);function ct(ot){const dt=H;H=null,dt?dt(ot):ot&&Y.destroy(ot)}return Y=new B({readableObjectMode:!(D==null||!D.readableObjectMode),writableObjectMode:!(tt==null||!tt.writableObjectMode),readable:et,writable:ut}),ut&&(M(tt,ot=>{ut=!1,ot&&b(D,ot),ct(ot)}),Y._write=function(ot,dt,It){tt.write(ot,dt)?It():rt=It},Y._final=function(ot){tt.end(),U=ot},tt.on("drain",function(){if(rt){const ot=rt;rt=null,ot()}}),tt.on("finish",function(){if(U){const ot=U;U=null,ot()}})),et&&(M(D,ot=>{et=!1,ot&&b(D,ot),ct(ot)}),D.on("readable",function(){if(N){const ot=N;N=null,ot()}}),D.on("end",function(){Y.push(null)}),Y._read=function(){for(;;){const ot=D.read();if(ot===null)return void(N=Y._read);if(!Y.push(ot))return}}),Y._destroy=function(ot,dt){ot||H===null||(ot=new v),N=null,rt=null,U=null,H===null?dt(ot):(H=dt,b(tt,ot),b(D,ot))},Y}o.exports=function Z(D,tt){if(_(D))return D;if(g(D))return C({readable:D});if(y(D))return C({writable:D});if(h(D))return C({writable:!1,readable:!1});if(typeof D=="function"){const{value:U,write:N,final:H,destroy:Y}=function(ut){let{promise:ct,resolve:ot}=T();const dt=new $,It=dt.signal;return{value:ut(async function*(){for(;;){const Mt=ct;ct=null;const{chunk:V,done:_t,cb:ht}=await Mt;if(c.nextTick(ht),_t)return;if(It.aborted)throw new v(void 0,{cause:It.reason});({promise:ct,resolve:ot}=T()),yield V}}(),{signal:It}),write(Mt,V,_t){const ht=ot;ot=null,ht({chunk:Mt,done:!1,cb:_t})},final(Mt){const V=ot;ot=null,V({done:!0,cb:Mt})},destroy(Mt,V){dt.abort(),V(Mt)}}}(D);if(m(U))return P(B,U,{objectMode:!0,write:N,final:H,destroy:Y});const et=U==null?void 0:U.then;if(typeof et=="function"){let ut;const ct=O(et,U,ot=>{if(ot!=null)throw new w("nully","body",ot)},ot=>{b(ut,ot)});return ut=new B({objectMode:!0,readable:!1,write:N,final(ot){H(async()=>{try{await ct,c.nextTick(ot,null)}catch(dt){c.nextTick(ot,dt)}})},destroy:Y})}throw new w("Iterable, AsyncIterable or AsyncFunction",tt,U)}if(X(D))return Z(D.arrayBuffer());if(m(D))return P(B,D,{objectMode:!0,writable:!1});if(typeof(D==null?void 0:D.writable)=="object"||typeof(D==null?void 0:D.readable)=="object")return C({readable:D!=null&&D.readable?g(D==null?void 0:D.readable)?D==null?void 0:D.readable:Z(D.readable):void 0,writable:D!=null&&D.writable?y(D==null?void 0:D.writable)?D==null?void 0:D.writable:Z(D.writable):void 0});const rt=D==null?void 0:D.then;if(typeof rt=="function"){let U;return O(rt,D,N=>{N!=null&&U.push(N),U.push(null)},N=>{b(U,N)}),U=new B({objectMode:!0,writable:!1,read(){}})}throw new x(tt,["Blob","ReadableStream","WritableStream","Stream","Iterable","AsyncIterable","Function","{ readable, writable } pair","Promise"],D)}},8610:(o,a,l)=>{const c=l(4155),{AbortError:u,codes:d}=l(4381),{ERR_INVALID_ARG_TYPE:p,ERR_STREAM_PREMATURE_CLOSE:m}=d,{kEmptyObject:h,once:g}=l(6087),{validateAbortSignal:y,validateFunction:_,validateObject:M,validateBoolean:v}=l(6547),{Promise:x,PromisePrototypeThen:w}=l(9061),{isClosed:b,isReadable:E,isReadableNodeStream:L,isReadableStream:T,isReadableFinished:P,isReadableErrored:G,isWritable:X,isWritableNodeStream:$,isWritableStream:O,isWritableFinished:B,isWritableErrored:C,isNodeStream:Z,willEmitClose:D,kIsClosedPromise:tt}=l(5874),rt=()=>{};function U(N,H,Y){var et,ut;if(arguments.length===2?(Y=H,H=h):H==null?H=h:M(H,"options"),_(Y,"callback"),y(H.signal,"options.signal"),Y=g(Y),T(N)||O(N))return function(F,f,S){let A=!1,z=rt;if(f.signal)if(z=()=>{A=!0,S.call(F,new u(void 0,{cause:f.signal.reason}))},f.signal.aborted)c.nextTick(z);else{const I=S;S=g((...q)=>{f.signal.removeEventListener("abort",z),I.apply(F,q)}),f.signal.addEventListener("abort",z)}const R=(...I)=>{A||c.nextTick(()=>S.apply(F,I))};return w(F[tt].promise,R,R),rt}(N,H,Y);if(!Z(N))throw new p("stream",["ReadableStream","WritableStream","Stream"],N);const ct=(et=H.readable)!==null&&et!==void 0?et:L(N),ot=(ut=H.writable)!==null&&ut!==void 0?ut:$(N),dt=N._writableState,It=N._readableState,Mt=()=>{N.writable||ht()};let V=D(N)&&L(N)===ct&&$(N)===ot,_t=B(N,!1);const ht=()=>{_t=!0,N.destroyed&&(V=!1),(!V||N.readable&&!ct)&&(ct&&!Q||Y.call(N))};let Q=P(N,!1);const nt=()=>{Q=!0,N.destroyed&&(V=!1),(!V||N.writable&&!ot)&&(ot&&!_t||Y.call(N))},yt=F=>{Y.call(N,F)};let lt=b(N);const K=()=>{lt=!0;const F=C(N)||G(N);return F&&typeof F!="boolean"?Y.call(N,F):ct&&!Q&&L(N,!0)&&!P(N,!1)?Y.call(N,new m):!ot||_t||B(N,!1)?void Y.call(N):Y.call(N,new m)},st=()=>{lt=!0;const F=C(N)||G(N);if(F&&typeof F!="boolean")return Y.call(N,F);Y.call(N)},mt=()=>{N.req.on("finish",ht)};(function(F){return F.setHeader&&typeof F.abort=="function"})(N)?(N.on("complete",ht),V||N.on("abort",K),N.req?mt():N.on("request",mt)):ot&&!dt&&(N.on("end",Mt),N.on("close",Mt)),V||typeof N.aborted!="boolean"||N.on("aborted",K),N.on("end",nt),N.on("finish",ht),H.error!==!1&&N.on("error",yt),N.on("close",K),lt?c.nextTick(K):dt!=null&&dt.errorEmitted||It!=null&&It.errorEmitted?V||c.nextTick(st):(ct||V&&!E(N)||!_t&&X(N)!==!1)&&(ot||V&&!X(N)||!Q&&E(N)!==!1)?It&&N.req&&N.aborted&&c.nextTick(st):c.nextTick(st);const Tt=()=>{Y=rt,N.removeListener("aborted",K),N.removeListener("complete",ht),N.removeListener("abort",K),N.removeListener("request",mt),N.req&&N.req.removeListener("finish",ht),N.removeListener("end",Mt),N.removeListener("close",Mt),N.removeListener("finish",ht),N.removeListener("end",nt),N.removeListener("error",yt),N.removeListener("close",K)};if(H.signal&&!lt){const F=()=>{const f=Y;Tt(),f.call(N,new u(void 0,{cause:H.signal.reason}))};if(H.signal.aborted)c.nextTick(F);else{const f=Y;Y=g((...S)=>{H.signal.removeEventListener("abort",F),f.apply(N,S)}),H.signal.addEventListener("abort",F)}}return Tt}o.exports=U,o.exports.finished=function(N,H){var Y;let et=!1;return H===null&&(H=h),(Y=H)!==null&&Y!==void 0&&Y.cleanup&&(v(H.cleanup,"cleanup"),et=H.cleanup),new x((ut,ct)=>{const ot=U(N,H,dt=>{et&&ot(),dt?ct(dt):ut()})})}},6307:(o,a,l)=>{const c=l(4155),{PromisePrototypeThen:u,SymbolAsyncIterator:d,SymbolIterator:p}=l(9061),{Buffer:m}=l(8764),{ERR_INVALID_ARG_TYPE:h,ERR_STREAM_NULL_VALUES:g}=l(4381).codes;o.exports=function(y,_,M){let v,x;if(typeof _=="string"||_ instanceof m)return new y({objectMode:!0,...M,read(){this.push(_),this.push(null)}});if(_&&_[d])x=!0,v=_[d]();else{if(!_||!_[p])throw new h("iterable",["Iterable"],_);x=!1,v=_[p]()}const w=new y({objectMode:!0,highWaterMark:1,...M});let b=!1;return w._read=function(){b||(b=!0,async function(){for(;;){try{const{value:E,done:L}=x?await v.next():v.next();if(L)w.push(null);else{const T=E&&typeof E.then=="function"?await E:E;if(T===null)throw b=!1,new g;if(w.push(T))continue;b=!1}}catch(E){w.destroy(E)}break}}())},w._destroy=function(E,L){u(async function(T){const P=T!=null,G=typeof v.throw=="function";if(P&&G){const{value:X,done:$}=await v.throw(T);if(await X,$)return}if(typeof v.return=="function"){const{value:X}=await v.return();await X}}(E),()=>c.nextTick(L,E),T=>c.nextTick(L,T||E))},w}},4870:(o,a,l)=>{const{ArrayIsArray:c,ObjectSetPrototypeOf:u}=l(9061),{EventEmitter:d}=l(7187);function p(h){d.call(this,h)}function m(h,g,y){if(typeof h.prependListener=="function")return h.prependListener(g,y);h._events&&h._events[g]?c(h._events[g])?h._events[g].unshift(y):h._events[g]=[y,h._events[g]]:h.on(g,y)}u(p.prototype,d.prototype),u(p,d),p.prototype.pipe=function(h,g){const y=this;function _(L){h.writable&&h.write(L)===!1&&y.pause&&y.pause()}function M(){y.readable&&y.resume&&y.resume()}y.on("data",_),h.on("drain",M),h._isStdio||g&&g.end===!1||(y.on("end",x),y.on("close",w));let v=!1;function x(){v||(v=!0,h.end())}function w(){v||(v=!0,typeof h.destroy=="function"&&h.destroy())}function b(L){E(),d.listenerCount(this,"error")===0&&this.emit("error",L)}function E(){y.removeListener("data",_),h.removeListener("drain",M),y.removeListener("end",x),y.removeListener("close",w),y.removeListener("error",b),h.removeListener("error",b),y.removeListener("end",E),y.removeListener("close",E),h.removeListener("close",E)}return m(y,"error",b),m(h,"error",b),y.on("end",E),y.on("close",E),h.on("close",E),h.emit("pipe",y),h},o.exports={Stream:p,prependListener:m}},4382:(o,a,l)=>{const c=globalThis.AbortController||l(8599).AbortController,{codes:{ERR_INVALID_ARG_VALUE:u,ERR_INVALID_ARG_TYPE:d,ERR_MISSING_ARGS:p,ERR_OUT_OF_RANGE:m},AbortError:h}=l(4381),{validateAbortSignal:g,validateInteger:y,validateObject:_}=l(6547),M=l(9061).Symbol("kWeak"),{finished:v}=l(8610),x=l(299),{addAbortSignalNoValidate:w}=l(196),{isWritable:b,isNodeStream:E}=l(5874),{ArrayPrototypePush:L,MathFloor:T,Number:P,NumberIsNaN:G,Promise:X,PromiseReject:$,PromisePrototypeThen:O,Symbol:B}=l(9061),C=B("kEmpty"),Z=B("kEof");function D(H,Y){if(typeof H!="function")throw new d("fn",["Function","AsyncFunction"],H);Y!=null&&_(Y,"options"),(Y==null?void 0:Y.signal)!=null&&g(Y.signal,"options.signal");let et=1;return(Y==null?void 0:Y.concurrency)!=null&&(et=T(Y.concurrency)),y(et,"concurrency",1),(async function*(){var ut,ct;const ot=new c,dt=this,It=[],Mt=ot.signal,V={signal:Mt},_t=()=>ot.abort();let ht,Q;Y!=null&&(ut=Y.signal)!==null&&ut!==void 0&&ut.aborted&&_t(),Y==null||(ct=Y.signal)===null||ct===void 0||ct.addEventListener("abort",_t);let nt=!1;function yt(){nt=!0}(async function(){try{for await(let st of dt){var lt;if(nt)return;if(Mt.aborted)throw new h;try{st=H(st,V)}catch(mt){st=$(mt)}st!==C&&(typeof((lt=st)===null||lt===void 0?void 0:lt.catch)=="function"&&st.catch(yt),It.push(st),ht&&(ht(),ht=null),!nt&&It.length&&It.length>=et&&await new X(mt=>{Q=mt}))}It.push(Z)}catch(st){const mt=$(st);O(mt,void 0,yt),It.push(mt)}finally{var K;nt=!0,ht&&(ht(),ht=null),Y==null||(K=Y.signal)===null||K===void 0||K.removeEventListener("abort",_t)}})();try{for(;;){for(;It.length>0;){const lt=await It[0];if(lt===Z)return;if(Mt.aborted)throw new h;lt!==C&&(yield lt),It.shift(),Q&&(Q(),Q=null)}await new X(lt=>{ht=lt})}}finally{ot.abort(),nt=!0,Q&&(Q(),Q=null)}}).call(this)}async function tt(H,Y=void 0){for await(const et of rt.call(this,H,Y))return!0;return!1}function rt(H,Y){if(typeof H!="function")throw new d("fn",["Function","AsyncFunction"],H);return D.call(this,async function(et,ut){return await H(et,ut)?et:C},Y)}class U extends p{constructor(){super("reduce"),this.message="Reduce of an empty stream requires an initial value"}}function N(H){if(H=P(H),G(H))return 0;if(H<0)throw new m("number",">= 0",H);return H}o.exports.streamReturningOperators={asIndexedPairs:function(H=void 0){return H!=null&&_(H,"options"),(H==null?void 0:H.signal)!=null&&g(H.signal,"options.signal"),(async function*(){let Y=0;for await(const ut of this){var et;if(H!=null&&(et=H.signal)!==null&&et!==void 0&&et.aborted)throw new h({cause:H.signal.reason});yield[Y++,ut]}}).call(this)},drop:function(H,Y=void 0){return Y!=null&&_(Y,"options"),(Y==null?void 0:Y.signal)!=null&&g(Y.signal,"options.signal"),H=N(H),(async function*(){var et;if(Y!=null&&(et=Y.signal)!==null&&et!==void 0&&et.aborted)throw new h;for await(const ct of this){var ut;if(Y!=null&&(ut=Y.signal)!==null&&ut!==void 0&&ut.aborted)throw new h;H--<=0&&(yield ct)}}).call(this)},filter:rt,flatMap:function(H,Y){const et=D.call(this,H,Y);return(async function*(){for await(const ut of et)yield*ut}).call(this)},map:D,take:function(H,Y=void 0){return Y!=null&&_(Y,"options"),(Y==null?void 0:Y.signal)!=null&&g(Y.signal,"options.signal"),H=N(H),(async function*(){var et;if(Y!=null&&(et=Y.signal)!==null&&et!==void 0&&et.aborted)throw new h;for await(const ct of this){var ut;if(Y!=null&&(ut=Y.signal)!==null&&ut!==void 0&&ut.aborted)throw new h;if(!(H-- >0))return;yield ct}}).call(this)},compose:function(H,Y){if(Y!=null&&_(Y,"options"),(Y==null?void 0:Y.signal)!=null&&g(Y.signal,"options.signal"),E(H)&&!b(H))throw new u("stream",H,"must be writable");const et=x(this,H);return Y!=null&&Y.signal&&w(Y.signal,et),et}},o.exports.promiseReturningOperators={every:async function(H,Y=void 0){if(typeof H!="function")throw new d("fn",["Function","AsyncFunction"],H);return!await tt.call(this,async(...et)=>!await H(...et),Y)},forEach:async function(H,Y){if(typeof H!="function")throw new d("fn",["Function","AsyncFunction"],H);for await(const et of D.call(this,async function(ut,ct){return await H(ut,ct),C},Y));},reduce:async function(H,Y,et){var ut;if(typeof H!="function")throw new d("reducer",["Function","AsyncFunction"],H);et!=null&&_(et,"options"),(et==null?void 0:et.signal)!=null&&g(et.signal,"options.signal");let ct=arguments.length>1;if(et!=null&&(ut=et.signal)!==null&&ut!==void 0&&ut.aborted){const V=new h(void 0,{cause:et.signal.reason});throw this.once("error",()=>{}),await v(this.destroy(V)),V}const ot=new c,dt=ot.signal;if(et!=null&&et.signal){const V={once:!0,[M]:this};et.signal.addEventListener("abort",()=>ot.abort(),V)}let It=!1;try{for await(const V of this){var Mt;if(It=!0,et!=null&&(Mt=et.signal)!==null&&Mt!==void 0&&Mt.aborted)throw new h;ct?Y=await H(Y,V,{signal:dt}):(Y=V,ct=!0)}if(!It&&!ct)throw new U}finally{ot.abort()}return Y},toArray:async function(H){H!=null&&_(H,"options"),(H==null?void 0:H.signal)!=null&&g(H.signal,"options.signal");const Y=[];for await(const ut of this){var et;if(H!=null&&(et=H.signal)!==null&&et!==void 0&&et.aborted)throw new h(void 0,{cause:H.signal.reason});L(Y,ut)}return Y},some:tt,find:async function(H,Y){for await(const et of rt.call(this,H,Y))return et}}},917:(o,a,l)=>{const{ObjectSetPrototypeOf:c}=l(9061);o.exports=d;const u=l(1161);function d(p){if(!(this instanceof d))return new d(p);u.call(this,p)}c(d.prototype,u.prototype),c(d,u),d.prototype._transform=function(p,m,h){h(null,p)}},9946:(o,a,l)=>{const c=l(4155),{ArrayIsArray:u,Promise:d,SymbolAsyncIterator:p}=l(9061),m=l(8610),{once:h}=l(6087),g=l(1195),y=l(8672),{aggregateTwoErrors:_,codes:{ERR_INVALID_ARG_TYPE:M,ERR_INVALID_RETURN_VALUE:v,ERR_MISSING_ARGS:x,ERR_STREAM_DESTROYED:w,ERR_STREAM_PREMATURE_CLOSE:b},AbortError:E}=l(4381),{validateFunction:L,validateAbortSignal:T}=l(6547),{isIterable:P,isReadable:G,isReadableNodeStream:X,isNodeStream:$,isTransformStream:O,isWebStream:B,isReadableStream:C,isReadableEnded:Z}=l(5874),D=globalThis.AbortController||l(8599).AbortController;let tt,rt;function U(ct,ot,dt){let It=!1;return ct.on("close",()=>{It=!0}),{destroy:Mt=>{It||(It=!0,g.destroyer(ct,Mt||new w("pipe")))},cleanup:m(ct,{readable:ot,writable:dt},Mt=>{It=!Mt})}}function N(ct){if(P(ct))return ct;if(X(ct))return async function*(ot){rt||(rt=l(911)),yield*rt.prototype[p].call(ot)}(ct);throw new M("val",["Readable","Iterable","AsyncIterable"],ct)}async function H(ct,ot,dt,{end:It}){let Mt,V=null;const _t=nt=>{if(nt&&(Mt=nt),V){const yt=V;V=null,yt()}},ht=()=>new d((nt,yt)=>{Mt?yt(Mt):V=()=>{Mt?yt(Mt):nt()}});ot.on("drain",_t);const Q=m(ot,{readable:!1},_t);try{ot.writableNeedDrain&&await ht();for await(const nt of ct)ot.write(nt)||await ht();It&&ot.end(),await ht(),dt()}catch(nt){dt(Mt!==nt?_(Mt,nt):nt)}finally{Q(),ot.off("drain",_t)}}async function Y(ct,ot,dt,{end:It}){O(ot)&&(ot=ot.writable);const Mt=ot.getWriter();try{for await(const V of ct)await Mt.ready,Mt.write(V).catch(()=>{});await Mt.ready,It&&await Mt.close(),dt()}catch(V){try{await Mt.abort(V),dt(V)}catch(_t){dt(_t)}}}function et(ct,ot,dt){if(ct.length===1&&u(ct[0])&&(ct=ct[0]),ct.length<2)throw new x("streams");const It=new D,Mt=It.signal,V=dt==null?void 0:dt.signal,_t=[];function ht(){mt(new E)}let Q,nt;T(V,"options.signal"),V==null||V.addEventListener("abort",ht);const yt=[];let lt,K=0;function st(S){mt(S,--K==0)}function mt(S,A){if(!S||Q&&Q.code!=="ERR_STREAM_PREMATURE_CLOSE"||(Q=S),Q||A){for(;yt.length;)yt.shift()(Q);V==null||V.removeEventListener("abort",ht),It.abort(),A&&(Q||_t.forEach(z=>z()),c.nextTick(ot,Q,nt))}}for(let S=0;S<ct.length;S++){const A=ct[S],z=S<ct.length-1,R=S>0,I=z||(dt==null?void 0:dt.end)!==!1,q=S===ct.length-1;if($(A)){let j=function(k){k&&k.name!=="AbortError"&&k.code!=="ERR_STREAM_PREMATURE_CLOSE"&&st(k)};var f=j;if(I){const{destroy:k,cleanup:at}=U(A,z,R);yt.push(k),G(A)&&q&&_t.push(at)}A.on("error",j),G(A)&&q&&_t.push(()=>{A.removeListener("error",j)})}if(S===0)if(typeof A=="function"){if(lt=A({signal:Mt}),!P(lt))throw new v("Iterable, AsyncIterable or Stream","source",lt)}else lt=P(A)||X(A)||O(A)?A:y.from(A);else if(typeof A=="function"){var Tt;if(lt=O(lt)?N((Tt=lt)===null||Tt===void 0?void 0:Tt.readable):N(lt),lt=A(lt,{signal:Mt}),z){if(!P(lt,!0))throw new v("AsyncIterable",`transform[${S-1}]`,lt)}else{var F;tt||(tt=l(917));const j=new tt({objectMode:!0}),k=(F=lt)===null||F===void 0?void 0:F.then;if(typeof k=="function")K++,k.call(lt,vt=>{nt=vt,vt!=null&&j.write(vt),I&&j.end(),c.nextTick(st)},vt=>{j.destroy(vt),c.nextTick(st,vt)});else if(P(lt,!0))K++,H(lt,j,st,{end:I});else{if(!C(lt)&&!O(lt))throw new v("AsyncIterable or Promise","destination",lt);{const vt=lt.readable||lt;K++,H(vt,j,st,{end:I})}}lt=j;const{destroy:at,cleanup:St}=U(lt,!1,!0);yt.push(at),q&&_t.push(St)}}else if($(A)){if(X(lt)){K+=2;const j=ut(lt,A,st,{end:I});G(A)&&q&&_t.push(j)}else if(O(lt)||C(lt)){const j=lt.readable||lt;K++,H(j,A,st,{end:I})}else{if(!P(lt))throw new M("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],lt);K++,H(lt,A,st,{end:I})}lt=A}else if(B(A)){if(X(lt))K++,Y(N(lt),A,st,{end:I});else if(C(lt)||P(lt))K++,Y(lt,A,st,{end:I});else{if(!O(lt))throw new M("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],lt);K++,Y(lt.readable,A,st,{end:I})}lt=A}else lt=y.from(A)}return(Mt!=null&&Mt.aborted||V!=null&&V.aborted)&&c.nextTick(ht),lt}function ut(ct,ot,dt,{end:It}){let Mt=!1;if(ot.on("close",()=>{Mt||dt(new b)}),ct.pipe(ot,{end:!1}),It){let _t=function(){Mt=!0,ot.end()};var V=_t;Z(ct)?c.nextTick(_t):ct.once("end",_t)}else dt();return m(ct,{readable:!0,writable:!1},_t=>{const ht=ct._readableState;_t&&_t.code==="ERR_STREAM_PREMATURE_CLOSE"&&ht&&ht.ended&&!ht.errored&&!ht.errorEmitted?ct.once("end",dt).once("error",dt):dt(_t)}),m(ot,{readable:!1,writable:!0},dt)}o.exports={pipelineImpl:et,pipeline:function(...ct){return et(ct,h(function(ot){return L(ot[ot.length-1],"streams[stream.length - 1]"),ot.pop()}(ct)))}}},911:(o,a,l)=>{const c=l(4155),{ArrayPrototypeIndexOf:u,NumberIsInteger:d,NumberIsNaN:p,NumberParseInt:m,ObjectDefineProperties:h,ObjectKeys:g,ObjectSetPrototypeOf:y,Promise:_,SafeSet:M,SymbolAsyncIterator:v,Symbol:x}=l(9061);o.exports=dt,dt.ReadableState=ot;const{EventEmitter:w}=l(7187),{Stream:b,prependListener:E}=l(4870),{Buffer:L}=l(8764),{addAbortSignal:T}=l(196),P=l(8610);let G=l(6087).debuglog("stream",R=>{G=R});const X=l(7327),$=l(1195),{getHighWaterMark:O,getDefaultHighWaterMark:B}=l(2457),{aggregateTwoErrors:C,codes:{ERR_INVALID_ARG_TYPE:Z,ERR_METHOD_NOT_IMPLEMENTED:D,ERR_OUT_OF_RANGE:tt,ERR_STREAM_PUSH_AFTER_EOF:rt,ERR_STREAM_UNSHIFT_AFTER_END_EVENT:U}}=l(4381),{validateObject:N}=l(6547),H=x("kPaused"),{StringDecoder:Y}=l(2553),et=l(6307);y(dt.prototype,b.prototype),y(dt,b);const ut=()=>{},{errorOrDestroy:ct}=$;function ot(R,I,q){typeof q!="boolean"&&(q=I instanceof l(8672)),this.objectMode=!(!R||!R.objectMode),q&&(this.objectMode=this.objectMode||!(!R||!R.readableObjectMode)),this.highWaterMark=R?O(this,R,"readableHighWaterMark",q):B(!1),this.buffer=new X,this.length=0,this.pipes=[],this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.constructed=!0,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this[H]=null,this.errorEmitted=!1,this.emitClose=!R||R.emitClose!==!1,this.autoDestroy=!R||R.autoDestroy!==!1,this.destroyed=!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this.defaultEncoding=R&&R.defaultEncoding||"utf8",this.awaitDrainWriters=null,this.multiAwaitDrain=!1,this.readingMore=!1,this.dataEmitted=!1,this.decoder=null,this.encoding=null,R&&R.encoding&&(this.decoder=new Y(R.encoding),this.encoding=R.encoding)}function dt(R){if(!(this instanceof dt))return new dt(R);const I=this instanceof l(8672);this._readableState=new ot(R,this,I),R&&(typeof R.read=="function"&&(this._read=R.read),typeof R.destroy=="function"&&(this._destroy=R.destroy),typeof R.construct=="function"&&(this._construct=R.construct),R.signal&&!I&&T(R.signal,this)),b.call(this,R),$.construct(this,()=>{this._readableState.needReadable&&Q(this,this._readableState)})}function It(R,I,q,j){G("readableAddChunk",I);const k=R._readableState;let at;if(k.objectMode||(typeof I=="string"?(q=q||k.defaultEncoding,k.encoding!==q&&(j&&k.encoding?I=L.from(I,q).toString(k.encoding):(I=L.from(I,q),q=""))):I instanceof L?q="":b._isUint8Array(I)?(I=b._uint8ArrayToBuffer(I),q=""):I!=null&&(at=new Z("chunk",["string","Buffer","Uint8Array"],I))),at)ct(R,at);else if(I===null)k.reading=!1,function(St,vt){if(G("onEofChunk"),!vt.ended){if(vt.decoder){const Rt=vt.decoder.end();Rt&&Rt.length&&(vt.buffer.push(Rt),vt.length+=vt.objectMode?1:Rt.length)}vt.ended=!0,vt.sync?_t(St):(vt.needReadable=!1,vt.emittedReadable=!0,ht(St))}}(R,k);else if(k.objectMode||I&&I.length>0)if(j)if(k.endEmitted)ct(R,new U);else{if(k.destroyed||k.errored)return!1;Mt(R,k,I,!0)}else if(k.ended)ct(R,new rt);else{if(k.destroyed||k.errored)return!1;k.reading=!1,k.decoder&&!q?(I=k.decoder.write(I),k.objectMode||I.length!==0?Mt(R,k,I,!1):Q(R,k)):Mt(R,k,I,!1)}else j||(k.reading=!1,Q(R,k));return!k.ended&&(k.length<k.highWaterMark||k.length===0)}function Mt(R,I,q,j){I.flowing&&I.length===0&&!I.sync&&R.listenerCount("data")>0?(I.multiAwaitDrain?I.awaitDrainWriters.clear():I.awaitDrainWriters=null,I.dataEmitted=!0,R.emit("data",q)):(I.length+=I.objectMode?1:q.length,j?I.buffer.unshift(q):I.buffer.push(q),I.needReadable&&_t(R)),Q(R,I)}function V(R,I){return R<=0||I.length===0&&I.ended?0:I.objectMode?1:p(R)?I.flowing&&I.length?I.buffer.first().length:I.length:R<=I.length?R:I.ended?I.length:0}function _t(R){const I=R._readableState;G("emitReadable",I.needReadable,I.emittedReadable),I.needReadable=!1,I.emittedReadable||(G("emitReadable",I.flowing),I.emittedReadable=!0,c.nextTick(ht,R))}function ht(R){const I=R._readableState;G("emitReadable_",I.destroyed,I.length,I.ended),I.destroyed||I.errored||!I.length&&!I.ended||(R.emit("readable"),I.emittedReadable=!1),I.needReadable=!I.flowing&&!I.ended&&I.length<=I.highWaterMark,st(R)}function Q(R,I){!I.readingMore&&I.constructed&&(I.readingMore=!0,c.nextTick(nt,R,I))}function nt(R,I){for(;!I.reading&&!I.ended&&(I.length<I.highWaterMark||I.flowing&&I.length===0);){const q=I.length;if(G("maybeReadMore read 0"),R.read(0),q===I.length)break}I.readingMore=!1}function yt(R){const I=R._readableState;I.readableListening=R.listenerCount("readable")>0,I.resumeScheduled&&I[H]===!1?I.flowing=!0:R.listenerCount("data")>0?R.resume():I.readableListening||(I.flowing=null)}function lt(R){G("readable nexttick read 0"),R.read(0)}function K(R,I){G("resume",I.reading),I.reading||R.read(0),I.resumeScheduled=!1,R.emit("resume"),st(R),I.flowing&&!I.reading&&R.read(0)}function st(R){const I=R._readableState;for(G("flow",I.flowing);I.flowing&&R.read()!==null;);}function mt(R,I){typeof R.read!="function"&&(R=dt.wrap(R,{objectMode:!0}));const q=async function*(j,k){let at,St=ut;function vt(Dt){this===j?(St(),St=ut):St=Dt}j.on("readable",vt);const Rt=P(j,{writable:!1},Dt=>{at=Dt?C(at,Dt):null,St(),St=ut});try{for(;;){const Dt=j.destroyed?null:j.read();if(Dt!==null)yield Dt;else{if(at)throw at;if(at===null)return;await new _(vt)}}}catch(Dt){throw at=C(at,Dt),at}finally{!at&&(k==null?void 0:k.destroyOnReturn)===!1||at!==void 0&&!j._readableState.autoDestroy?(j.off("readable",vt),Rt()):$.destroyer(j,null)}}(R,I);return q.stream=R,q}function Tt(R,I){if(I.length===0)return null;let q;return I.objectMode?q=I.buffer.shift():!R||R>=I.length?(q=I.decoder?I.buffer.join(""):I.buffer.length===1?I.buffer.first():I.buffer.concat(I.length),I.buffer.clear()):q=I.buffer.consume(R,I.decoder),q}function F(R){const I=R._readableState;G("endReadable",I.endEmitted),I.endEmitted||(I.ended=!0,c.nextTick(f,I,R))}function f(R,I){if(G("endReadableNT",R.endEmitted,R.length),!R.errored&&!R.closeEmitted&&!R.endEmitted&&R.length===0){if(R.endEmitted=!0,I.emit("end"),I.writable&&I.allowHalfOpen===!1)c.nextTick(S,I);else if(R.autoDestroy){const q=I._writableState;(!q||q.autoDestroy&&(q.finished||q.writable===!1))&&I.destroy()}}}function S(R){R.writable&&!R.writableEnded&&!R.destroyed&&R.end()}let A;function z(){return A===void 0&&(A={}),A}dt.prototype.destroy=$.destroy,dt.prototype._undestroy=$.undestroy,dt.prototype._destroy=function(R,I){I(R)},dt.prototype[w.captureRejectionSymbol]=function(R){this.destroy(R)},dt.prototype.push=function(R,I){return It(this,R,I,!1)},dt.prototype.unshift=function(R,I){return It(this,R,I,!0)},dt.prototype.isPaused=function(){const R=this._readableState;return R[H]===!0||R.flowing===!1},dt.prototype.setEncoding=function(R){const I=new Y(R);this._readableState.decoder=I,this._readableState.encoding=this._readableState.decoder.encoding;const q=this._readableState.buffer;let j="";for(const k of q)j+=I.write(k);return q.clear(),j!==""&&q.push(j),this._readableState.length=j.length,this},dt.prototype.read=function(R){G("read",R),R===void 0?R=NaN:d(R)||(R=m(R,10));const I=this._readableState,q=R;if(R>I.highWaterMark&&(I.highWaterMark=function(at){if(at>1073741824)throw new tt("size","<= 1GiB",at);return at--,at|=at>>>1,at|=at>>>2,at|=at>>>4,at|=at>>>8,at|=at>>>16,++at}(R)),R!==0&&(I.emittedReadable=!1),R===0&&I.needReadable&&((I.highWaterMark!==0?I.length>=I.highWaterMark:I.length>0)||I.ended))return G("read: emitReadable",I.length,I.ended),I.length===0&&I.ended?F(this):_t(this),null;if((R=V(R,I))===0&&I.ended)return I.length===0&&F(this),null;let j,k=I.needReadable;if(G("need readable",k),(I.length===0||I.length-R<I.highWaterMark)&&(k=!0,G("length less than watermark",k)),I.ended||I.reading||I.destroyed||I.errored||!I.constructed)k=!1,G("reading, ended or constructing",k);else if(k){G("do read"),I.reading=!0,I.sync=!0,I.length===0&&(I.needReadable=!0);try{this._read(I.highWaterMark)}catch(at){ct(this,at)}I.sync=!1,I.reading||(R=V(q,I))}return j=R>0?Tt(R,I):null,j===null?(I.needReadable=I.length<=I.highWaterMark,R=0):(I.length-=R,I.multiAwaitDrain?I.awaitDrainWriters.clear():I.awaitDrainWriters=null),I.length===0&&(I.ended||(I.needReadable=!0),q!==R&&I.ended&&F(this)),j===null||I.errorEmitted||I.closeEmitted||(I.dataEmitted=!0,this.emit("data",j)),j},dt.prototype._read=function(R){throw new D("_read()")},dt.prototype.pipe=function(R,I){const q=this,j=this._readableState;j.pipes.length===1&&(j.multiAwaitDrain||(j.multiAwaitDrain=!0,j.awaitDrainWriters=new M(j.awaitDrainWriters?[j.awaitDrainWriters]:[]))),j.pipes.push(R),G("pipe count=%d opts=%j",j.pipes.length,I);const k=I&&I.end===!1||R===c.stdout||R===c.stderr?gt:at;function at(){G("onend"),R.end()}let St;j.endEmitted?c.nextTick(k):q.once("end",k),R.on("unpipe",function Et(At,Ft){G("onunpipe"),At===q&&Ft&&Ft.hasUnpiped===!1&&(Ft.hasUnpiped=!0,G("cleanup"),R.removeListener("close",it),R.removeListener("finish",Ct),St&&R.removeListener("drain",St),R.removeListener("error",qt),R.removeListener("unpipe",Et),q.removeListener("end",at),q.removeListener("end",gt),q.removeListener("data",Dt),vt=!0,St&&j.awaitDrainWriters&&(!R._writableState||R._writableState.needDrain)&&St())});let vt=!1;function Rt(){vt||(j.pipes.length===1&&j.pipes[0]===R?(G("false write response, pause",0),j.awaitDrainWriters=R,j.multiAwaitDrain=!1):j.pipes.length>1&&j.pipes.includes(R)&&(G("false write response, pause",j.awaitDrainWriters.size),j.awaitDrainWriters.add(R)),q.pause()),St||(St=function(Et,At){return function(){const Ft=Et._readableState;Ft.awaitDrainWriters===At?(G("pipeOnDrain",1),Ft.awaitDrainWriters=null):Ft.multiAwaitDrain&&(G("pipeOnDrain",Ft.awaitDrainWriters.size),Ft.awaitDrainWriters.delete(At)),Ft.awaitDrainWriters&&Ft.awaitDrainWriters.size!==0||!Et.listenerCount("data")||Et.resume()}}(q,R),R.on("drain",St))}function Dt(Et){G("ondata");const At=R.write(Et);G("dest.write",At),At===!1&&Rt()}function qt(Et){if(G("onerror",Et),gt(),R.removeListener("error",qt),R.listenerCount("error")===0){const At=R._writableState||R._readableState;At&&!At.errorEmitted?ct(R,Et):R.emit("error",Et)}}function it(){R.removeListener("finish",Ct),gt()}function Ct(){G("onfinish"),R.removeListener("close",it),gt()}function gt(){G("unpipe"),q.unpipe(R)}return q.on("data",Dt),E(R,"error",qt),R.once("close",it),R.once("finish",Ct),R.emit("pipe",q),R.writableNeedDrain===!0?j.flowing&&Rt():j.flowing||(G("pipe resume"),q.resume()),R},dt.prototype.unpipe=function(R){const I=this._readableState;if(I.pipes.length===0)return this;if(!R){const j=I.pipes;I.pipes=[],this.pause();for(let k=0;k<j.length;k++)j[k].emit("unpipe",this,{hasUnpiped:!1});return this}const q=u(I.pipes,R);return q===-1||(I.pipes.splice(q,1),I.pipes.length===0&&this.pause(),R.emit("unpipe",this,{hasUnpiped:!1})),this},dt.prototype.on=function(R,I){const q=b.prototype.on.call(this,R,I),j=this._readableState;return R==="data"?(j.readableListening=this.listenerCount("readable")>0,j.flowing!==!1&&this.resume()):R==="readable"&&(j.endEmitted||j.readableListening||(j.readableListening=j.needReadable=!0,j.flowing=!1,j.emittedReadable=!1,G("on readable",j.length,j.reading),j.length?_t(this):j.reading||c.nextTick(lt,this))),q},dt.prototype.addListener=dt.prototype.on,dt.prototype.removeListener=function(R,I){const q=b.prototype.removeListener.call(this,R,I);return R==="readable"&&c.nextTick(yt,this),q},dt.prototype.off=dt.prototype.removeListener,dt.prototype.removeAllListeners=function(R){const I=b.prototype.removeAllListeners.apply(this,arguments);return R!=="readable"&&R!==void 0||c.nextTick(yt,this),I},dt.prototype.resume=function(){const R=this._readableState;return R.flowing||(G("resume"),R.flowing=!R.readableListening,function(I,q){q.resumeScheduled||(q.resumeScheduled=!0,c.nextTick(K,I,q))}(this,R)),R[H]=!1,this},dt.prototype.pause=function(){return G("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(G("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState[H]=!0,this},dt.prototype.wrap=function(R){let I=!1;R.on("data",j=>{!this.push(j)&&R.pause&&(I=!0,R.pause())}),R.on("end",()=>{this.push(null)}),R.on("error",j=>{ct(this,j)}),R.on("close",()=>{this.destroy()}),R.on("destroy",()=>{this.destroy()}),this._read=()=>{I&&R.resume&&(I=!1,R.resume())};const q=g(R);for(let j=1;j<q.length;j++){const k=q[j];this[k]===void 0&&typeof R[k]=="function"&&(this[k]=R[k].bind(R))}return this},dt.prototype[v]=function(){return mt(this)},dt.prototype.iterator=function(R){return R!==void 0&&N(R,"options"),mt(this,R)},h(dt.prototype,{readable:{__proto__:null,get(){const R=this._readableState;return!(!R||R.readable===!1||R.destroyed||R.errorEmitted||R.endEmitted)},set(R){this._readableState&&(this._readableState.readable=!!R)}},readableDidRead:{__proto__:null,enumerable:!1,get:function(){return this._readableState.dataEmitted}},readableAborted:{__proto__:null,enumerable:!1,get:function(){return!(this._readableState.readable===!1||!this._readableState.destroyed&&!this._readableState.errored||this._readableState.endEmitted)}},readableHighWaterMark:{__proto__:null,enumerable:!1,get:function(){return this._readableState.highWaterMark}},readableBuffer:{__proto__:null,enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}},readableFlowing:{__proto__:null,enumerable:!1,get:function(){return this._readableState.flowing},set:function(R){this._readableState&&(this._readableState.flowing=R)}},readableLength:{__proto__:null,enumerable:!1,get(){return this._readableState.length}},readableObjectMode:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.objectMode}},readableEncoding:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.encoding:null}},errored:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.errored:null}},closed:{__proto__:null,get(){return!!this._readableState&&this._readableState.closed}},destroyed:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.destroyed},set(R){this._readableState&&(this._readableState.destroyed=R)}},readableEnded:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.endEmitted}}}),h(ot.prototype,{pipesCount:{__proto__:null,get(){return this.pipes.length}},paused:{__proto__:null,get(){return this[H]!==!1},set(R){this[H]=!!R}}}),dt._fromList=Tt,dt.from=function(R,I){return et(dt,R,I)},dt.fromWeb=function(R,I){return z().newStreamReadableFromReadableStream(R,I)},dt.toWeb=function(R,I){return z().newReadableStreamFromStreamReadable(R,I)},dt.wrap=function(R,I){var q,j;return new dt({objectMode:(q=(j=R.readableObjectMode)!==null&&j!==void 0?j:R.objectMode)===null||q===void 0||q,...I,destroy(k,at){$.destroyer(R,k),at(k)}}).wrap(R)}},2457:(o,a,l)=>{const{MathFloor:c,NumberIsInteger:u}=l(9061),{ERR_INVALID_ARG_VALUE:d}=l(4381).codes;function p(m){return m?16:16384}o.exports={getHighWaterMark:function(m,h,g,y){const _=function(M,v,x){return M.highWaterMark!=null?M.highWaterMark:v?M[x]:null}(h,y,g);if(_!=null){if(!u(_)||_<0)throw new d(y?`options.${g}`:"options.highWaterMark",_);return c(_)}return p(m.objectMode)},getDefaultHighWaterMark:p}},1161:(o,a,l)=>{const{ObjectSetPrototypeOf:c,Symbol:u}=l(9061);o.exports=g;const{ERR_METHOD_NOT_IMPLEMENTED:d}=l(4381).codes,p=l(8672),{getHighWaterMark:m}=l(2457);c(g.prototype,p.prototype),c(g,p);const h=u("kCallback");function g(M){if(!(this instanceof g))return new g(M);const v=M?m(this,M,"readableHighWaterMark",!0):null;v===0&&(M={...M,highWaterMark:null,readableHighWaterMark:v,writableHighWaterMark:M.writableHighWaterMark||0}),p.call(this,M),this._readableState.sync=!1,this[h]=null,M&&(typeof M.transform=="function"&&(this._transform=M.transform),typeof M.flush=="function"&&(this._flush=M.flush)),this.on("prefinish",_)}function y(M){typeof this._flush!="function"||this.destroyed?(this.push(null),M&&M()):this._flush((v,x)=>{v?M?M(v):this.destroy(v):(x!=null&&this.push(x),this.push(null),M&&M())})}function _(){this._final!==y&&y.call(this)}g.prototype._final=y,g.prototype._transform=function(M,v,x){throw new d("_transform()")},g.prototype._write=function(M,v,x){const w=this._readableState,b=this._writableState,E=w.length;this._transform(M,v,(L,T)=>{L?x(L):(T!=null&&this.push(T),b.ended||E===w.length||w.length<w.highWaterMark?x():this[h]=x)})},g.prototype._read=function(){if(this[h]){const M=this[h];this[h]=null,M()}}},5874:(o,a,l)=>{const{Symbol:c,SymbolAsyncIterator:u,SymbolIterator:d,SymbolFor:p}=l(9061),m=c("kDestroyed"),h=c("kIsErrored"),g=c("kIsReadable"),y=c("kIsDisturbed"),_=p("nodejs.webstream.isClosedPromise"),M=p("nodejs.webstream.controllerErrorFunction");function v(C,Z=!1){var D;return!(!C||typeof C.pipe!="function"||typeof C.on!="function"||Z&&(typeof C.pause!="function"||typeof C.resume!="function")||C._writableState&&((D=C._readableState)===null||D===void 0?void 0:D.readable)===!1||C._writableState&&!C._readableState)}function x(C){var Z;return!(!C||typeof C.write!="function"||typeof C.on!="function"||C._readableState&&((Z=C._writableState)===null||Z===void 0?void 0:Z.writable)===!1)}function w(C){return C&&(C._readableState||C._writableState||typeof C.write=="function"&&typeof C.on=="function"||typeof C.pipe=="function"&&typeof C.on=="function")}function b(C){return!(!C||w(C)||typeof C.pipeThrough!="function"||typeof C.getReader!="function"||typeof C.cancel!="function")}function E(C){return!(!C||w(C)||typeof C.getWriter!="function"||typeof C.abort!="function")}function L(C){return!(!C||w(C)||typeof C.readable!="object"||typeof C.writable!="object")}function T(C){if(!w(C))return null;const Z=C._writableState,D=C._readableState,tt=Z||D;return!!(C.destroyed||C[m]||tt!=null&&tt.destroyed)}function P(C){if(!x(C))return null;if(C.writableEnded===!0)return!0;const Z=C._writableState;return(Z==null||!Z.errored)&&(typeof(Z==null?void 0:Z.ended)!="boolean"?null:Z.ended)}function G(C,Z){if(!v(C))return null;const D=C._readableState;return(D==null||!D.errored)&&(typeof(D==null?void 0:D.endEmitted)!="boolean"?null:!!(D.endEmitted||Z===!1&&D.ended===!0&&D.length===0))}function X(C){return C&&C[g]!=null?C[g]:typeof(C==null?void 0:C.readable)!="boolean"?null:!T(C)&&v(C)&&C.readable&&!G(C)}function $(C){return typeof(C==null?void 0:C.writable)!="boolean"?null:!T(C)&&x(C)&&C.writable&&!P(C)}function O(C){return typeof C._closed=="boolean"&&typeof C._defaultKeepAlive=="boolean"&&typeof C._removedConnection=="boolean"&&typeof C._removedContLen=="boolean"}function B(C){return typeof C._sent100=="boolean"&&O(C)}o.exports={kDestroyed:m,isDisturbed:function(C){var Z;return!(!C||!((Z=C[y])!==null&&Z!==void 0?Z:C.readableDidRead||C.readableAborted))},kIsDisturbed:y,isErrored:function(C){var Z,D,tt,rt,U,N,H,Y,et,ut;return!(!C||!((Z=(D=(tt=(rt=(U=(N=C[h])!==null&&N!==void 0?N:C.readableErrored)!==null&&U!==void 0?U:C.writableErrored)!==null&&rt!==void 0?rt:(H=C._readableState)===null||H===void 0?void 0:H.errorEmitted)!==null&&tt!==void 0?tt:(Y=C._writableState)===null||Y===void 0?void 0:Y.errorEmitted)!==null&&D!==void 0?D:(et=C._readableState)===null||et===void 0?void 0:et.errored)!==null&&Z!==void 0?Z:!((ut=C._writableState)===null||ut===void 0)&&ut.errored))},kIsErrored:h,isReadable:X,kIsReadable:g,kIsClosedPromise:_,kControllerErrorFunction:M,isClosed:function(C){if(!w(C))return null;if(typeof C.closed=="boolean")return C.closed;const Z=C._writableState,D=C._readableState;return typeof(Z==null?void 0:Z.closed)=="boolean"||typeof(D==null?void 0:D.closed)=="boolean"?(Z==null?void 0:Z.closed)||(D==null?void 0:D.closed):typeof C._closed=="boolean"&&O(C)?C._closed:null},isDestroyed:T,isDuplexNodeStream:function(C){return!(!C||typeof C.pipe!="function"||!C._readableState||typeof C.on!="function"||typeof C.write!="function")},isFinished:function(C,Z){return w(C)?!(!T(C)&&((Z==null?void 0:Z.readable)!==!1&&X(C)||(Z==null?void 0:Z.writable)!==!1&&$(C))):null},isIterable:function(C,Z){return C!=null&&(Z===!0?typeof C[u]=="function":Z===!1?typeof C[d]=="function":typeof C[u]=="function"||typeof C[d]=="function")},isReadableNodeStream:v,isReadableStream:b,isReadableEnded:function(C){if(!v(C))return null;if(C.readableEnded===!0)return!0;const Z=C._readableState;return!(!Z||Z.errored)&&(typeof(Z==null?void 0:Z.ended)!="boolean"?null:Z.ended)},isReadableFinished:G,isReadableErrored:function(C){var Z,D;return w(C)?C.readableErrored?C.readableErrored:(Z=(D=C._readableState)===null||D===void 0?void 0:D.errored)!==null&&Z!==void 0?Z:null:null},isNodeStream:w,isWebStream:function(C){return b(C)||E(C)||L(C)},isWritable:$,isWritableNodeStream:x,isWritableStream:E,isWritableEnded:P,isWritableFinished:function(C,Z){if(!x(C))return null;if(C.writableFinished===!0)return!0;const D=C._writableState;return(D==null||!D.errored)&&(typeof(D==null?void 0:D.finished)!="boolean"?null:!!(D.finished||Z===!1&&D.ended===!0&&D.length===0))},isWritableErrored:function(C){var Z,D;return w(C)?C.writableErrored?C.writableErrored:(Z=(D=C._writableState)===null||D===void 0?void 0:D.errored)!==null&&Z!==void 0?Z:null:null},isServerRequest:function(C){var Z;return typeof C._consuming=="boolean"&&typeof C._dumped=="boolean"&&((Z=C.req)===null||Z===void 0?void 0:Z.upgradeOrConnect)===void 0},isServerResponse:B,willEmitClose:function(C){if(!w(C))return null;const Z=C._writableState,D=C._readableState,tt=Z||D;return!tt&&B(C)||!!(tt&&tt.autoDestroy&&tt.emitClose&&tt.closed===!1)},isTransformStream:L}},6304:(o,a,l)=>{const c=l(4155),{ArrayPrototypeSlice:u,Error:d,FunctionPrototypeSymbolHasInstance:p,ObjectDefineProperty:m,ObjectDefineProperties:h,ObjectSetPrototypeOf:g,StringPrototypeToLowerCase:y,Symbol:_,SymbolHasInstance:M}=l(9061);o.exports=Y,Y.WritableState=N;const{EventEmitter:v}=l(7187),x=l(4870).Stream,{Buffer:w}=l(8764),b=l(1195),{addAbortSignal:E}=l(196),{getHighWaterMark:L,getDefaultHighWaterMark:T}=l(2457),{ERR_INVALID_ARG_TYPE:P,ERR_METHOD_NOT_IMPLEMENTED:G,ERR_MULTIPLE_CALLBACK:X,ERR_STREAM_CANNOT_PIPE:$,ERR_STREAM_DESTROYED:O,ERR_STREAM_ALREADY_FINISHED:B,ERR_STREAM_NULL_VALUES:C,ERR_STREAM_WRITE_AFTER_END:Z,ERR_UNKNOWN_ENCODING:D}=l(4381).codes,{errorOrDestroy:tt}=b;function rt(){}g(Y.prototype,x.prototype),g(Y,x);const U=_("kOnFinished");function N(K,st,mt){typeof mt!="boolean"&&(mt=st instanceof l(8672)),this.objectMode=!(!K||!K.objectMode),mt&&(this.objectMode=this.objectMode||!(!K||!K.writableObjectMode)),this.highWaterMark=K?L(this,K,"writableHighWaterMark",mt):T(!1),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;const Tt=!(!K||K.decodeStrings!==!1);this.decodeStrings=!Tt,this.defaultEncoding=K&&K.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=ot.bind(void 0,st),this.writecb=null,this.writelen=0,this.afterWriteTickInfo=null,H(this),this.pendingcb=0,this.constructed=!0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!K||K.emitClose!==!1,this.autoDestroy=!K||K.autoDestroy!==!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this[U]=[]}function H(K){K.buffered=[],K.bufferedIndex=0,K.allBuffers=!0,K.allNoop=!0}function Y(K){const st=this instanceof l(8672);if(!st&&!p(Y,this))return new Y(K);this._writableState=new N(K,this,st),K&&(typeof K.write=="function"&&(this._write=K.write),typeof K.writev=="function"&&(this._writev=K.writev),typeof K.destroy=="function"&&(this._destroy=K.destroy),typeof K.final=="function"&&(this._final=K.final),typeof K.construct=="function"&&(this._construct=K.construct),K.signal&&E(K.signal,this)),x.call(this,K),b.construct(this,()=>{const mt=this._writableState;mt.writing||V(this,mt),ht(this,mt)})}function et(K,st,mt,Tt){const F=K._writableState;if(typeof mt=="function")Tt=mt,mt=F.defaultEncoding;else{if(mt){if(mt!=="buffer"&&!w.isEncoding(mt))throw new D(mt)}else mt=F.defaultEncoding;typeof Tt!="function"&&(Tt=rt)}if(st===null)throw new C;if(!F.objectMode)if(typeof st=="string")F.decodeStrings!==!1&&(st=w.from(st,mt),mt="buffer");else if(st instanceof w)mt="buffer";else{if(!x._isUint8Array(st))throw new P("chunk",["string","Buffer","Uint8Array"],st);st=x._uint8ArrayToBuffer(st),mt="buffer"}let f;return F.ending?f=new Z:F.destroyed&&(f=new O("write")),f?(c.nextTick(Tt,f),tt(K,f,!0),f):(F.pendingcb++,function(S,A,z,R,I){const q=A.objectMode?1:z.length;A.length+=q;const j=A.length<A.highWaterMark;return j||(A.needDrain=!0),A.writing||A.corked||A.errored||!A.constructed?(A.buffered.push({chunk:z,encoding:R,callback:I}),A.allBuffers&&R!=="buffer"&&(A.allBuffers=!1),A.allNoop&&I!==rt&&(A.allNoop=!1)):(A.writelen=q,A.writecb=I,A.writing=!0,A.sync=!0,S._write(z,R,A.onwrite),A.sync=!1),j&&!A.errored&&!A.destroyed}(K,F,st,mt,Tt))}function ut(K,st,mt,Tt,F,f,S){st.writelen=Tt,st.writecb=S,st.writing=!0,st.sync=!0,st.destroyed?st.onwrite(new O("write")):mt?K._writev(F,st.onwrite):K._write(F,f,st.onwrite),st.sync=!1}function ct(K,st,mt,Tt){--st.pendingcb,Tt(mt),Mt(st),tt(K,mt)}function ot(K,st){const mt=K._writableState,Tt=mt.sync,F=mt.writecb;typeof F=="function"?(mt.writing=!1,mt.writecb=null,mt.length-=mt.writelen,mt.writelen=0,st?(st.stack,mt.errored||(mt.errored=st),K._readableState&&!K._readableState.errored&&(K._readableState.errored=st),Tt?c.nextTick(ct,K,mt,st,F):ct(K,mt,st,F)):(mt.buffered.length>mt.bufferedIndex&&V(K,mt),Tt?mt.afterWriteTickInfo!==null&&mt.afterWriteTickInfo.cb===F?mt.afterWriteTickInfo.count++:(mt.afterWriteTickInfo={count:1,cb:F,stream:K,state:mt},c.nextTick(dt,mt.afterWriteTickInfo)):It(K,mt,1,F))):tt(K,new X)}function dt({stream:K,state:st,count:mt,cb:Tt}){return st.afterWriteTickInfo=null,It(K,st,mt,Tt)}function It(K,st,mt,Tt){for(!st.ending&&!K.destroyed&&st.length===0&&st.needDrain&&(st.needDrain=!1,K.emit("drain"));mt-- >0;)st.pendingcb--,Tt();st.destroyed&&Mt(st),ht(K,st)}function Mt(K){if(K.writing)return;for(let F=K.bufferedIndex;F<K.buffered.length;++F){var st;const{chunk:f,callback:S}=K.buffered[F],A=K.objectMode?1:f.length;K.length-=A,S((st=K.errored)!==null&&st!==void 0?st:new O("write"))}const mt=K[U].splice(0);for(let F=0;F<mt.length;F++){var Tt;mt[F]((Tt=K.errored)!==null&&Tt!==void 0?Tt:new O("end"))}H(K)}function V(K,st){if(st.corked||st.bufferProcessing||st.destroyed||!st.constructed)return;const{buffered:mt,bufferedIndex:Tt,objectMode:F}=st,f=mt.length-Tt;if(!f)return;let S=Tt;if(st.bufferProcessing=!0,f>1&&K._writev){st.pendingcb-=f-1;const A=st.allNoop?rt:R=>{for(let I=S;I<mt.length;++I)mt[I].callback(R)},z=st.allNoop&&S===0?mt:u(mt,S);z.allBuffers=st.allBuffers,ut(K,st,!0,st.length,z,"",A),H(st)}else{do{const{chunk:A,encoding:z,callback:R}=mt[S];mt[S++]=null,ut(K,st,!1,F?1:A.length,A,z,R)}while(S<mt.length&&!st.writing);S===mt.length?H(st):S>256?(mt.splice(0,S),st.bufferedIndex=0):st.bufferedIndex=S}st.bufferProcessing=!1}function _t(K){return K.ending&&!K.destroyed&&K.constructed&&K.length===0&&!K.errored&&K.buffered.length===0&&!K.finished&&!K.writing&&!K.errorEmitted&&!K.closeEmitted}function ht(K,st,mt){_t(st)&&(function(Tt,F){F.prefinished||F.finalCalled||(typeof Tt._final!="function"||F.destroyed?(F.prefinished=!0,Tt.emit("prefinish")):(F.finalCalled=!0,function(f,S){let A=!1;function z(R){if(A)tt(f,R??X());else if(A=!0,S.pendingcb--,R){const I=S[U].splice(0);for(let q=0;q<I.length;q++)I[q](R);tt(f,R,S.sync)}else _t(S)&&(S.prefinished=!0,f.emit("prefinish"),S.pendingcb++,c.nextTick(Q,f,S))}S.sync=!0,S.pendingcb++;try{f._final(z)}catch(R){z(R)}S.sync=!1}(Tt,F)))}(K,st),st.pendingcb===0&&(mt?(st.pendingcb++,c.nextTick((Tt,F)=>{_t(F)?Q(Tt,F):F.pendingcb--},K,st)):_t(st)&&(st.pendingcb++,Q(K,st))))}function Q(K,st){st.pendingcb--,st.finished=!0;const mt=st[U].splice(0);for(let Tt=0;Tt<mt.length;Tt++)mt[Tt]();if(K.emit("finish"),st.autoDestroy){const Tt=K._readableState;(!Tt||Tt.autoDestroy&&(Tt.endEmitted||Tt.readable===!1))&&K.destroy()}}N.prototype.getBuffer=function(){return u(this.buffered,this.bufferedIndex)},m(N.prototype,"bufferedRequestCount",{__proto__:null,get(){return this.buffered.length-this.bufferedIndex}}),m(Y,M,{__proto__:null,value:function(K){return!!p(this,K)||this===Y&&K&&K._writableState instanceof N}}),Y.prototype.pipe=function(){tt(this,new $)},Y.prototype.write=function(K,st,mt){return et(this,K,st,mt)===!0},Y.prototype.cork=function(){this._writableState.corked++},Y.prototype.uncork=function(){const K=this._writableState;K.corked&&(K.corked--,K.writing||V(this,K))},Y.prototype.setDefaultEncoding=function(K){if(typeof K=="string"&&(K=y(K)),!w.isEncoding(K))throw new D(K);return this._writableState.defaultEncoding=K,this},Y.prototype._write=function(K,st,mt){if(!this._writev)throw new G("_write()");this._writev([{chunk:K,encoding:st}],mt)},Y.prototype._writev=null,Y.prototype.end=function(K,st,mt){const Tt=this._writableState;let F;if(typeof K=="function"?(mt=K,K=null,st=null):typeof st=="function"&&(mt=st,st=null),K!=null){const f=et(this,K,st);f instanceof d&&(F=f)}return Tt.corked&&(Tt.corked=1,this.uncork()),F||(Tt.errored||Tt.ending?Tt.finished?F=new B("end"):Tt.destroyed&&(F=new O("end")):(Tt.ending=!0,ht(this,Tt,!0),Tt.ended=!0)),typeof mt=="function"&&(F||Tt.finished?c.nextTick(mt,F):Tt[U].push(mt)),this},h(Y.prototype,{closed:{__proto__:null,get(){return!!this._writableState&&this._writableState.closed}},destroyed:{__proto__:null,get(){return!!this._writableState&&this._writableState.destroyed},set(K){this._writableState&&(this._writableState.destroyed=K)}},writable:{__proto__:null,get(){const K=this._writableState;return!(!K||K.writable===!1||K.destroyed||K.errored||K.ending||K.ended)},set(K){this._writableState&&(this._writableState.writable=!!K)}},writableFinished:{__proto__:null,get(){return!!this._writableState&&this._writableState.finished}},writableObjectMode:{__proto__:null,get(){return!!this._writableState&&this._writableState.objectMode}},writableBuffer:{__proto__:null,get(){return this._writableState&&this._writableState.getBuffer()}},writableEnded:{__proto__:null,get(){return!!this._writableState&&this._writableState.ending}},writableNeedDrain:{__proto__:null,get(){const K=this._writableState;return!!K&&!K.destroyed&&!K.ending&&K.needDrain}},writableHighWaterMark:{__proto__:null,get(){return this._writableState&&this._writableState.highWaterMark}},writableCorked:{__proto__:null,get(){return this._writableState?this._writableState.corked:0}},writableLength:{__proto__:null,get(){return this._writableState&&this._writableState.length}},errored:{__proto__:null,enumerable:!1,get(){return this._writableState?this._writableState.errored:null}},writableAborted:{__proto__:null,enumerable:!1,get:function(){return!(this._writableState.writable===!1||!this._writableState.destroyed&&!this._writableState.errored||this._writableState.finished)}}});const nt=b.destroy;let yt;function lt(){return yt===void 0&&(yt={}),yt}Y.prototype.destroy=function(K,st){const mt=this._writableState;return!mt.destroyed&&(mt.bufferedIndex<mt.buffered.length||mt[U].length)&&c.nextTick(Mt,mt),nt.call(this,K,st),this},Y.prototype._undestroy=b.undestroy,Y.prototype._destroy=function(K,st){st(K)},Y.prototype[v.captureRejectionSymbol]=function(K){this.destroy(K)},Y.fromWeb=function(K,st){return lt().newStreamWritableFromWritableStream(K,st)},Y.toWeb=function(K){return lt().newWritableStreamFromStreamWritable(K)}},6547:(o,a,l)=>{const{ArrayIsArray:c,ArrayPrototypeIncludes:u,ArrayPrototypeJoin:d,ArrayPrototypeMap:p,NumberIsInteger:m,NumberIsNaN:h,NumberMAX_SAFE_INTEGER:g,NumberMIN_SAFE_INTEGER:y,NumberParseInt:_,ObjectPrototypeHasOwnProperty:M,RegExpPrototypeExec:v,String:x,StringPrototypeToUpperCase:w,StringPrototypeTrim:b}=l(9061),{hideStackFrames:E,codes:{ERR_SOCKET_BAD_PORT:L,ERR_INVALID_ARG_TYPE:T,ERR_INVALID_ARG_VALUE:P,ERR_OUT_OF_RANGE:G,ERR_UNKNOWN_SIGNAL:X}}=l(4381),{normalizeEncoding:$}=l(6087),{isAsyncFunction:O,isArrayBufferView:B}=l(6087).types,C={},Z=/^[0-7]+$/,D=E((Q,nt,yt=y,lt=g)=>{if(typeof Q!="number")throw new T(nt,"number",Q);if(!m(Q))throw new G(nt,"an integer",Q);if(Q<yt||Q>lt)throw new G(nt,`>= ${yt} && <= ${lt}`,Q)}),tt=E((Q,nt,yt=-2147483648,lt=2147483647)=>{if(typeof Q!="number")throw new T(nt,"number",Q);if(!m(Q))throw new G(nt,"an integer",Q);if(Q<yt||Q>lt)throw new G(nt,`>= ${yt} && <= ${lt}`,Q)}),rt=E((Q,nt,yt=!1)=>{if(typeof Q!="number")throw new T(nt,"number",Q);if(!m(Q))throw new G(nt,"an integer",Q);const lt=yt?1:0,K=4294967295;if(Q<lt||Q>K)throw new G(nt,`>= ${lt} && <= ${K}`,Q)});function U(Q,nt){if(typeof Q!="string")throw new T(nt,"string",Q)}const N=E((Q,nt,yt)=>{if(!u(yt,Q)){const lt=d(p(yt,K=>typeof K=="string"?`'${K}'`:x(K)),", ");throw new P(nt,Q,"must be one of: "+lt)}});function H(Q,nt){if(typeof Q!="boolean")throw new T(nt,"boolean",Q)}function Y(Q,nt,yt){return Q!=null&&M(Q,nt)?Q[nt]:yt}const et=E((Q,nt,yt=null)=>{const lt=Y(yt,"allowArray",!1),K=Y(yt,"allowFunction",!1);if(!Y(yt,"nullable",!1)&&Q===null||!lt&&c(Q)||typeof Q!="object"&&(!K||typeof Q!="function"))throw new T(nt,"Object",Q)}),ut=E((Q,nt)=>{if(Q!=null&&typeof Q!="object"&&typeof Q!="function")throw new T(nt,"a dictionary",Q)}),ct=E((Q,nt,yt=0)=>{if(!c(Q))throw new T(nt,"Array",Q);if(Q.length<yt)throw new P(nt,Q,`must be longer than ${yt}`)}),ot=E((Q,nt="buffer")=>{if(!B(Q))throw new T(nt,["Buffer","TypedArray","DataView"],Q)}),dt=E((Q,nt)=>{if(Q!==void 0&&(Q===null||typeof Q!="object"||!("aborted"in Q)))throw new T(nt,"AbortSignal",Q)}),It=E((Q,nt)=>{if(typeof Q!="function")throw new T(nt,"Function",Q)}),Mt=E((Q,nt)=>{if(typeof Q!="function"||O(Q))throw new T(nt,"Function",Q)}),V=E((Q,nt)=>{if(Q!==void 0)throw new T(nt,"undefined",Q)}),_t=/^(?:<[^>]*>)(?:\s*;\s*[^;"\s]+(?:=(")?[^;"\s]*\1)?)*$/;function ht(Q,nt){if(Q===void 0||!v(_t,Q))throw new P(nt,Q,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}o.exports={isInt32:function(Q){return Q===(0|Q)},isUint32:function(Q){return Q===Q>>>0},parseFileMode:function(Q,nt,yt){if(Q===void 0&&(Q=yt),typeof Q=="string"){if(v(Z,Q)===null)throw new P(nt,Q,"must be a 32-bit unsigned integer or an octal string");Q=_(Q,8)}return rt(Q,nt),Q},validateArray:ct,validateStringArray:function(Q,nt){ct(Q,nt);for(let yt=0;yt<Q.length;yt++)U(Q[yt],`${nt}[${yt}]`)},validateBooleanArray:function(Q,nt){ct(Q,nt);for(let yt=0;yt<Q.length;yt++)H(Q[yt],`${nt}[${yt}]`)},validateBoolean:H,validateBuffer:ot,validateDictionary:ut,validateEncoding:function(Q,nt){const yt=$(nt),lt=Q.length;if(yt==="hex"&&lt%2!=0)throw new P("encoding",nt,`is invalid for data of length ${lt}`)},validateFunction:It,validateInt32:tt,validateInteger:D,validateNumber:function(Q,nt,yt=void 0,lt){if(typeof Q!="number")throw new T(nt,"number",Q);if(yt!=null&&Q<yt||lt!=null&&Q>lt||(yt!=null||lt!=null)&&h(Q))throw new G(nt,`${yt!=null?`>= ${yt}`:""}${yt!=null&&lt!=null?" && ":""}${lt!=null?`<= ${lt}`:""}`,Q)},validateObject:et,validateOneOf:N,validatePlainFunction:Mt,validatePort:function(Q,nt="Port",yt=!0){if(typeof Q!="number"&&typeof Q!="string"||typeof Q=="string"&&b(Q).length===0||+Q!=+Q>>>0||Q>65535||Q===0&&!yt)throw new L(nt,Q,yt);return 0|Q},validateSignalName:function(Q,nt="signal"){if(U(Q,nt),C[Q]===void 0)throw C[w(Q)]!==void 0?new X(Q+" (signals must use all capital letters)"):new X(Q)},validateString:U,validateUint32:rt,validateUndefined:V,validateUnion:function(Q,nt,yt){if(!u(yt,Q))throw new T(nt,`('${d(yt,"|")}')`,Q)},validateAbortSignal:dt,validateLinkHeaderValue:function(Q){if(typeof Q=="string")return ht(Q,"hints"),Q;if(c(Q)){const nt=Q.length;let yt="";if(nt===0)return yt;for(let lt=0;lt<nt;lt++){const K=Q[lt];ht(K,"hints"),yt+=K,lt!==nt-1&&(yt+=", ")}return yt}throw new P("hints",Q,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}}},4381:(o,a,l)=>{const{format:c,inspect:u,AggregateError:d}=l(6087),p=globalThis.AggregateError||d,m=Symbol("kIsNodeError"),h=["string","function","number","object","Function","Object","boolean","bigint","symbol"],g=/^([A-Z][a-z0-9]*)+$/,y={};function _(b,E){if(!b)throw new y.ERR_INTERNAL_ASSERTION(E)}function M(b){let E="",L=b.length;const T=b[0]==="-"?1:0;for(;L>=T+4;L-=3)E=`_${b.slice(L-3,L)}${E}`;return`${b.slice(0,L)}${E}`}function v(b,E,L){L||(L=Error);class T extends L{constructor(...G){super(function(X,$,O){if(typeof $=="function")return _($.length<=O.length,`Code: ${X}; The provided arguments length (${O.length}) does not match the required ones (${$.length}).`),$(...O);const B=($.match(/%[dfijoOs]/g)||[]).length;return _(B===O.length,`Code: ${X}; The provided arguments length (${O.length}) does not match the required ones (${B}).`),O.length===0?$:c($,...O)}(b,E,G))}toString(){return`${this.name} [${b}]: ${this.message}`}}Object.defineProperties(T.prototype,{name:{value:L.name,writable:!0,enumerable:!1,configurable:!0},toString:{value(){return`${this.name} [${b}]: ${this.message}`},writable:!0,enumerable:!1,configurable:!0}}),T.prototype.code=b,T.prototype[m]=!0,y[b]=T}function x(b){const E="__node_internal_"+b.name;return Object.defineProperty(b,"name",{value:E}),b}class w extends Error{constructor(E="The operation was aborted",L=void 0){if(L!==void 0&&typeof L!="object")throw new y.ERR_INVALID_ARG_TYPE("options","Object",L);super(E,L),this.code="ABORT_ERR",this.name="AbortError"}}v("ERR_ASSERTION","%s",Error),v("ERR_INVALID_ARG_TYPE",(b,E,L)=>{_(typeof b=="string","'name' must be a string"),Array.isArray(E)||(E=[E]);let T="The ";b.endsWith(" argument")?T+=`${b} `:T+=`"${b}" ${b.includes(".")?"property":"argument"} `,T+="must be ";const P=[],G=[],X=[];for(const O of E)_(typeof O=="string","All expected entries have to be of type string"),h.includes(O)?P.push(O.toLowerCase()):g.test(O)?G.push(O):(_(O!=="object",'The value "object" should be written as "Object"'),X.push(O));if(G.length>0){const O=P.indexOf("object");O!==-1&&(P.splice(P,O,1),G.push("Object"))}if(P.length>0){switch(P.length){case 1:T+=`of type ${P[0]}`;break;case 2:T+=`one of type ${P[0]} or ${P[1]}`;break;default:{const O=P.pop();T+=`one of type ${P.join(", ")}, or ${O}`}}(G.length>0||X.length>0)&&(T+=" or ")}if(G.length>0){switch(G.length){case 1:T+=`an instance of ${G[0]}`;break;case 2:T+=`an instance of ${G[0]} or ${G[1]}`;break;default:{const O=G.pop();T+=`an instance of ${G.join(", ")}, or ${O}`}}X.length>0&&(T+=" or ")}switch(X.length){case 0:break;case 1:X[0].toLowerCase()!==X[0]&&(T+="an "),T+=`${X[0]}`;break;case 2:T+=`one of ${X[0]} or ${X[1]}`;break;default:{const O=X.pop();T+=`one of ${X.join(", ")}, or ${O}`}}if(L==null)T+=`. Received ${L}`;else if(typeof L=="function"&&L.name)T+=`. Received function ${L.name}`;else if(typeof L=="object"){var $;($=L.constructor)!==null&&$!==void 0&&$.name?T+=`. Received an instance of ${L.constructor.name}`:T+=`. Received ${u(L,{depth:-1})}`}else{let O=u(L,{colors:!1});O.length>25&&(O=`${O.slice(0,25)}...`),T+=`. Received type ${typeof L} (${O})`}return T},TypeError),v("ERR_INVALID_ARG_VALUE",(b,E,L="is invalid")=>{let T=u(E);return T.length>128&&(T=T.slice(0,128)+"..."),`The ${b.includes(".")?"property":"argument"} '${b}' ${L}. Received ${T}`},TypeError),v("ERR_INVALID_RETURN_VALUE",(b,E,L)=>{var T;return`Expected ${b} to be returned from the "${E}" function but got ${L!=null&&(T=L.constructor)!==null&&T!==void 0&&T.name?`instance of ${L.constructor.name}`:"type "+typeof L}.`},TypeError),v("ERR_MISSING_ARGS",(...b)=>{let E;_(b.length>0,"At least one arg needs to be specified");const L=b.length;switch(b=(Array.isArray(b)?b:[b]).map(T=>`"${T}"`).join(" or "),L){case 1:E+=`The ${b[0]} argument`;break;case 2:E+=`The ${b[0]} and ${b[1]} arguments`;break;default:{const T=b.pop();E+=`The ${b.join(", ")}, and ${T} arguments`}}return`${E} must be specified`},TypeError),v("ERR_OUT_OF_RANGE",(b,E,L)=>{let T;return _(E,'Missing "range" argument'),Number.isInteger(L)&&Math.abs(L)>4294967296?T=M(String(L)):typeof L=="bigint"?(T=String(L),(L>2n**32n||L<-(2n**32n))&&(T=M(T)),T+="n"):T=u(L),`The value of "${b}" is out of range. It must be ${E}. Received ${T}`},RangeError),v("ERR_MULTIPLE_CALLBACK","Callback called multiple times",Error),v("ERR_METHOD_NOT_IMPLEMENTED","The %s method is not implemented",Error),v("ERR_STREAM_ALREADY_FINISHED","Cannot call %s after a stream was finished",Error),v("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable",Error),v("ERR_STREAM_DESTROYED","Cannot call %s after a stream was destroyed",Error),v("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),v("ERR_STREAM_PREMATURE_CLOSE","Premature close",Error),v("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF",Error),v("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event",Error),v("ERR_STREAM_WRITE_AFTER_END","write after end",Error),v("ERR_UNKNOWN_ENCODING","Unknown encoding: %s",TypeError),o.exports={AbortError:w,aggregateTwoErrors:x(function(b,E){if(b&&E&&b!==E){if(Array.isArray(E.errors))return E.errors.push(b),E;const L=new p([E,b],E.message);return L.code=E.code,L}return b||E}),hideStackFrames:x,codes:y}},9061:o=>{o.exports={ArrayIsArray:a=>Array.isArray(a),ArrayPrototypeIncludes:(a,l)=>a.includes(l),ArrayPrototypeIndexOf:(a,l)=>a.indexOf(l),ArrayPrototypeJoin:(a,l)=>a.join(l),ArrayPrototypeMap:(a,l)=>a.map(l),ArrayPrototypePop:(a,l)=>a.pop(l),ArrayPrototypePush:(a,l)=>a.push(l),ArrayPrototypeSlice:(a,l,c)=>a.slice(l,c),Error,FunctionPrototypeCall:(a,l,...c)=>a.call(l,...c),FunctionPrototypeSymbolHasInstance:(a,l)=>Function.prototype[Symbol.hasInstance].call(a,l),MathFloor:Math.floor,Number,NumberIsInteger:Number.isInteger,NumberIsNaN:Number.isNaN,NumberMAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER,NumberMIN_SAFE_INTEGER:Number.MIN_SAFE_INTEGER,NumberParseInt:Number.parseInt,ObjectDefineProperties:(a,l)=>Object.defineProperties(a,l),ObjectDefineProperty:(a,l,c)=>Object.defineProperty(a,l,c),ObjectGetOwnPropertyDescriptor:(a,l)=>Object.getOwnPropertyDescriptor(a,l),ObjectKeys:a=>Object.keys(a),ObjectSetPrototypeOf:(a,l)=>Object.setPrototypeOf(a,l),Promise,PromisePrototypeCatch:(a,l)=>a.catch(l),PromisePrototypeThen:(a,l,c)=>a.then(l,c),PromiseReject:a=>Promise.reject(a),ReflectApply:Reflect.apply,RegExpPrototypeTest:(a,l)=>a.test(l),SafeSet:Set,String,StringPrototypeSlice:(a,l,c)=>a.slice(l,c),StringPrototypeToLowerCase:a=>a.toLowerCase(),StringPrototypeToUpperCase:a=>a.toUpperCase(),StringPrototypeTrim:a=>a.trim(),Symbol,SymbolFor:Symbol.for,SymbolAsyncIterator:Symbol.asyncIterator,SymbolHasInstance:Symbol.hasInstance,SymbolIterator:Symbol.iterator,TypedArrayPrototypeSet:(a,l,c)=>a.set(l,c),Uint8Array}},6087:(o,a,l)=>{const c=l(8764),u=Object.getPrototypeOf(async function(){}).constructor,d=globalThis.Blob||c.Blob,p=d!==void 0?function(h){return h instanceof d}:function(h){return!1};class m extends Error{constructor(g){if(!Array.isArray(g))throw new TypeError("Expected input to be an Array, got "+typeof g);let y="";for(let _=0;_<g.length;_++)y+=`    ${g[_].stack}
`;super(y),this.name="AggregateError",this.errors=g}}o.exports={AggregateError:m,kEmptyObject:Object.freeze({}),once(h){let g=!1;return function(...y){g||(g=!0,h.apply(this,y))}},createDeferredPromise:function(){let h,g;return{promise:new Promise((y,_)=>{h=y,g=_}),resolve:h,reject:g}},promisify:h=>new Promise((g,y)=>{h((_,...M)=>_?y(_):g(...M))}),debuglog:()=>function(){},format:(h,...g)=>h.replace(/%([sdifj])/g,function(...[y,_]){const M=g.shift();return _==="f"?M.toFixed(6):_==="j"?JSON.stringify(M):_==="s"&&typeof M=="object"?`${M.constructor!==Object?M.constructor.name:""} {}`.trim():M.toString()}),inspect(h){switch(typeof h){case"string":if(h.includes("'")){if(!h.includes('"'))return`"${h}"`;if(!h.includes("`")&&!h.includes("${"))return`\`${h}\``}return`'${h}'`;case"number":return isNaN(h)?"NaN":Object.is(h,-0)?String(h):h;case"bigint":return`${String(h)}n`;case"boolean":case"undefined":return String(h);case"object":return"{}"}},types:{isAsyncFunction:h=>h instanceof u,isArrayBufferView:h=>ArrayBuffer.isView(h)},isBlob:p},o.exports.promisify.custom=Symbol.for("nodejs.util.promisify.custom")},5099:(o,a,l)=>{const{Buffer:c}=l(8764),{ObjectDefineProperty:u,ObjectKeys:d,ReflectApply:p}=l(9061),{promisify:{custom:m}}=l(6087),{streamReturningOperators:h,promiseReturningOperators:g}=l(4382),{codes:{ERR_ILLEGAL_CONSTRUCTOR:y}}=l(4381),_=l(299),{pipeline:M}=l(9946),{destroyer:v}=l(1195),x=l(8610),w=l(7854),b=l(5874),E=o.exports=l(4870).Stream;E.isDisturbed=b.isDisturbed,E.isErrored=b.isErrored,E.isReadable=b.isReadable,E.Readable=l(911);for(const P of d(h)){let X=function(...$){if(new.target)throw y();return E.Readable.from(p(G,this,$))};var T=X;const G=h[P];u(X,"name",{__proto__:null,value:G.name}),u(X,"length",{__proto__:null,value:G.length}),u(E.Readable.prototype,P,{__proto__:null,value:X,enumerable:!1,configurable:!0,writable:!0})}for(const P of d(g)){let X=function(...O){if(new.target)throw y();return p(G,this,O)};var T=X;const G=g[P];u(X,"name",{__proto__:null,value:G.name}),u(X,"length",{__proto__:null,value:G.length}),u(E.Readable.prototype,P,{__proto__:null,value:X,enumerable:!1,configurable:!0,writable:!0})}E.Writable=l(6304),E.Duplex=l(8672),E.Transform=l(1161),E.PassThrough=l(917),E.pipeline=M;const{addAbortSignal:L}=l(196);E.addAbortSignal=L,E.finished=x,E.destroy=v,E.compose=_,u(E,"promises",{__proto__:null,configurable:!0,enumerable:!0,get:()=>w}),u(M,m,{__proto__:null,enumerable:!0,get:()=>w.pipeline}),u(x,m,{__proto__:null,enumerable:!0,get:()=>w.finished}),E.Stream=E,E._isUint8Array=function(P){return P instanceof Uint8Array},E._uint8ArrayToBuffer=function(P){return c.from(P.buffer,P.byteOffset,P.byteLength)}},7854:(o,a,l)=>{const{ArrayPrototypePop:c,Promise:u}=l(9061),{isIterable:d,isNodeStream:p,isWebStream:m}=l(5874),{pipelineImpl:h}=l(9946),{finished:g}=l(8610);l(2830),o.exports={finished:g,pipeline:function(...y){return new u((_,M)=>{let v,x;const w=y[y.length-1];if(w&&typeof w=="object"&&!p(w)&&!d(w)&&!m(w)){const b=c(y);v=b.signal,x=b.end}h(y,(b,E)=>{b?M(b):_(E)},{signal:v,end:x})})}}},9509:(o,a,l)=>{var c=l(8764),u=c.Buffer;function d(m,h){for(var g in m)h[g]=m[g]}function p(m,h,g){return u(m,h,g)}u.from&&u.alloc&&u.allocUnsafe&&u.allocUnsafeSlow?o.exports=c:(d(c,a),a.Buffer=p),p.prototype=Object.create(u.prototype),d(u,p),p.from=function(m,h,g){if(typeof m=="number")throw new TypeError("Argument must not be a number");return u(m,h,g)},p.alloc=function(m,h,g){if(typeof m!="number")throw new TypeError("Argument must be a number");var y=u(m);return h!==void 0?typeof g=="string"?y.fill(h,g):y.fill(h):y.fill(0),y},p.allocUnsafe=function(m){if(typeof m!="number")throw new TypeError("Argument must be a number");return u(m)},p.allocUnsafeSlow=function(m){if(typeof m!="number")throw new TypeError("Argument must be a number");return c.SlowBuffer(m)}},2830:(o,a,l)=>{o.exports=u;var c=l(7187).EventEmitter;function u(){c.call(this)}l(5717)(u,c),u.Readable=l(9481),u.Writable=l(4229),u.Duplex=l(6753),u.Transform=l(4605),u.PassThrough=l(2725),u.finished=l(8610),u.pipeline=l(9946),u.Stream=u,u.prototype.pipe=function(d,p){var m=this;function h(w){d.writable&&d.write(w)===!1&&m.pause&&m.pause()}function g(){m.readable&&m.resume&&m.resume()}m.on("data",h),d.on("drain",g),d._isStdio||p&&p.end===!1||(m.on("end",_),m.on("close",M));var y=!1;function _(){y||(y=!0,d.end())}function M(){y||(y=!0,typeof d.destroy=="function"&&d.destroy())}function v(w){if(x(),c.listenerCount(this,"error")===0)throw w}function x(){m.removeListener("data",h),d.removeListener("drain",g),m.removeListener("end",_),m.removeListener("close",M),m.removeListener("error",v),d.removeListener("error",v),m.removeListener("end",x),m.removeListener("close",x),d.removeListener("close",x)}return m.on("error",v),d.on("error",v),m.on("end",x),m.on("close",x),d.on("close",x),d.emit("pipe",m),d}},2553:(o,a,l)=>{var c=l(9509).Buffer,u=c.isEncoding||function(x){switch((x=""+x)&&x.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function d(x){var w;switch(this.encoding=function(b){var E=function(L){if(!L)return"utf8";for(var T;;)switch(L){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return L;default:if(T)return;L=(""+L).toLowerCase(),T=!0}}(b);if(typeof E!="string"&&(c.isEncoding===u||!u(b)))throw new Error("Unknown encoding: "+b);return E||b}(x),this.encoding){case"utf16le":this.text=h,this.end=g,w=4;break;case"utf8":this.fillLast=m,w=4;break;case"base64":this.text=y,this.end=_,w=3;break;default:return this.write=M,void(this.end=v)}this.lastNeed=0,this.lastTotal=0,this.lastChar=c.allocUnsafe(w)}function p(x){return x<=127?0:x>>5==6?2:x>>4==14?3:x>>3==30?4:x>>6==2?-1:-2}function m(x){var w=this.lastTotal-this.lastNeed,b=function(E,L,T){if((192&L[0])!=128)return E.lastNeed=0,"�";if(E.lastNeed>1&&L.length>1){if((192&L[1])!=128)return E.lastNeed=1,"�";if(E.lastNeed>2&&L.length>2&&(192&L[2])!=128)return E.lastNeed=2,"�"}}(this,x);return b!==void 0?b:this.lastNeed<=x.length?(x.copy(this.lastChar,w,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(x.copy(this.lastChar,w,0,x.length),void(this.lastNeed-=x.length))}function h(x,w){if((x.length-w)%2==0){var b=x.toString("utf16le",w);if(b){var E=b.charCodeAt(b.length-1);if(E>=55296&&E<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=x[x.length-2],this.lastChar[1]=x[x.length-1],b.slice(0,-1)}return b}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=x[x.length-1],x.toString("utf16le",w,x.length-1)}function g(x){var w=x&&x.length?this.write(x):"";if(this.lastNeed){var b=this.lastTotal-this.lastNeed;return w+this.lastChar.toString("utf16le",0,b)}return w}function y(x,w){var b=(x.length-w)%3;return b===0?x.toString("base64",w):(this.lastNeed=3-b,this.lastTotal=3,b===1?this.lastChar[0]=x[x.length-1]:(this.lastChar[0]=x[x.length-2],this.lastChar[1]=x[x.length-1]),x.toString("base64",w,x.length-b))}function _(x){var w=x&&x.length?this.write(x):"";return this.lastNeed?w+this.lastChar.toString("base64",0,3-this.lastNeed):w}function M(x){return x.toString(this.encoding)}function v(x){return x&&x.length?this.write(x):""}a.StringDecoder=d,d.prototype.write=function(x){if(x.length===0)return"";var w,b;if(this.lastNeed){if((w=this.fillLast(x))===void 0)return"";b=this.lastNeed,this.lastNeed=0}else b=0;return b<x.length?w?w+this.text(x,b):this.text(x,b):w||""},d.prototype.end=function(x){var w=x&&x.length?this.write(x):"";return this.lastNeed?w+"�":w},d.prototype.text=function(x,w){var b=function(L,T,P){var G=T.length-1;if(G<P)return 0;var X=p(T[G]);return X>=0?(X>0&&(L.lastNeed=X-1),X):--G<P||X===-2?0:(X=p(T[G]))>=0?(X>0&&(L.lastNeed=X-2),X):--G<P||X===-2?0:(X=p(T[G]))>=0?(X>0&&(X===2?X=0:L.lastNeed=X-3),X):0}(this,x,w);if(!this.lastNeed)return x.toString("utf8",w);this.lastTotal=b;var E=x.length-(b-this.lastNeed);return x.copy(this.lastChar,0,E),x.toString("utf8",w,E)},d.prototype.fillLast=function(x){if(this.lastNeed<=x.length)return x.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);x.copy(this.lastChar,this.lastTotal-this.lastNeed,0,x.length),this.lastNeed-=x.length}}},n={};function i(o){var a=n[o];if(a!==void 0)return a.exports;var l=n[o]={exports:{}};return e[o](l,l.exports,i),l.exports}i.n=o=>{var a=o&&o.__esModule?()=>o.default:()=>o;return i.d(a,{a}),a},i.d=(o,a)=>{for(var l in a)i.o(a,l)&&!i.o(o,l)&&Object.defineProperty(o,l,{enumerable:!0,get:a[l]})},i.o=(o,a)=>Object.prototype.hasOwnProperty.call(o,a),i.r=o=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})};var s={};return(()=>{i.r(s);var o=i(2141),a={};for(const l in o)l!=="default"&&(a[l]=()=>o[l]);i.d(s,a)})(),s})())})(ud);var ib=ud.exports;function rb(r,t,e){const n=new ArrayBuffer(4),i=new DataView(n);Gh(i,0,e*100),Gh(i,1,0);const s=i.getUint16(0),o=i.getUint16(1),a=new Uint16Array(r*r*r);let l=0,c=!1;return t.forEach(u=>{const d=c?s:o;for(let p=0;p<u;p++)a[l]=d,l++;c=!c}),a}class sb extends HTMLElement{constructor(){super({antialias:!1}),this.should_render=!0,this.fov=45,this.aspect=this.width/this.height,this.near=.01,this.far=20;const t=this;this.renderer=new Nl({antialias:!1}),this.style.width==""&&(this.style.width=`${this.width}px`),this.style.height==""&&(this.style.height=`${this.height}px`),this.renderer.setPixelRatio(1),this.width/this.height,Math.max(this.width,this.height),this.screen_max=800,this.renderer.setSize(this.render_width,this.render_height,!1),this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.appendChild(this.renderer.domElement),this.camera=new xe(this.fov,this.aspect,this.near,this.far),this.controls=new Sa(this.camera,this.renderer.domElement),this.controls.addEventListener("change",function(n){t.should_render=!0}),this.controls.update(),this.renderer.setClearColor(0,0),this.scene=new Dl;function e(){requestAnimationFrame(e),t.controls.update(),t.should_render&&(t.renderer.render(t.scene,t.camera),t.should_render=!1)}e(),this.hasAttribute("src")&&this.loadURL(this.src)}async loadURL(t){this.loadPromise=fetch(t),this.loadPromise.then(async e=>{const n=await e.arrayBuffer(),i=await this.onBufferLoad(n);this.scene.add(i),this.should_render=!0}).catch(e=>{console.error(e)})}load_pose(t,e,n){const i=p=>(p-.5)/n+.5,s=new zt().set(t[0][0],-t[0][1],-t[0][2],i(t[0][3]),t[1][0],-t[1][1],-t[1][2],i(t[1][3]),t[2][0],-t[2][1],-t[2][2],i(t[2][3]),0,0,0,1),o=new W,a=new Se,l=new W;s.decompose(o,a,l),this.up&&(e=this.up);let c=new W(e[0],e[1],e[2]),u=new W(.5,.5,.5);this.controls&&this.controls.dispose(),this.camera.up.copy(c),this.controls=new Sa(this.camera,this.renderer.domElement);const d=this;this.controls.addEventListener("change",function(p){d.should_render=!0}),this.controls.update(),this.camera.setRotationFromQuaternion(a),this.camera.position.copy(o),this.camera.updateMatrix(),this.camera.up.copy(c),this.controls.target.set(u.x,u.y,u.z),this.controls.target0.set(u.x,u.y,u.z)}async onBufferLoad(t){function e(X){const $=new ArrayBuffer(X.length);return new Uint8Array($).set(X),$}const n=await ib.decodeFirst(t),i=new Uint16Array(e(n.ppng_buffer)),s=n.freqs,o=n.n_freqs,a=n.grid_res,l=n.n_feats,c=n.n_quants,u=n.rank,d=n.ppng_type,p=n.render_step,m=-Math.log(1-.01)/p,h=n.up,g=n.poses[0];if(n.n_density_layers.length>1){console.error("Only one density layer is supported");return}const _=n.n_color_layers,M=new Float32Array(e(n.ppng_density_layer_0)),v=Array.from({length:_.length},(X,$)=>new Float32Array(e(n[`ppng_color_layer_${$}`]))),x=Array.from({length:M.length/16},(X,$)=>M.slice($*16,($+1)*16)),w=v.map(X=>Array.from({length:X.length/16},($,O)=>X.slice(O*16,(O+1)*16)));let b=null;switch(d){case 1:const X=o*2*c*u*l,$=i.slice(0*X,1*X),O=i.slice(1*X,2*X),B=i.slice(2*X,3*X);b=Zx(o,c,u,[$,O,B]);break;case 2:const C=o*2*c*c*u*l,Z=i.slice(0*C,1*C),D=i.slice(1*C,2*C),tt=i.slice(2*C,3*C);b=Kx(o,c,u,[Z,D,tt]);break;case 3:b=i;break}const E=Array.from({length:o*2},(X,$)=>b.slice($*c*c*c*4,($+1)*c*c*c*4)),L=n.grid_rles,T=L.length,P=Math.pow(2,T-1),G=L.map((X,$)=>rb(a,X,m+1));return this.load_pose(g,h,P),new eb(o,c,a,s,E,G,x,w,m,P,.01,p)}get src(){return this.getAttribute("src")||""}set src(t){this.setAttribute("src",t)}set height(t){t?this.setAttribute("height",t):this.removeAttribute("height"),this.renderer&&this.camera&&this.onResize()}get height(){return this.getAttribute("height")||1}set width(t){t?this.setAttribute("width",t):this.removeAttribute("width"),this.renderer&&this.camera&&this.onResize()}get width(){return this.getAttribute("width")||1}set render_height(t){t?this.setAttribute("render_height",t):this.removeAttribute("render_height"),this.renderer&&this.camera&&this.onResize()}get render_height(){return this.getAttribute("render_height")||this.getAttribute("height")||1}set render_width(t){t?this.setAttribute("render_width",t):this.removeAttribute("render_width"),this.renderer&&this.camera&&this.onResize()}get render_width(){return this.getAttribute("render_width")||this.getAttribute("width")||1}get up(){const t=this.getAttribute("up");return t?t.split(",").map(e=>parseFloat(e)):null}setAttribute(t,e){switch(super.setAttribute(t,e),t){case"src":this.loadURL(this.src);break;case"width":this.onResize();break;case"height":this.onResize();break;case"render_width":this.onResize();break;case"render_height":this.onResize();break;case"up":this.setCameraUp();break}}flush(){this.should_render=!0}onFileLoad(){this.scene.children.length>0&&this.scene.remove(this.scene.children[0]),this.scene.add(mesh)}onResize(){this.style.width==""&&(this.style.width=`${this.width}px`),this.style.height==""&&(this.style.height=`${this.height}px`),this.renderer.setSize(this.render_width,this.render_height,!1),this.camera.fov=this.fov,this.camera.aspect=this.aspect,this.camera.near=this.near,this.camera.far=this.far,this.camera.updateProjectionMatrix(),this.flush()}setCameraUp(){const t=this.getAttribute("up");this.camera.up.set(t[0],t[1],t[2]),this.controls=new Sa(this.camera,this.renderer.domElement);const e=this;this.controls.addEventListener("change",function(n){e.should_render=!0}),this.flush()}}window.THREE=lx;customElements.define("ppng-viewer",sb);
